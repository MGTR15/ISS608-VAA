---
title: "Take-Home Exercise 2"
author: "Marga Thura"
date: "May 13 2025"
date-modified: "May 17 2025"
editor: visual
format: html
execute:
  eval: true
  echo: true
  warning: false
  freeze: true
---

# Load the necessary libraries

```{r}
pacman::p_load(tidyverse, jsonlite, SmartEDA, tidygraph, ggraph)
```

# Read the data

```{r}
# Read JSON file
mc1_data <- fromJSON("MC1_release/MC1_graph.json")
```

# Overview the data

```{r}
glimpse(mc1_data)
```

# Inspecct structure

```{r}
str(mc1_data, max.level=1)
```

# Extract and Inspect
```{r}
nodes_tbl <- as_tibble(mc1_data$nodes)

edges_tbl <- as_tibble(mc1_data$links)
```

```{r}
ggplot(data = edges_tbl, 
       aes(y = `Edge Type`)) +
      geom_bar()
```

# Creating knowledge graph

Mapping from node id to row index. Ensure each id from your node list is mapped to the correct row number.
```{r}
id_map <- tibble(id = nodes_tbl$id,
                 index = seq_len(
                   nrow(nodes_tbl)))
```

```{r}
edges_tbl <- edges_tbl %>%
  left_join(id_map, by = c("source" = "id")) %>%
  rename(from = index) %>%
  left_join(id_map, by = c("target" = "id")) %>%
  rename(to = index)
```

# Remove the NA

```{r}
edges_tbl <- edges_tbl %>%
 filter(!is.na(from), !is.na(to))
```

# Creating the graph

```{r}
graph <- tbl_graph(nodes = nodes_tbl,
                   edges = edges_tbl,
                   directed = mc1_data$directed)
```

# Visualising the knowledge graph

```{r}
set.seed(1234)
```

# Visualising the whole graph

```{r}
#| eval: false
ggraph(graph, layout = "fr") +
  geom_edge_link(alpha = 0.3,
                 colour = "gray") +
  geom_node_point(aes(color = `Node Type`),
                  size = 4) +
  geom_node_text(aes(label = name),
                 repel = TRUE,
                 size = 2.5) +
  theme_void()
```
# Filter edges to only MemberOf

```{r}
graph_memberof <- graph %>%
  activate(edges) %>% 
  filter(`Edge Type` == "MemberOf")
```

# Extract only connected nodes (used in the edges)

```{r}
used_nodes_indices <- graph_memberof %>%
  activate(edges) %>%
  as_tibble() %>%
  select(from, to) %>%
  unlist() %>%
  unique()
```

# Keep only those nodes

```{r}
graph_memberof <- graph_memberof %>%
  activate(nodes) %>%
  mutate(row_id = row_number()) %>%
  filter(row_id %in% used_nodes_indices) %>%
  select(-row_id)
```


## Plot the sub-graph

```{r}
ggraph(graph_memberof,
       layout = "fr") +
  geom_edge_link(alpha = 0.5,
                 colour = "gray") +
  geom_node_point(aes(color = `Node Type`),
                  size = 1) +
  geom_node_text(aes(label = name),
                 repel = TRUE,
                 size = 2.5) +
  theme_void()
```


