{
  "hash": "3ee13713000458c84a5ccee25888fa9d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-home Exercise 1\"\nauthor: \"Marga Thura\"\ndate: \"May 2 2025\"\ndate-modified: \"May 7 2025\"\nformat: \n  docx:\n    prefer-html: true\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\n\n# **Visualizing the Age and Gender Landscape of Singapore**\n\n# 1 Overview\n\n## 1.1 Setting the scene\n\nA local online media company that publishes daily content on digital platforms is planning to release an article on demographic structures and distribution of Singapore in 2024. This project will explore the demographic structure of Singapore’s resident population as of June 2024, which aims to uncover both national and regional trends in age distribution, gender composition, and population disparities across planning areas.\n\n## 1.2 Tasks\n\nAs the graphical editor of the media company, this project aim to:\n\n1.  Clean and preprocess the demographic dataset.\n\n2.  Design and generate three targeted data visualizations:\n\n-   **Top 10 Planning Areas by Total Population**: A horizontal bar chart focusing on the ten most populous planning areas to highlight urban population concentration, particularly in areas like Tampines, Bedok, and Sengkang.\n\n-   **Population Pyramid by Age and Sex**: A detailed pyramid chart that illustrates Singapore’s national age and gender structure, revealing the dominance of the working-age population, the presence of an aging society, and gender differences in older age groups.\n\n<!-- -->\n\n-   **Age and Gender Distribution in Top 5 Planning Areas**: A set of stacked bar and ridgeline plots showing how population varies by age group and gender within the top five planning areas, offering insights into regional differences in youth, working-age, and elderly populations.\n\n3.  Summarize key insights for each visualization to support the narrative.\n\n# 2 The Data\n\nThe official dataset “Singapore Residents by Planning Area / Subzone, Single Year of Age and Sex” retrieve from [department of statistics](https://www.singstat.gov.sg/) will be used to explore.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load necessary library\nlibrary(readr)\n\n# Read the CSV file from the specified relative path\nrespopagesex2024 <- read_csv(\"TakeHome_01/respopagesex2024.csv\")\n```\n:::\n\n\n\n## 2.1 Loading Packages\n\nThe code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse)\n```\n:::\n\n\n\nBeside tidyverse, following R packages will be used:\n\n-   **ggrepel:** an R package provides geoms for ggplot2 to repel overlapping text labels.\n\n-   **ggthemes:** an R package provides some extra themes, geoms, and scales for ‘ggplot2’.\n\n-   **hrbrthemes:** an R package provides typography-centric themes and theme components for ggplot2.\n\n-   **patchwork:** an R package for preparing composite figure created using ggplot2.\n\n-   **haven:** Enables reading and writing of data files from statistical software packages like SPSS, Stata, and SAS.\n\n-   **ggiraph:** for making ‘ggplot’ graphics interactive.\n\n-   **plotly**: R library for plotting interactive statistical graphs.\n\n-   **DT:** provides an R interface to the JavaScript library DataTables that create interactive table on html page.\n\n-   **knitr:** Facilitates dynamic report generation by integrating R code into documents (used in R Markdown).\n\n-   **scales:** Provides functions for scaling axes and legends in ggplot2 plots, including formatting numbers and dates.\n\n-   **ggridges:** Allows creation of ridgeline plots (overlapping density plots) in ggplot2.\n\n-   **ggpubr:** Enhances ggplot2 with publication-ready themes and functions for common tasks like adding statistical comparisons.\n\n-   **gganimate:** Adds animation capabilities to ggplot2 visualizations.\n\n-   **gapminder:** An excerpt of the data available at Gapminder.org.\n\n-   **ggdist:** Supports visualizations of distributions and uncertainty (e.g., intervals, densities) in ggplot2.\n\n-   **ggtext:** Enables advanced text rendering (e.g., HTML/Markdown) in ggplot2 titles, subtitles, and labels\n\n-   **ggalt:** Provides alternative geoms and statistical transformations not available in core ggplot2.\n\n-   **cowplot:** Offers streamlined tools to align and arrange ggplot2-based plots into panels.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, ggrepel, ggthemes, \n               hrbrthemes, patchwork, \n               haven, ggiraph, plotly, DT, \n               knitr, scales,\n               ggridges, ggpubr, \n               gganimate, gapminder, ggdist, \n               ggtext, ggalt,\n               cowplot)\n```\n:::\n\n\n\n## 2.2 Cleaning data\n\nTo prepare the dataset for all tasks, the following code will loads, cleans, and prepares the demographic data (respopagesex2024.csv) for analysis and visualization to make sure:\n\n-   All numeric columns are actually numeric (for calculations)\n\n-   Categorical columns behave predictably (for grouping)\n\n-   Only analyzing valid population entries (no missing or zero values).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\nlibrary(dplyr)\n\n# Load the dataset\nrespop <- read_csv(\"TakeHome_01/respopagesex2024.csv\")\n\n# Convert types and clean\nrespop_clean <- respop %>%\n  mutate(\n    Pop = as.numeric(Pop),\n    Age = as.numeric(Age),\n    PA = as.factor(PA),\n    SZ = as.factor(SZ),\n    Sex = factor(Sex, levels = c(\"Males\", \"Females\"))\n  ) %>%\n  filter(!is.na(Pop), Pop > 0)\n```\n:::\n\n\n\nThe following code chunk will loads the dataset.\n\n-   Cleans it by ensuring population values are numeric and valid.\n\n-   Aggregates population totals by planning area.\n\n-   Outputs a basic statistical overview of how population is distributed across Singapore’s planning areas.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  library(readr)\n  library(dplyr)\n  library(ggplot2)\n  library(scales)\n\n  # Load and summarize population data\n  respopagesex2024 <- read_csv(\"TakeHome_01/respopagesex2024.csv\")\n  pop_by_pa <- respopagesex2024 %>%\n    mutate(Pop = as.numeric(Pop)) %>%\n    filter(!is.na(Pop) & Pop > 0) %>%\n    group_by(PA) %>%\n    summarise(Total_Pop = sum(Pop, na.rm = TRUE))\n\n  # Check population range\n  print(summary(pop_by_pa$Total_Pop))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n    140    8432   94700   99846  157685  284950 \n```\n\n\n:::\n:::\n\n\n\nThe following code chunk will loads the dataset, deep clean and check for missing or abnormal entries.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(respopagesex2024)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      PA                 SZ                Age                Sex           \n Length:60424       Length:60424       Length:60424       Length:60424      \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n      Pop              Time     \n Min.   :   0.0   Min.   :2024  \n 1st Qu.:   0.0   1st Qu.:2024  \n Median :  20.0   Median :2024  \n Mean   :  69.4   Mean   :2024  \n 3rd Qu.:  90.0   3rd Qu.:2024  \n Max.   :1180.0   Max.   :2024  \n```\n\n\n:::\n\n```{.r .cell-code}\nany(is.na(respopagesex2024$PA))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(is.na(respopagesex2024$SZ))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(respopagesex2024$PA == \"\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n:::\n\n\n\n# 3 Distribution of Population Across Singapore’s Planning Areas\n\n## Plot 1\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(scales)\nlibrary(readr)\n\n# Load data\nrespopagesex2024 <- read_csv(\"TakeHome_01/respopagesex2024.csv\")\n\n# Clean and summarize population by PA\npop_by_pa <- respopagesex2024 %>%\n  mutate(Pop = as.numeric(Pop)) %>%\n  filter(!is.na(Pop) & Pop > 0) %>%\n  group_by(PA) %>%\n  summarise(\n    Total_Pop = sum(Pop, na.rm = TRUE),\n    Num_Subzones = n_distinct(SZ)\n  ) %>%\n  arrange(desc(Total_Pop)) %>%\n  slice_max(order_by = Total_Pop, n = 10) \n\n# Plot\nggplot(pop_by_pa, aes(x = reorder(PA, Total_Pop), y = Total_Pop)) +\n  geom_bar(stat = \"identity\", fill = \"grey70\", color = \"grey90\") +\n  geom_text(aes(label = comma(Total_Pop)), hjust = -0.1, size = 3.5) +  # Add labels\n  coord_flip() +  # Horizontal bars\n  theme_minimal() +\n  labs(\n    title = \"Top 10 Most Populous Planning Areas (2024)\",\n    x = \"Planning Area\",\n    y = \"Total Population\"\n  ) +\n  scale_y_continuous(\n    labels = comma,\n    limits = c(0, max(pop_by_pa$Total_Pop) * 1.1)  # Extra space for text\n  )\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-docx/unnamed-chunk-7-1.png)\n:::\n:::\n\n\n\n## Plot 2\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\n# Disable scientific notation globally\noptions(scipen = 999)\n\n# Load data\nrespopagesex2024 <- read_csv(\"TakeHome_01/respopagesex2024.csv\")\n\n# Trim whitespace from PA and SZ\nrespopagesex2024 <- respopagesex2024 %>%\n  mutate(\n    PA = trimws(PA),\n    SZ = trimws(SZ)\n  )\n\n# Clean and summarize population by PA, including subzone count\npop_by_pa <- respopagesex2024 %>%\n  mutate(Pop = as.numeric(Pop)) %>%\n  filter(!is.na(Pop) & Pop > 0) %>%\n  group_by(PA) %>%\n  summarise(\n    Total_Pop = sum(Pop, na.rm = TRUE),\n    Num_Subzones = n_distinct(SZ)  # Count unique subzones per PA\n  ) %>%\n  arrange(desc(Total_Pop))\n\n# Create bar chart\np <- ggplot(data = pop_by_pa, aes(x = reorder(PA, Total_Pop), y = Total_Pop)) +\n  geom_bar(\n    stat = \"identity\",\n    fill = \"grey70\",\n    color = \"grey90\"\n  ) +\n  geom_text(\n    aes(label = comma(Total_Pop)),\n    angle = 90,      # Keep text horizontal\n    hjust = 0.5,    # Center horizontally\n    vjust = -0.5,   # Above the bar\n    size = 3\n  ) +\n  theme_bw() +\n  ggtitle(\"Population Per Planning Area (2024)\") +\n  xlab(\"Planning Area\") +\n  ylab(\"Total Population\") +\n  theme(\n    axis.text.x = element_text(angle = 55, hjust = 1)\n  ) +\n  scale_y_continuous(\n    labels = comma,\n    breaks = seq(0, ceiling(max(pop_by_pa$Total_Pop, na.rm = TRUE) / 100000) * 100000, by = 100000),\n    limits = c(0, ceiling(max(pop_by_pa$Total_Pop, na.rm = TRUE) / 100000) * 100000)\n  )\n\nprint(p)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-docx/unnamed-chunk-8-1.png)\n:::\n:::\n\n\n\n## Insight\n\n-   Plot 1, a bar chart, lists the top 10 most populous planning areas (PAs): Tampines (284,950), Bedok (277,660), Sengkang (265,550), Jurong West (257,910), Woodlands (255,510), Yishun (230,320), Hougang (228,780), Punggol (199,880), Choa Chu Kang (190,640), and Bukit Batok (168,390). This highlights Tampines as the densest hub.\n\n-   Plot 2, a stacked bar chart, shows total population across all PAs, with the top 10 aligning with Plot 1’s rankings, peaking at Tampines and tapering off in less populated areas like Western Water Catchment.\n\n-   Both plots confirm a concentration of population in urban PAs, with a clear hierarchy led by Tampines, Bedok, and Sengkang. This indicate a need for targeted infrastructure and services in these high-density areas, with potential resource allocation challenges in less populated regions.\n\n# 4 Distribution of Singapore’s Population by Age and Gender\n\n## Plot 1\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nlibrary(ggplot2)\nlibrary(dplyr)\n\n# Group into 5-year bins and summarise\npyramid_data <- respopagesex2024 %>%\n  mutate(\n    Age = as.numeric(Age),\n    Age_Group = cut(Age,\n                    breaks = seq(0, 100, by = 5),\n                    labels = paste(seq(0, 95, by = 5), seq(4, 99, by = 5), sep = \"-\"),\n                    include.lowest = TRUE)\n  ) %>%\n  filter(Sex %in% c(\"Males\", \"Females\")) %>%\n  group_by(Age_Group, Sex) %>%\n  summarise(Total_Pop = sum(Pop, na.rm = TRUE), .groups = \"drop\") %>%\n  mutate(Population = ifelse(Sex == \"Males\", -Total_Pop, Total_Pop))\n\n# Ensure proper order for Age_Group\npyramid_data$Age_Group <- factor(pyramid_data$Age_Group, levels = unique(pyramid_data$Age_Group))\n\n# Plot the age pyramid\nggplot(pyramid_data, aes(x = Population, y = Age_Group, fill = Sex)) +\n  geom_bar(stat = \"identity\") +\n  scale_x_continuous(labels = abs, name = \"Population\") +\n  scale_y_discrete(name = \"Age Group\") +\n  scale_fill_manual(values = c(\"Males\" = \"grey70\", \"Females\" = \"grey90\")) +\n  theme_bw() +\n  ggtitle(\"Singapore Population Pyramid (2024)\") +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-docx/unnamed-chunk-9-1.png)\n:::\n:::\n\n\n\n## Plot 2\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nlibrary(readr)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(scales)\n\n# Disable scientific notation\noptions(scipen = 999)\n\n# Load data\nrespopagesex2024 <- read_csv(\"TakeHome_01/respopagesex2024.csv\")\n\n# Convert Age Seyfert’s correction for age groups\npop_by_age <- respopagesex2024 %>%\n  mutate(\n    Pop = as.numeric(Pop),\n    Age_Num = case_when(\n      Age == \"90_and_Over\" ~ 90,\n      TRUE ~ as.numeric(gsub(\"–.*\", \"\", Age)) + 2.5  # Midpoint of 5-year age groups\n    )\n  ) %>%\n  filter(!is.na(Pop) & Pop > 0)\n\n# Expand data to represent each individual\nage_data <- pop_by_age %>%\n  uncount(Pop)  # Repeats each row by Pop value\n\n# Create histogram\np <- ggplot(data = age_data, aes(x = Age_Num)) +\n  geom_histogram(\n    binwidth = 5,  # 5-year age bins\n    fill = \"grey70\",\n    color = \"grey90\"\n  ) +\n  theme_bw() +\n  ggtitle(\"Age Distribution of Singapore Population, 2024\") +\n  xlab(\"Age (Years)\") +\n  ylab(\"Population\") +\n  scale_x_continuous(\n    breaks = seq(0, 100, by = 10),\n    limits = c(0, 100)\n  ) +\n  scale_y_continuous(labels = comma)\n\n# Render plot\nprint(p)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-docx/unnamed-chunk-10-1.png)\n:::\n:::\n\n\n\n## Insight\n\n-   Plot 1, a population pyramid, shows the age and gender distribution across the entire population, with a broad working-age base (30–59), a smaller youth (0–19), and aN elderly group (60–80+). Females slightly outnumber males in the 70+ age groups, reflecting higher life expectancy.\n\n-   Plot 2, a histogram, displays the overall age distribution, confirming the working-age peak (30–50 years), a small youth population, and a gradual increase in elderly (60–80+), with a slight female skew in older ages.\n\n-   Together, they highlight Singapore’s aging population, with a shrinking youth base, a dominant working-age group, and a gender imbalance in the elderly (more females). This indicate a need for eldercare (especially for females), workforce support, and policies to address low birth rates.\n\n# 5 Distribution of Population and Age Across Top Five Planning Areas by Gender and Age Group\n\n## Plot 1\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nlibrary(readr)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(scales)\n\n# Disable scientific notation\noptions(scipen = 999)\n\n# Load data\nrespopagesex2024 <- read_csv(\"TakeHome_01/respopagesex2024.csv\")\n\n# Create age groups\npop_by_pa_age <- respopagesex2024 %>%\n  mutate(\n    Pop = as.numeric(Pop),\n    Age = ifelse(Age == \"90_and_Over\", 90, as.numeric(Age)),\n    Age_Group = case_when(\n      Age <= 19 ~ \"0–19\",\n      Age <= 39 ~ \"20–39\",\n      Age <= 59 ~ \"40–59\",\n      Age <= 79 ~ \"60–79\",\n      TRUE ~ \"80+\"\n    )\n  ) %>%\n  filter(!is.na(Pop) & Pop > 0) %>%\n  group_by(PA, Age_Group) %>%\n  summarise(\n    Pop = sum(Pop, na.rm = TRUE),\n    Num_Subzones = n_distinct(SZ)\n  ) %>%\n  ungroup()\n\n# Calculate total population per PA for ordering and select top 10\npa_order <- pop_by_pa_age %>%\n  group_by(PA) %>%\n  summarise(Total_Pop = sum(Pop)) %>%\n  arrange(desc(Total_Pop)) %>%\n  slice_head(n = 5)\n\n# Filter data to top 10 PAs\npop_by_pa_age <- pop_by_pa_age %>%\n  filter(PA %in% pa_order$PA)\n\n# Add total population\npop_by_pa_age <- pop_by_pa_age %>%\n  left_join(pa_order, by = \"PA\")\n\n# Create stacked bar chart\np1 <- ggplot(data = pop_by_pa_age, aes(x = reorder(PA, Total_Pop), y = Pop, fill = Age_Group)) +\n  geom_bar(\n    stat = \"identity\",\n    position = \"stack\"  # Stacked bars\n  ) +\n  theme_bw() +\n  ggtitle(\"Population by Top 5 Planning Areas and Age Group, Singapore 2024\") +\n  xlab(\"Planning Area\") +\n  ylab(\"Population\") +\n  theme(\n    axis.text.x = element_text(angle = 55, hjust = 1)\n  ) +\n  scale_y_continuous(\n    labels = comma,\n    breaks = seq(0, ceiling(max(pa_order$Total_Pop, na.rm = TRUE) / 100000) * 100000, by = 100000),\n    limits = c(0, ceiling(max(pa_order$Total_Pop, na.rm = TRUE) / 100000) * 100000)\n  ) +\n  scale_fill_manual(values = c(\"0–19\" = \"grey95\", \"20–39\" = \"grey80\", \"40–59\" = \"grey65\", \"60–79\" = \"grey50\", \"80+\" = \"grey35\"))\n\n# Render plot\nprint(p1)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-docx/unnamed-chunk-11-1.png)\n:::\n:::\n\n\n\n## Plot 2\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nlibrary(readr)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(scales)\nlibrary(ggridges)\n\n# Disable scientific notation\noptions(scipen = 999)\n\n# Load data\nrespopagesex2024 <- read_csv(\"TakeHome_01/respopagesex2024.csv\")\n\n# Prepare data: Convert Age to numeric\npop_data <- respopagesex2024 %>%\n  mutate(\n    Pop = as.numeric(Pop),\n    Age_Num = case_when(\n      Age == \"90_and_Over\" ~ 90,\n      TRUE ~ as.numeric(gsub(\"–.*\", \"\", Age)) + 2.5  # Midpoint of 5-year age groups\n    )\n  ) %>%\n  filter(!is.na(Pop) & Pop > 0 & !is.na(Age_Num))\n\n# Order PAs by total population and select top 10\npa_order <- pop_data %>%\n  group_by(PA) %>%\n  summarise(Total_Pop = sum(Pop, na.rm = TRUE)) %>%\n  arrange(desc(Total_Pop)) %>%\n  slice_head(n = 5) %>%\n  pull(PA)\n\n# Filter data to top 10 PAs\nage_data <- pop_data %>%\n  filter(PA %in% pa_order) %>%\n  uncount(Pop)  # Expand data to represent each individual (weighted by Pop)\n\n# Create ridgeline plot\np2 <- ggplot(data = age_data, aes(x = Age_Num, y = factor(PA, levels = rev(pa_order)), height = ..density..)) +\n  geom_density_ridges(\n    stat = \"density\",\n    fill = \"grey20\",\n    color = \"grey90\",\n    scale = 1.5,  # Controls ridge overlap\n    alpha = 1.5\n  ) +\n  facet_wrap(~ Sex, ncol = 2) +\n  theme_bw() +\n  ggtitle(\"Age Distribution in Top 5 Populated Planning Areas by Gender, Singapore 2024\") +\n  xlab(\"Age (Years)\") +\n  ylab(\"Planning Area\") +\n  scale_x_continuous(\n    breaks = seq(0, 100, by = 20),\n    limits = c(0, 100)\n  ) +\n  theme(\n    axis.text.y = element_text(size = 12),  # Larger text for fewer PAs\n    axis.text.x = element_text(size = 12),\n    axis.title = element_text(size = 12),\n    plot.title = element_text(size = 15),\n    strip.text = element_text(size = 12),\n    strip.background = element_rect(fill = \"grey90\")\n  )\n\n# Render plot\nprint(p2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-docx/unnamed-chunk-12-1.png)\n:::\n:::\n\n\n\n## Insight\n\n-   Both plots provide insights into Singapore’s 2024 population across the top 5 planning areas (PAs): Tampines, Bedok, Sengkang, Jurong West, and Woodlands.\n\n-   The stacked bar chart (Plot 1) shows Tampines as the most populous (300,000), with a dominant working-age group (20–59) across all PAs, a small youth group (0–19), and notable elderly groups (60–80+) in Bedok and Woodlands.\n\n-   The ridgeline plot (Plot 2) confirms these trends, highlighting working-age peaks at 30–50, a young peak in Sengkang (0–20), and broader elderly curves in Bedok and Woodlands.\n\n-   Gender-wise, females show higher elderly presence (60–80+), while males peak at 30–50. Sengkang is likely family-oriented, while Bedok and Woodlands are aging, and Tampines and Jurong West are balanced.\n\n# 6 Summary and Conclusion\n\nThis project visually explores Singapore’s 2024 resident population using official demographic data to highlight trends in age, gender, and regional distribution.\n\nKey findings:\n\n-   **Urban areas are densely populated**: The top 10 planning zones Tampines, Bedok, and Sengkang hold a large share of residents, creating demands for infrastructure.\n\n-   **Age and gender patterns**: Most people fall within the working-age group (30–59), with fewer young residents and a rising elderly population (especially women), reflecting longer life expectancy.\n\n-   **Regional differences**: Each area has unique demographics Sengkang has a younger population, Bedok and Woodlands have more elderly residents, and Tampines and Jurong West are more balanced.\n\nOverall, Singapore’s population is aging, with varying needs across regions. Policymakers should adapt by improving eldercare in aging areas, supporting youth and families where needed, and scaling public services in crowded districts. These visuals can help people understand these trends and guide decisions in urban planning, healthcare, and social services.\n\n# 7 References\n\n[Create Elegant Data Visualisations Using the Grammar of Graphics • ggplot2](https://ggplot2.tidyverse.org//index.html)\n\n[Quarto](https://quarto.org/)\n\n[Fundamentals of Data Visualization](https://clauswilke.com/dataviz/)\n\n# 8 Take Home Exercise 1 (Part 2)\n\n# 8.1 Task\n\nSelecting one submission provided by your classmate, critic three good design principles and three areas for further improvement. With reference to the comment, prepare the makeover version of the data visualisation.\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n\n# 8.2 Class mate original plot\n\n## View Column Names and Adjust Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(respopagesex2024)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"PA\"   \"SZ\"   \"Age\"  \"Sex\"  \"Pop\"  \"Time\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\ndf <- tibble(\n  PA = c(\"Planning Area\"),\n  SZ = c(\"Subzone\"),\n  Age = c(\"Age\"),\n  Sex = c(\"Sex\"),\n  Pop = c(\"Population\"),\n  Time = c(\"Time\")\n)\n\ndf %>%\n  knitr::kable(caption = \"Column Information\")\n```\n\n::: {.cell-output-display}\n\n\nTable: Column Information\n\n|PA            |SZ      |Age |Sex |Pop        |Time |\n|:-------------|:-------|:---|:---|:----------|:----|\n|Planning Area |Subzone |Age |Sex |Population |Time |\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n\ndf_percent <- respopagesex2024 %>%\n  mutate(\n    Age = as.numeric(Age),\n    AgeGroup = case_when(\n      Age <= 14 ~ \"Children\",\n      Age >= 15 & Age <= 64 ~ \"Adults\",\n      Age >= 65 ~ \"Seniors\",\n      TRUE ~ NA_character_\n    )\n  ) %>%\n  group_by(PA, AgeGroup) %>%\n  summarise(Population = sum(Pop), .groups = \"drop\") %>%\n  group_by(PA) %>%\n  mutate(\n    Total_Pop = sum(Population),\n    Percent = Population / Total_Pop * 100\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_summary <- df_clean %>%\n  group_by(PA) %>%\n  summarise(\n    Total_Pop = sum(Pop, na.rm = TRUE),\n    .groups = \"drop\"\n  ) %>%\n  arrange(desc(Total_Pop))\n```\n:::\n\n\n\n## Plot\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nbottom10_pa <- df_summary %>%\n  slice_min(Total_Pop, n = 10) %>%\n  pull(PA)\n\ndf_summary_filtered <- df_summary %>%\n  filter(!PA %in% bottom10_pa)\n\nggplot(df_summary_filtered, aes(x = reorder(PA, -Total_Pop), y = Total_Pop)) +\n  geom_bar(stat = \"identity\", color = \"black\", fill = \"lightblue\", width = 0.75) +\n  scale_y_continuous(labels = scales::comma, expand = c(0, 0)) +  \n  labs(\n    x = \"Planning Area\",\n    y = \"Total Population\",\n    title = \"Total Population by Planning Area (2024)\"\n  ) +\n  theme_classic(base_size = 12) +\n  theme(axis.text.x = element_text(angle = 55, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-docx/unnamed-chunk-21-1.png)\n:::\n:::\n\n\n\n# 8.3 Three Good Design Principles from the Plot\n\n1.  Clear Use of Ordering to Enhance Comparison\n\n-   Reordering planning areas by descending total population makes it easy to compare across areas, aligning with principle of sorting in order for clarity in bar charts.\n\n2.  Strong Axis Labels and Title\n\n-   The chart uses clear, readable labels and a descriptive title (\"Total Population by Planning Area (2024)\"), fulfilling Wilke’s principle that charts should be self-explanatory without additional context.\n\n-   Fundamentals of Data Visualization - <https://clauswilke.com/dataviz/>\n\n3.  Good Use of Color and Simplicity\n\n-   Light blue fill and black borders provide clear visual contrast without being complex to read.\n\n# 8.4 Three Areas that could be improved\n\n1.  Overcrowded X-Axis Labels\n\n-   The 45°-rotated text is still hard to read due to the large number of planning areas. This decreases clarity. It could improve by switching to a horizontal bar chart, especially for ranked data with long labels.\n\n2.  No Indication of Units on the Y-Axis\n\n-   The y-axis is labeled \"Total Population\" but doesn’t specify units. Improving it to \"Total Population (number of people)\" can adds clarity.\n\n3.  Inefficient Use of Vertical Space\n\n-   The chart uses a lot of horizontal space while squeezing the bars vertically. In this case, a horizontal layout (coord_flip) would better fit long categorical labels and allow taller bars for clearer visual impact.\n\n# 8.5 Makeover version\n\n-   Highlighted the Top 3 most populated planning areas\n\n-   Added a subtitle for insight\n\n-   Added population for each area for information\n\n-   Kept a clean layout with horizontal bars\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(scales)\n\ndf_highlighted <- df_summary_filtered %>%\n  mutate(Highlight = ifelse(PA %in% c(\"Tampines\", \"Bedok\", \"Sengkang\"), \"Top 3\", \"Others\"))\n\nggplot(df_highlighted, aes(\n    x = reorder(PA, Total_Pop),\n    y = Total_Pop,\n    fill = Highlight\n  )) +\n  geom_bar(stat = \"identity\", color = \"black\", width = 0.75) +\n  geom_text(  \n    aes(label = comma(Total_Pop)),\n    hjust = -0.1,\n    size = 2\n  ) +\n  scale_fill_manual(values = c(\"Top 3\" = \"tomato\", \"Others\" = \"lightblue\")) +\n  coord_flip() +\n  scale_y_continuous(labels = comma_format(), expand = expansion(mult = c(0, 0.15))) +\n  labs(\n    title = \"Total Population by Planning Area (2024)\",\n    subtitle = \"Tampines, Bedok, and Sengkang have the largest populations\",\n    x = \"Planning Area\",\n    y = \"Total Population (number of people)\",\n    fill = NULL\n  ) +\n  theme_classic(base_size = 12) +\n  theme(\n    axis.text.y = element_text(size = 6),\n    legend.position = \"none\"\n  )\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-docx/unnamed-chunk-22-1.png)\n:::\n:::\n",
    "supporting": [
      "Take-home_Ex01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}