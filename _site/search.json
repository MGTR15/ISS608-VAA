[
  {
    "objectID": "Take-home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#performer-influence-type-breakdown",
    "href": "Take-home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#performer-influence-type-breakdown",
    "title": "Take-home Exercise 3",
    "section": "Performer Influence Type Breakdown",
    "text": "Performer Influence Type Breakdown\nThis tab introduces users to the different influence types that shaped Sailor Shift’s musical career over time.\n\nThe “Choose Performer” dropdown at the top of the sidebar allows users to select any artist in the dataset, not just Sailor Shift.\nOnce a performer is selected, all relevant visualizations and data tables across the dashboard update accordingly.\nThis includes:\n\nThe Influence Type Breakdown, which adjusts to show how the selected artist was influenced across five musical influence types.\nThe Yearly Top Influencer chart, which recalculates weighted influence scores specific to the chosen artist’s discography and timeline.\n\nIn other tabs, such as Collaborations and Influence Graph, the system traces collaborations and downstream influence for the selected performer, dynamically adapting the content of tables and networks.\nThis flexible feature ensures that the dashboard functions as a general-purpose career and influence analysis tool for any artist within the Oceanus Folk dataset, making it scalable, exploratory, and comparative.\nInteractive Features:\n\nA horizontal bar chart shows counts of influence types such as InStyleOf, CoverOf, DirectlySamples, etc.\nUsers can toggle Weighted Influence Scoring to factor in the rarity of each influence type.\nDropdown filter allows users to limit the chart to a specific influence type."
  },
  {
    "objectID": "Take-home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#most-influential-performer-by-release-year",
    "href": "Take-home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#most-influential-performer-by-release-year",
    "title": "Take-home Exercise 3",
    "section": "Most Influential Performer by Release Year",
    "text": "Most Influential Performer by Release Year\nThis component summarizes which performer had the greatest weighted influence on Sailor Shift for each release year.\nFeatures:\n\nA vertical bar chart ranks top influencers across time.\nLabels within each bar display both the influencer’s name and their node type (e.g., person, group).\nYear Range slider (left sidebar) lets users restrict the visualization to specific time periods."
  },
  {
    "objectID": "Take-home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#collaborations-data-table",
    "href": "Take-home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#collaborations-data-table",
    "title": "Take-home Exercise 3",
    "section": "Collaborations Data Table",
    "text": "Collaborations Data Table\nThis tab shows artists who collaborated with Sailor Shift by co-performing songs.\n\nFeatures:\n\nAn interactive data table displays: collaborator name, number of songs shared, first collaboration year, and song IDs.\nAllows searching, sorting, and pagination.\nDirect or Indirect Influence Table This component reveals which of those collaborators were also influenced by Sailor’s work.\n\nFunctionality:\n\nTable includes: collaborator name, node type, type of influence (Direct), and associated song ID.\nLeft sidebar includes Filter by Influence Type, allowing users to isolate Direct vs Indirect influences."
  },
  {
    "objectID": "Take-home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#influenced-collaborators-network-graph",
    "href": "Take-home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#influenced-collaborators-network-graph",
    "title": "Take-home Exercise 3",
    "section": "Influenced Collaborators’ Network Graph",
    "text": "Influenced Collaborators’ Network Graph\nThis tab visualizes how Sailor Shift’s songs have influenced Oceanus Folk collaborators across multiple steps of influence.\n\nNetwork graph with three node types:\n\nSailor Shift’s songs (blue)\nInfluenced songs (yellow)\nCollaborator names (green)\n\nEdge styles:\n\nBlue arrows represent musical influence\nGreen arrows represent song collaboration\n\nEdge labels indicate the number of hops from Sailor’s song to the influenced collaborator.\n\nInfluence Path Filter\nA dropdown below the graph allows users to adjust the depth of influence shown:\n\n\n\nOption\nDescription\n\n\n\n\nDirect Only\nShow only 1-hop direct influences\n\n\n2 Hops\nInclude 1 level of indirect influence\n\n\n3+ Hops\nFull multi-hop influence tracing"
  },
  {
    "objectID": "Take-home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#overview-tab",
    "href": "Take-home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#overview-tab",
    "title": "Take-home Exercise 3",
    "section": "Overview Tab",
    "text": "Overview Tab\nThe Overview tab provides a high-level summary of influence impact, helping users quickly identify which collaborators were musically shaped by Sailor Shift’s work.\nThis section includes:\nA summary table displaying:\n\nCollaborator name\nThe song of theirs that was influenced\nThe original Sailor Shift song\nThe number of hops (influence distance)\n\nThis overview supports exploratory understanding and highlights key influencers and intermediaries in Sailor’s artistic legacy."
  },
  {
    "objectID": "Take-home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#oceanus-folk-community-tab",
    "href": "Take-home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#oceanus-folk-community-tab",
    "title": "Take-home Exercise 3",
    "section": "Oceanus Folk Community Tab",
    "text": "Oceanus Folk Community Tab\nThis tab provides a structured data table of all recognized members of the Oceanus Folk community, defined by:\nTheir creative contributions (performance, composition, lyric, or production) to songs tagged as Oceanus Folk\nManual inclusion of key Ivy Echoes members (e.g., Maya Jensen, Lila Hartman, Jade Thompson, Sophie Ramirez)\nUsers can:\n\nView artist name and node type\nSearch or filter the community list\nExplore downstream connections in the other tabs"
  },
  {
    "objectID": "Take-home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#collaborators-heatmap-tab",
    "href": "Take-home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#collaborators-heatmap-tab",
    "title": "Take-home Exercise 3",
    "section": "Collaborators Heatmap Tab",
    "text": "Collaborators Heatmap Tab\nThis tab displays a heatmap matrix that quantifies collaboration intensity between:\n\nTop Oceanus Folk members (Y-axis)\nTop Collaborators (X-axis)\nColor intensity indicates the number of shared songs, making it easy to:\nDetect tightly coupled artist pairs\nIdentify key collaborators across the community\nCompare overlap patterns across roles and genres\n\nUsers can adjust:\n\nNumber of top artists shown (Top 10, Top 20)\nFilters by role (Performer, Composer, etc.)"
  },
  {
    "objectID": "Take-home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#tab-1-top-artist-rankings",
    "href": "Take-home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#tab-1-top-artist-rankings",
    "title": "Take-home Exercise 3",
    "section": "Tab 1: Top Artist Rankings",
    "text": "Tab 1: Top Artist Rankings\n\nThis tab presents an interactive bar chart that ranks artists by their overall composite score, a combined metric based on:\n\nNumber of songs performed\nNumber of collaborations\nNotable mentions (charts or awards)\nInfluence spread (songs influenced by their work)\n\nUI Components:\n\nHorizontal bar chart displays the top 10 artists with their final scores.\nUsers can adjust the Year Range slider (bottom right) to filter rankings by active career period.\nA Choose Performer dropdown (bottom left) allows users to select an artist and drill down further in the subsequent tabs."
  },
  {
    "objectID": "Take-home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#tab-2-career-comparison",
    "href": "Take-home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#tab-2-career-comparison",
    "title": "Take-home Exercise 3",
    "section": "Tab 2: Career Comparison",
    "text": "Tab 2: Career Comparison\n\nThis tab uses time-series visualizations to compare how Sailor Shift, Kimberly Snyder, and Ping Tian evolved over time.\nSub-components:\nThree faceted line charts display trends by year:\n\nSongs Performed\nCollaborations\nNotable Mentions\nA line graph shows influence score over time, capturing both direct and indirect musical influence (multi-hop paths).\nA dynamic Year Range slider allows users to focus on specific time periods.\nChoose Performer enables selection of another artist, enabling broader comparisons beyond the default three.\n\nA Chart Interpretation Box is also built to help users understand the key takeaway from the visualization and provide guidance on how to interpret the chart elements."
  },
  {
    "objectID": "Take-home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#tab-3-predicted-future-stars",
    "href": "Take-home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#tab-3-predicted-future-stars",
    "title": "Take-home Exercise 3",
    "section": "Tab 3: Predicted Future Stars",
    "text": "Tab 3: Predicted Future Stars\n\nThis final tab highlights artists predicted to become influential within the Oceanus Folk scene, based on their current trajectory and composite score.\nUI Features:\n\nA ranked table shows the top predicted artist, sorted by final_score.\nColumns: ID, Artist Name, Final Score\nA Select Year dropdown enables users to simulate predictions by future periods or filter emerging talent pools dynamically.\n\nA Chart Interpretation Box is also built to help users understand the key takeaway from the visualization and bridge the gap between raw data and analytical insight."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#setting-the-scene",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#setting-the-scene",
    "title": "Take-home Exercise 1",
    "section": "1.1 Setting the scene",
    "text": "1.1 Setting the scene\nA local online media company that publishes daily content on digital platforms is planning to release an article on demographic structures and distribution of Singapore in 2024. This project will explore the demographic structure of Singapore’s resident population as of June 2024, which aims to uncover both national and regional trends in age distribution, gender composition, and population disparities across planning areas."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#tasks",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#tasks",
    "title": "Take-home Exercise 1",
    "section": "1.2 Tasks",
    "text": "1.2 Tasks\nAs the graphical editor of the media company, this project aim to:\n\nClean and preprocess the demographic dataset.\nDesign and generate three targeted data visualizations:\n\n\nTop 10 Planning Areas by Total Population: A horizontal bar chart focusing on the ten most populous planning areas to highlight urban population concentration, particularly in areas like Tampines, Bedok, and Sengkang.\nPopulation Pyramid by Age and Sex: A detailed pyramid chart that illustrates Singapore’s national age and gender structure, revealing the dominance of the working-age population, the presence of an aging society, and gender differences in older age groups.\n\n\n\nAge and Gender Distribution in Top 5 Planning Areas: A set of stacked bar and ridgeline plots showing how population varies by age group and gender within the top five planning areas, offering insights into regional differences in youth, working-age, and elderly populations.\n\n\nSummarize key insights for each visualization to support the narrative."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#loading-packages",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#loading-packages",
    "title": "Take-home Exercise 1",
    "section": "2.1 Loading Packages",
    "text": "2.1 Loading Packages\nThe code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)\n\nBeside tidyverse, following R packages will be used:\n\nggrepel: an R package provides geoms for ggplot2 to repel overlapping text labels.\nggthemes: an R package provides some extra themes, geoms, and scales for ‘ggplot2’.\nhrbrthemes: an R package provides typography-centric themes and theme components for ggplot2.\npatchwork: an R package for preparing composite figure created using ggplot2.\nhaven: Enables reading and writing of data files from statistical software packages like SPSS, Stata, and SAS.\nggiraph: for making ‘ggplot’ graphics interactive.\nplotly: R library for plotting interactive statistical graphs.\nDT: provides an R interface to the JavaScript library DataTables that create interactive table on html page.\nknitr: Facilitates dynamic report generation by integrating R code into documents (used in R Markdown).\nscales: Provides functions for scaling axes and legends in ggplot2 plots, including formatting numbers and dates.\nggridges: Allows creation of ridgeline plots (overlapping density plots) in ggplot2.\nggpubr: Enhances ggplot2 with publication-ready themes and functions for common tasks like adding statistical comparisons.\ngganimate: Adds animation capabilities to ggplot2 visualizations.\ngapminder: An excerpt of the data available at Gapminder.org.\nggdist: Supports visualizations of distributions and uncertainty (e.g., intervals, densities) in ggplot2.\nggtext: Enables advanced text rendering (e.g., HTML/Markdown) in ggplot2 titles, subtitles, and labels\nggalt: Provides alternative geoms and statistical transformations not available in core ggplot2.\ncowplot: Offers streamlined tools to align and arrange ggplot2-based plots into panels.\n\n\npacman::p_load(tidyverse, ggrepel, ggthemes, \n               hrbrthemes, patchwork, \n               haven, ggiraph, plotly, DT, \n               knitr, scales,\n               ggridges, ggpubr, \n               gganimate, gapminder, ggdist, \n               ggtext, ggalt,\n               cowplot)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#cleaning-data",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#cleaning-data",
    "title": "Take-home Exercise 1",
    "section": "2.2 Cleaning data",
    "text": "2.2 Cleaning data\nTo prepare the dataset for all tasks, the following code will loads, cleans, and prepares the demographic data (respopagesex2024.csv) for analysis and visualization to make sure:\n\nAll numeric columns are actually numeric (for calculations)\nCategorical columns behave predictably (for grouping)\nOnly analyzing valid population entries (no missing or zero values).\n\n\nlibrary(readr)\nlibrary(dplyr)\n\n# Load the dataset\nrespop &lt;- read_csv(\"TakeHome_01/respopagesex2024.csv\")\n\n# Convert types and clean\nrespop_clean &lt;- respop %&gt;%\n  mutate(\n    Pop = as.numeric(Pop),\n    Age = as.numeric(Age),\n    PA = as.factor(PA),\n    SZ = as.factor(SZ),\n    Sex = factor(Sex, levels = c(\"Males\", \"Females\"))\n  ) %&gt;%\n  filter(!is.na(Pop), Pop &gt; 0)\n\nThe following code chunk will loads the dataset.\n\nCleans it by ensuring population values are numeric and valid.\nAggregates population totals by planning area.\nOutputs a basic statistical overview of how population is distributed across Singapore’s planning areas.\n\n\n  library(readr)\n  library(dplyr)\n  library(ggplot2)\n  library(scales)\n\n  # Load and summarize population data\n  respopagesex2024 &lt;- read_csv(\"TakeHome_01/respopagesex2024.csv\")\n  pop_by_pa &lt;- respopagesex2024 %&gt;%\n    mutate(Pop = as.numeric(Pop)) %&gt;%\n    filter(!is.na(Pop) & Pop &gt; 0) %&gt;%\n    group_by(PA) %&gt;%\n    summarise(Total_Pop = sum(Pop, na.rm = TRUE))\n\n  # Check population range\n  print(summary(pop_by_pa$Total_Pop))\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n    140    8432   94700   99846  157685  284950 \n\n\nThe following code chunk will loads the dataset, deep clean and check for missing or abnormal entries.\n\nsummary(respopagesex2024)\n\n      PA                 SZ                Age                Sex           \n Length:60424       Length:60424       Length:60424       Length:60424      \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n      Pop              Time     \n Min.   :   0.0   Min.   :2024  \n 1st Qu.:   0.0   1st Qu.:2024  \n Median :  20.0   Median :2024  \n Mean   :  69.4   Mean   :2024  \n 3rd Qu.:  90.0   3rd Qu.:2024  \n Max.   :1180.0   Max.   :2024  \n\nany(is.na(respopagesex2024$PA))\n\n[1] FALSE\n\nany(is.na(respopagesex2024$SZ))\n\n[1] FALSE\n\nany(respopagesex2024$PA == \"\")\n\n[1] FALSE"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#plot-1",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#plot-1",
    "title": "Take-home Exercise 1",
    "section": "Plot 1",
    "text": "Plot 1\n\n\nShow the code\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(scales)\nlibrary(readr)\n\n# Load data\nrespopagesex2024 &lt;- read_csv(\"TakeHome_01/respopagesex2024.csv\")\n\n# Clean and summarize population by PA\npop_by_pa &lt;- respopagesex2024 %&gt;%\n  mutate(Pop = as.numeric(Pop)) %&gt;%\n  filter(!is.na(Pop) & Pop &gt; 0) %&gt;%\n  group_by(PA) %&gt;%\n  summarise(\n    Total_Pop = sum(Pop, na.rm = TRUE),\n    Num_Subzones = n_distinct(SZ)\n  ) %&gt;%\n  arrange(desc(Total_Pop)) %&gt;%\n  slice_max(order_by = Total_Pop, n = 10) \n\n# Plot\nggplot(pop_by_pa, aes(x = reorder(PA, Total_Pop), y = Total_Pop)) +\n  geom_bar(stat = \"identity\", fill = \"grey70\", color = \"grey90\") +\n  geom_text(aes(label = comma(Total_Pop)), hjust = -0.1, size = 3.5) +  # Add labels\n  coord_flip() +  # Horizontal bars\n  theme_minimal() +\n  labs(\n    title = \"Top 10 Most Populous Planning Areas (2024)\",\n    x = \"Planning Area\",\n    y = \"Total Population\"\n  ) +\n  scale_y_continuous(\n    labels = comma,\n    limits = c(0, max(pop_by_pa$Total_Pop) * 1.1)  # Extra space for text\n  )"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#plot-2",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#plot-2",
    "title": "Take-home Exercise 1",
    "section": "Plot 2",
    "text": "Plot 2\n\n\nShow the code\n# Disable scientific notation globally\noptions(scipen = 999)\n\n# Load data\nrespopagesex2024 &lt;- read_csv(\"TakeHome_01/respopagesex2024.csv\")\n\n# Trim whitespace from PA and SZ\nrespopagesex2024 &lt;- respopagesex2024 %&gt;%\n  mutate(\n    PA = trimws(PA),\n    SZ = trimws(SZ)\n  )\n\n# Clean and summarize population by PA, including subzone count\npop_by_pa &lt;- respopagesex2024 %&gt;%\n  mutate(Pop = as.numeric(Pop)) %&gt;%\n  filter(!is.na(Pop) & Pop &gt; 0) %&gt;%\n  group_by(PA) %&gt;%\n  summarise(\n    Total_Pop = sum(Pop, na.rm = TRUE),\n    Num_Subzones = n_distinct(SZ)  # Count unique subzones per PA\n  ) %&gt;%\n  arrange(desc(Total_Pop))\n\n# Create bar chart\np &lt;- ggplot(data = pop_by_pa, aes(x = reorder(PA, Total_Pop), y = Total_Pop)) +\n  geom_bar(\n    stat = \"identity\",\n    fill = \"grey70\",\n    color = \"grey90\"\n  ) +\n  geom_text(\n    aes(label = comma(Total_Pop)),\n    angle = 90,      # Keep text horizontal\n    hjust = 0.5,    # Center horizontally\n    vjust = -0.5,   # Above the bar\n    size = 3\n  ) +\n  theme_bw() +\n  ggtitle(\"Population Per Planning Area (2024)\") +\n  xlab(\"Planning Area\") +\n  ylab(\"Total Population\") +\n  theme(\n    axis.text.x = element_text(angle = 55, hjust = 1)\n  ) +\n  scale_y_continuous(\n    labels = comma,\n    breaks = seq(0, ceiling(max(pop_by_pa$Total_Pop, na.rm = TRUE) / 100000) * 100000, by = 100000),\n    limits = c(0, ceiling(max(pop_by_pa$Total_Pop, na.rm = TRUE) / 100000) * 100000)\n  )\n\nprint(p)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#insight",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#insight",
    "title": "Take-home Exercise 1",
    "section": "Insight",
    "text": "Insight\n\nPlot 1, a bar chart, lists the top 10 most populous planning areas (PAs): Tampines (284,950), Bedok (277,660), Sengkang (265,550), Jurong West (257,910), Woodlands (255,510), Yishun (230,320), Hougang (228,780), Punggol (199,880), Choa Chu Kang (190,640), and Bukit Batok (168,390). This highlights Tampines as the densest hub.\nPlot 2, a stacked bar chart, shows total population across all PAs, with the top 10 aligning with Plot 1’s rankings, peaking at Tampines and tapering off in less populated areas like Western Water Catchment.\nBoth plots confirm a concentration of population in urban PAs, with a clear hierarchy led by Tampines, Bedok, and Sengkang. This indicate a need for targeted infrastructure and services in these high-density areas, with potential resource allocation challenges in less populated regions."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#plot-1-1",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#plot-1-1",
    "title": "Take-home Exercise 1",
    "section": "Plot 1",
    "text": "Plot 1\n\n\nShow the code\nlibrary(ggplot2)\nlibrary(dplyr)\n\n# Group into 5-year bins and summarise\npyramid_data &lt;- respopagesex2024 %&gt;%\n  mutate(\n    Age = as.numeric(Age),\n    Age_Group = cut(Age,\n                    breaks = seq(0, 100, by = 5),\n                    labels = paste(seq(0, 95, by = 5), seq(4, 99, by = 5), sep = \"-\"),\n                    include.lowest = TRUE)\n  ) %&gt;%\n  filter(Sex %in% c(\"Males\", \"Females\")) %&gt;%\n  group_by(Age_Group, Sex) %&gt;%\n  summarise(Total_Pop = sum(Pop, na.rm = TRUE), .groups = \"drop\") %&gt;%\n  mutate(Population = ifelse(Sex == \"Males\", -Total_Pop, Total_Pop))\n\n# Ensure proper order for Age_Group\npyramid_data$Age_Group &lt;- factor(pyramid_data$Age_Group, levels = unique(pyramid_data$Age_Group))\n\n# Plot the age pyramid\nggplot(pyramid_data, aes(x = Population, y = Age_Group, fill = Sex)) +\n  geom_bar(stat = \"identity\") +\n  scale_x_continuous(labels = abs, name = \"Population\") +\n  scale_y_discrete(name = \"Age Group\") +\n  scale_fill_manual(values = c(\"Males\" = \"grey70\", \"Females\" = \"grey90\")) +\n  theme_bw() +\n  ggtitle(\"Singapore Population Pyramid (2024)\") +\n  theme(legend.position = \"bottom\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#plot-2-1",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#plot-2-1",
    "title": "Take-home Exercise 1",
    "section": "Plot 2",
    "text": "Plot 2\n\n\nShow the code\nlibrary(readr)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(scales)\n\n# Disable scientific notation\noptions(scipen = 999)\n\n# Load data\nrespopagesex2024 &lt;- read_csv(\"TakeHome_01/respopagesex2024.csv\")\n\n# Convert Age Seyfert’s correction for age groups\npop_by_age &lt;- respopagesex2024 %&gt;%\n  mutate(\n    Pop = as.numeric(Pop),\n    Age_Num = case_when(\n      Age == \"90_and_Over\" ~ 90,\n      TRUE ~ as.numeric(gsub(\"–.*\", \"\", Age)) + 2.5  # Midpoint of 5-year age groups\n    )\n  ) %&gt;%\n  filter(!is.na(Pop) & Pop &gt; 0)\n\n# Expand data to represent each individual\nage_data &lt;- pop_by_age %&gt;%\n  uncount(Pop)  # Repeats each row by Pop value\n\n# Create histogram\np &lt;- ggplot(data = age_data, aes(x = Age_Num)) +\n  geom_histogram(\n    binwidth = 5,  # 5-year age bins\n    fill = \"grey70\",\n    color = \"grey90\"\n  ) +\n  theme_bw() +\n  ggtitle(\"Age Distribution of Singapore Population, 2024\") +\n  xlab(\"Age (Years)\") +\n  ylab(\"Population\") +\n  scale_x_continuous(\n    breaks = seq(0, 100, by = 10),\n    limits = c(0, 100)\n  ) +\n  scale_y_continuous(labels = comma)\n\n# Render plot\nprint(p)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#insight-1",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#insight-1",
    "title": "Take-home Exercise 1",
    "section": "Insight",
    "text": "Insight\n\nPlot 1, a population pyramid, shows the age and gender distribution across the entire population, with a broad working-age base (30–59), a smaller youth (0–19), and aN elderly group (60–80+). Females slightly outnumber males in the 70+ age groups, reflecting higher life expectancy.\nPlot 2, a histogram, displays the overall age distribution, confirming the working-age peak (30–50 years), a small youth population, and a gradual increase in elderly (60–80+), with a slight female skew in older ages.\nTogether, they highlight Singapore’s aging population, with a shrinking youth base, a dominant working-age group, and a gender imbalance in the elderly (more females). This indicate a need for eldercare (especially for females), workforce support, and policies to address low birth rates."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#plot-1-2",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#plot-1-2",
    "title": "Take-home Exercise 1",
    "section": "Plot 1",
    "text": "Plot 1\n\n\nShow the code\nlibrary(readr)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(scales)\n\n# Disable scientific notation\noptions(scipen = 999)\n\n# Load data\nrespopagesex2024 &lt;- read_csv(\"TakeHome_01/respopagesex2024.csv\")\n\n# Create age groups\npop_by_pa_age &lt;- respopagesex2024 %&gt;%\n  mutate(\n    Pop = as.numeric(Pop),\n    Age = ifelse(Age == \"90_and_Over\", 90, as.numeric(Age)),\n    Age_Group = case_when(\n      Age &lt;= 19 ~ \"0–19\",\n      Age &lt;= 39 ~ \"20–39\",\n      Age &lt;= 59 ~ \"40–59\",\n      Age &lt;= 79 ~ \"60–79\",\n      TRUE ~ \"80+\"\n    )\n  ) %&gt;%\n  filter(!is.na(Pop) & Pop &gt; 0) %&gt;%\n  group_by(PA, Age_Group) %&gt;%\n  summarise(\n    Pop = sum(Pop, na.rm = TRUE),\n    Num_Subzones = n_distinct(SZ)\n  ) %&gt;%\n  ungroup()\n\n# Calculate total population per PA for ordering and select top 10\npa_order &lt;- pop_by_pa_age %&gt;%\n  group_by(PA) %&gt;%\n  summarise(Total_Pop = sum(Pop)) %&gt;%\n  arrange(desc(Total_Pop)) %&gt;%\n  slice_head(n = 5)\n\n# Filter data to top 10 PAs\npop_by_pa_age &lt;- pop_by_pa_age %&gt;%\n  filter(PA %in% pa_order$PA)\n\n# Add total population\npop_by_pa_age &lt;- pop_by_pa_age %&gt;%\n  left_join(pa_order, by = \"PA\")\n\n# Create stacked bar chart\np1 &lt;- ggplot(data = pop_by_pa_age, aes(x = reorder(PA, Total_Pop), y = Pop, fill = Age_Group)) +\n  geom_bar(\n    stat = \"identity\",\n    position = \"stack\"  # Stacked bars\n  ) +\n  theme_bw() +\n  ggtitle(\"Population by Top 5 Planning Areas and Age Group, Singapore 2024\") +\n  xlab(\"Planning Area\") +\n  ylab(\"Population\") +\n  theme(\n    axis.text.x = element_text(angle = 55, hjust = 1)\n  ) +\n  scale_y_continuous(\n    labels = comma,\n    breaks = seq(0, ceiling(max(pa_order$Total_Pop, na.rm = TRUE) / 100000) * 100000, by = 100000),\n    limits = c(0, ceiling(max(pa_order$Total_Pop, na.rm = TRUE) / 100000) * 100000)\n  ) +\n  scale_fill_manual(values = c(\"0–19\" = \"grey95\", \"20–39\" = \"grey80\", \"40–59\" = \"grey65\", \"60–79\" = \"grey50\", \"80+\" = \"grey35\"))\n\n# Render plot\nprint(p1)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#plot-2-2",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#plot-2-2",
    "title": "Take-home Exercise 1",
    "section": "Plot 2",
    "text": "Plot 2\n\n\nShow the code\nlibrary(readr)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(scales)\nlibrary(ggridges)\n\n# Disable scientific notation\noptions(scipen = 999)\n\n# Load data\nrespopagesex2024 &lt;- read_csv(\"TakeHome_01/respopagesex2024.csv\")\n\n# Prepare data: Convert Age to numeric\npop_data &lt;- respopagesex2024 %&gt;%\n  mutate(\n    Pop = as.numeric(Pop),\n    Age_Num = case_when(\n      Age == \"90_and_Over\" ~ 90,\n      TRUE ~ as.numeric(gsub(\"–.*\", \"\", Age)) + 2.5  # Midpoint of 5-year age groups\n    )\n  ) %&gt;%\n  filter(!is.na(Pop) & Pop &gt; 0 & !is.na(Age_Num))\n\n# Order PAs by total population and select top 10\npa_order &lt;- pop_data %&gt;%\n  group_by(PA) %&gt;%\n  summarise(Total_Pop = sum(Pop, na.rm = TRUE)) %&gt;%\n  arrange(desc(Total_Pop)) %&gt;%\n  slice_head(n = 5) %&gt;%\n  pull(PA)\n\n# Filter data to top 10 PAs\nage_data &lt;- pop_data %&gt;%\n  filter(PA %in% pa_order) %&gt;%\n  uncount(Pop)  # Expand data to represent each individual (weighted by Pop)\n\n# Create ridgeline plot\np2 &lt;- ggplot(data = age_data, aes(x = Age_Num, y = factor(PA, levels = rev(pa_order)), height = ..density..)) +\n  geom_density_ridges(\n    stat = \"density\",\n    fill = \"grey20\",\n    color = \"grey90\",\n    scale = 1.5,  # Controls ridge overlap\n    alpha = 1.5\n  ) +\n  facet_wrap(~ Sex, ncol = 2) +\n  theme_bw() +\n  ggtitle(\"Age Distribution in Top 5 Populated Planning Areas by Gender, Singapore 2024\") +\n  xlab(\"Age (Years)\") +\n  ylab(\"Planning Area\") +\n  scale_x_continuous(\n    breaks = seq(0, 100, by = 20),\n    limits = c(0, 100)\n  ) +\n  theme(\n    axis.text.y = element_text(size = 12),  # Larger text for fewer PAs\n    axis.text.x = element_text(size = 12),\n    axis.title = element_text(size = 12),\n    plot.title = element_text(size = 15),\n    strip.text = element_text(size = 12),\n    strip.background = element_rect(fill = \"grey90\")\n  )\n\n# Render plot\nprint(p2)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#insight-2",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#insight-2",
    "title": "Take-home Exercise 1",
    "section": "Insight",
    "text": "Insight\n\nBoth plots provide insights into Singapore’s 2024 population across the top 5 planning areas (PAs): Tampines, Bedok, Sengkang, Jurong West, and Woodlands.\nThe stacked bar chart (Plot 1) shows Tampines as the most populous (300,000), with a dominant working-age group (20–59) across all PAs, a small youth group (0–19), and notable elderly groups (60–80+) in Bedok and Woodlands.\nThe ridgeline plot (Plot 2) confirms these trends, highlighting working-age peaks at 30–50, a young peak in Sengkang (0–20), and broader elderly curves in Bedok and Woodlands.\nGender-wise, females show higher elderly presence (60–80+), while males peak at 30–50. Sengkang is likely family-oriented, while Bedok and Woodlands are aging, and Tampines and Jurong West are balanced."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#view-column-names-and-adjust-data",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#view-column-names-and-adjust-data",
    "title": "Take-home Exercise 1",
    "section": "View Column Names and Adjust Data",
    "text": "View Column Names and Adjust Data\n\ncolnames(respopagesex2024)\n\n[1] \"PA\"   \"SZ\"   \"Age\"  \"Sex\"  \"Pop\"  \"Time\"\n\n\n\n\nShow the code\ndf &lt;- tibble(\n  PA = c(\"Planning Area\"),\n  SZ = c(\"Subzone\"),\n  Age = c(\"Age\"),\n  Sex = c(\"Sex\"),\n  Pop = c(\"Population\"),\n  Time = c(\"Time\")\n)\n\ndf %&gt;%\n  knitr::kable(caption = \"Column Information\")\n\n\n\nColumn Information\n\n\nPA\nSZ\nAge\nSex\nPop\nTime\n\n\n\n\nPlanning Area\nSubzone\nAge\nSex\nPopulation\nTime\n\n\n\n\n\n\nlibrary(dplyr)\n\ndf_percent &lt;- respopagesex2024 %&gt;%\n  mutate(\n    Age = as.numeric(Age),\n    AgeGroup = case_when(\n      Age &lt;= 14 ~ \"Children\",\n      Age &gt;= 15 & Age &lt;= 64 ~ \"Adults\",\n      Age &gt;= 65 ~ \"Seniors\",\n      TRUE ~ NA_character_\n    )\n  ) %&gt;%\n  group_by(PA, AgeGroup) %&gt;%\n  summarise(Population = sum(Pop), .groups = \"drop\") %&gt;%\n  group_by(PA) %&gt;%\n  mutate(\n    Total_Pop = sum(Population),\n    Percent = Population / Total_Pop * 100\n  )\n\n\ndf_summary &lt;- df_clean %&gt;%\n  group_by(PA) %&gt;%\n  summarise(\n    Total_Pop = sum(Pop, na.rm = TRUE),\n    .groups = \"drop\"\n  ) %&gt;%\n  arrange(desc(Total_Pop))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#plot",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#plot",
    "title": "Take-home Exercise 1",
    "section": "Plot",
    "text": "Plot\n\n\nShow the code\nbottom10_pa &lt;- df_summary %&gt;%\n  slice_min(Total_Pop, n = 10) %&gt;%\n  pull(PA)\n\ndf_summary_filtered &lt;- df_summary %&gt;%\n  filter(!PA %in% bottom10_pa)\n\nggplot(df_summary_filtered, aes(x = reorder(PA, -Total_Pop), y = Total_Pop)) +\n  geom_bar(stat = \"identity\", color = \"black\", fill = \"lightblue\", width = 0.75) +\n  scale_y_continuous(labels = scales::comma, expand = c(0, 0)) +  \n  labs(\n    x = \"Planning Area\",\n    y = \"Total Population\",\n    title = \"Total Population by Planning Area (2024)\"\n  ) +\n  theme_classic(base_size = 12) +\n  theme(axis.text.x = element_text(angle = 55, hjust = 1))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#the-data",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#the-data",
    "title": "Hands On Exercise 8",
    "section": "21.3.1 The Data",
    "text": "21.3.1 The Data\nTwo data set will be used to create the choropleth map. They are:\n\nMaster Plan 2014 Subzone Boundary (Web) (i.e. MP14_SUBZONE_WEB_PL) in ESRI shapefile format. This is a geospatial data. It consists of the geographical boundary of Singapore at the planning subzone level. The data is based on URA Master Plan 2014.\nSingapore Residents by Planning Area / Subzone, Age Group, Sex and Type of Dwelling, June 2011-2020 in csv format (i.e. respopagesextod2011to2020.csv). This is an aspatial data fie. Although it does not contain any coordinates values, but it’s PA and SZ fields can be used as unique identifiers to geocode to MP14_SUBZONE_WEB_PL shapefile"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#importing-geospatial-data-into-r",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#importing-geospatial-data-into-r",
    "title": "Hands On Exercise 8",
    "section": "21.3.2 Importing Geospatial Data into R",
    "text": "21.3.2 Importing Geospatial Data into R\n\n\nShow the code\nmpsz &lt;- st_read(dsn = \"data/geospatial\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\Users\\marga\\mgtr\\ISS608-VAA\\Hands-on_Ex\\Hands-on_Ex08\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\nExamine the content\n\n\nShow the code\nmpsz\n\n\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 10 features:\n   OBJECTID SUBZONE_NO       SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1         1          1    MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2         2          1    PEARL'S HILL    OTSZ01      Y          OUTRAM\n3         3          3       BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4         4          8  HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5         5          3         REDHILL    BMSZ03      N     BUKIT MERAH\n6         6          7  ALEXANDRA HILL    BMSZ07      N     BUKIT MERAH\n7         7          9   BUKIT HO SWEE    BMSZ09      N     BUKIT MERAH\n8         8          2     CLARKE QUAY    SRSZ02      Y SINGAPORE RIVER\n9         9         13 PASIR PANJANG 1    QTSZ13      N      QUEENSTOWN\n10       10          7       QUEENSWAY    QTSZ07      N      QUEENSTOWN\n   PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1          MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2          OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3          SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4          BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5          BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n6          BM CENTRAL REGION       CR 9D286521EF5E3B59 2014-12-05 25358.82\n7          BM CENTRAL REGION       CR 7839A8577144EFE2 2014-12-05 27680.06\n8          SR CENTRAL REGION       CR 48661DC0FBA09F7A 2014-12-05 29253.21\n9          QT CENTRAL REGION       CR 1F721290C421BFAB 2014-12-05 22077.34\n10         QT CENTRAL REGION       CR 3580D2AFFBEE914C 2014-12-05 24168.31\n     Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1  29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2  29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3  29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4  29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5  30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n6  29991.38   4428.913  1030378.8 MULTIPOLYGON (((25899.7 297...\n7  30230.86   3275.312   551732.0 MULTIPOLYGON (((27746.95 30...\n8  30222.86   2208.619   290184.7 MULTIPOLYGON (((29351.26 29...\n9  29893.78   6571.323  1084792.3 MULTIPOLYGON (((20996.49 30...\n10 30104.18   3454.239   631644.3 MULTIPOLYGON (((24472.11 29...\n\n\nThe object mpsz is a simple feature (sf) data frame, and R prints only the first few rows by default for readability, just like it does for regular data frames."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#we-can-view-all-rows-and-columns-with",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#we-can-view-all-rows-and-columns-with",
    "title": "Hands On Exercise 8",
    "section": "We can view all rows and columns with:",
    "text": "We can view all rows and columns with:\n\n\nShow the code\nas.data.frame(mpsz)\n\n\n    OBJECTID SUBZONE_NO                     SUBZONE_N SUBZONE_C CA_IND\n1          1          1                  MARINA SOUTH    MSSZ01      Y\n2          2          1                  PEARL'S HILL    OTSZ01      Y\n3          3          3                     BOAT QUAY    SRSZ03      Y\n4          4          8                HENDERSON HILL    BMSZ08      N\n5          5          3                       REDHILL    BMSZ03      N\n6          6          7                ALEXANDRA HILL    BMSZ07      N\n7          7          9                 BUKIT HO SWEE    BMSZ09      N\n8          8          2                   CLARKE QUAY    SRSZ02      Y\n9          9         13               PASIR PANJANG 1    QTSZ13      N\n10        10          7                     QUEENSWAY    QTSZ07      N\n11        11         12                    KENT RIDGE    QTSZ12      N\n12        12          6               ALEXANDRA NORTH    BMSZ06      N\n13        13          1                   MARINA EAST    MESZ01      Y\n14        14          5              INSTITUTION HILL    RVSZ05      Y\n15        15          1                ROBERTSON QUAY    SRSZ01      Y\n16        16          1       JURONG ISLAND AND BUKOM    WISZ01      N\n17        17          3                        SUDONG    WISZ03      N\n18        18          2                       SEMAKAU    WISZ02      N\n19        19          2                SOUTHERN GROUP    SISZ02      N\n20        20          1                       SENTOSA    SISZ01      N\n21        21         17                CITY TERMINALS    BMSZ17      N\n22        22         10                         ANSON    DTSZ10      Y\n23        23          1                  STRAITS VIEW    SVSZ01      Y\n24        24          1               MARITIME SQUARE    BMSZ01      N\n25        25         14             TELOK BLANGAH WAY    BMSZ14      N\n26        26          7                       MAXWELL    DTSZ07      Y\n27        27          8                         CECIL    DTSZ08      Y\n28        28         11           KAMPONG TIONG BAHRU    BMSZ11      N\n29        29         13           TELOK BLANGAH DRIVE    BMSZ13      N\n30        30         14               PASIR PANJANG 2    QTSZ14      N\n31        31         11               CENTRAL SUBZONE    DTSZ11      Y\n32        32          5    SINGAPORE GENERAL HOSPITAL    BMSZ05      N\n33        33         12                    DEPOT ROAD    BMSZ12      N\n34        34          2                 PEOPLE'S PARK    OTSZ02      Y\n35        35          2                   BUKIT MERAH    BMSZ02      N\n36        36          3                     CHINATOWN    OTSZ03      Y\n37        37          4                       PHILLIP    DTSZ04      Y\n38        38          5                 RAFFLES PLACE    DTSZ05      Y\n39        39          4                  CHINA SQUARE    OTSZ04      Y\n40        40         10                   TIONG BAHRU    BMSZ10      N\n41        41         12              BAYFRONT SUBZONE    DTSZ12      Y\n42        42          4           TIONG BAHRU STATION    BMSZ04      N\n43        43          6                 CLIFFORD PIER    DTSZ06      Y\n44        44          5              MARINA EAST (MP)    MPSZ05      N\n45        45          3                 MARINA CENTRE    DTSZ03      Y\n46        46          3                    BRAS BASAH    MUSZ03      Y\n47        47          4                         OXLEY    RVSZ04      Y\n48        48          2                     CITY HALL    DTSZ02      Y\n49        49          6                      MEI CHIN    QTSZ06      N\n50        50          4                    EAST COAST    MPSZ04      N\n51        51         11 NATIONAL UNIVERSITY OF S'PORE    QTSZ11      N\n52        52          1                 ONE TREE HILL    RVSZ01      Y\n53        53          3                      SOMERSET    ORSZ03      Y\n54        54          9                     BENCOOLEN    RCSZ09      Y\n55        55          3                   LEONIE HILL    RVSZ03      Y\n56        56         15                          PORT    QTSZ15      N\n57        57          1                   DHOBY GHAUT    MUSZ01      Y\n58        58          1                         BUGIS    DTSZ01      Y\n59        59         10                      VICTORIA    RCSZ10      Y\n60        60          2                      PATERSON    RVSZ02      Y\n61        61         15            TELOK BLANGAH RISE    BMSZ15      N\n62        62          9                 TANJONG PAGAR    DTSZ09      Y\n63        63         16                  EVERTON PARK    BMSZ16      N\n64        64          4                  TANGLIN HALT    QTSZ04      N\n65        65          6                     MACKENZIE    RCSZ06      Y\n66        66          3                   SUNGEI ROAD    RCSZ03      Y\n67        67          8                     ONE NORTH    QTSZ08      N\n68        68          5                   TANJONG RHU    KLSZ05      N\n69        69          1                   MOUNTBATTEN    MPSZ01      N\n70        70          3                  COMMONWEALTH    QTSZ03      N\n71        71         10                         DOVER    QTSZ10      N\n72        72          3                        RIDOUT    TNSZ03      N\n73        73          4                     CAIRNHILL    NTSZ04      Y\n74        74          8                 CLEMENTI WEST    CLSZ08      N\n75        75          6           TUAS VIEW EXTENSION    TSSZ06      N\n76        76          5                   MONK'S HILL    NTSZ05      Y\n77        77          7                        SIGLAP    BDSZ07      N\n78        78          7                CLEMENTI WOODS    CLSZ07      N\n79        79          5                PIONEER SECTOR    PNSZ05      N\n80        80         10              PENJURU CRESCENT    JESZ10      N\n81        81          1                  ORANGE GROVE    NTSZ01      Y\n82        82          4                 KAMPONG BUGIS    KLSZ04      N\n83        83          2                     BOULEVARD    ORSZ02      Y\n84        84          6                 ISTANA NEGARA    NTSZ06      Y\n85        85          2                  LITTLE INDIA    RCSZ02      Y\n86        86          4                     GUL BASIN    PNSZ04      N\n87        87          2                  FORT CANNING    MUSZ02      Y\n88        88          8                  FARRER COURT    BTSZ08      N\n89        89          5                     TUAS VIEW    TSSZ05      N\n90        90          1                        NASSIM    TNSZ01      N\n91        91          5                    WEST COAST    CLSZ05      N\n92        92          8                      BAYSHORE    BDSZ08      N\n93        93          3                  BENOI SECTOR    PNSZ03      N\n94        94          2                    GUL CIRCLE    PNSZ02      N\n95        95          2                    CHATSWORTH    TNSZ02      N\n96        96          5                  KAMPONG GLAM    RCSZ05      Y\n97        97          8                       SELEGIE    RCSZ08      Y\n98        98          7                   MOUNT EMILY    RCSZ07      Y\n99        99          4                  ROCHOR CANAL    RCSZ04      Y\n100      100          9                      CRAWFORD    KLSZ09      N\n101      101          5                MARGARET DRIVE    QTSZ05      N\n102      102          1                       TANGLIN    ORSZ01      Y\n103      103          3                 MARINE PARADE    MPSZ03      N\n104      104          7                  JURONG RIVER    JESZ07      N\n105      105          2                 GEYLANG BAHRU    KLSZ02      N\n106      106          3                         FABER    CLSZ03      N\n107      107          3                       MALCOLM    NVSZ03      N\n108      108          6                   BEDOK SOUTH    BDSZ06      N\n109      109          1                     BENDEMEER    KLSZ01      N\n110      110          1                     BALESTIER    NVSZ01      N\n111      111          4                      TUAS BAY    TSSZ04      N\n112      112          1                      JOO KOON    PNSZ01      N\n113      113          1                   KALLANG WAY    GLSZ01      N\n114      114          6   INTERNATIONAL BUSINESS PARK    JESZ06      N\n115      115          1                        TUKANG    BLSZ01      N\n116      116          6               CORONATION ROAD    BTSZ06      N\n117      117          3                     KEMBANGAN    BDSZ03      N\n118      118          2                        KATONG    MPSZ02      N\n119      119          2                 HOLLAND DRIVE    QTSZ02      N\n120      120          1                   FARRER PARK    RCSZ01      Y\n121      121          3                 NEWTON CIRCUS    NTSZ03      Y\n122      122          9                   JURONG PORT    JESZ09      N\n123      123          3                       SAMULUN    BLSZ03      N\n124      124          4                      SHIPYARD    BLSZ04      N\n125      125          1                      GHIM MOH    QTSZ01      N\n126      126          6                      LAVENDER    KLSZ06      N\n127      127          2                 GOODWOOD PARK    NTSZ02      Y\n128      128          9                        PANDAN    CLSZ09      N\n129      129          9         SINGAPORE POLYTECHNIC    QTSZ09      N\n130      130          6              CLEMENTI CENTRAL    CLSZ06      N\n131      131          7                  KAMPONG JAVA    KLSZ07      N\n132      132          3                     BOON KENG    KLSZ03      N\n133      133          8                 KALLANG BAHRU    KLSZ08      N\n134      134          4                    ULU PANDAN    BTSZ04      N\n135      135          5                JURONG GATEWAY    JESZ05      N\n136      136          3                  HOLLAND ROAD    BTSZ03      N\n137      137          3                   KAMPONG UBI    GLSZ03      N\n138      138         11                       SENNETT    TPSZ11      N\n139      139          9                  POTONG PASIR    TPSZ09      N\n140      140          3                    TUAS NORTH    TSSZ03      N\n141      141          6                      PEI CHUN    TPSZ06      N\n142      142          4                     BOON TECK    TPSZ04      N\n143      143          6                     KIAN TECK    JWSZ06      N\n144      144          7                         SAFTI    JWSZ07      N\n145      145          8                     WOODLEIGH    TPSZ08      N\n146      146          4                  TAMAN JURONG    JWSZ04      N\n147      147          4                      LAKESIDE    JESZ04      N\n148      148          1                TOA PAYOH WEST    TPSZ01      N\n149      149          1                    KAKI BUKIT    BDSZ01      N\n150      150          2                    YUHUA EAST    JESZ02      N\n151      151          9             BUKIT BATOK SOUTH    BKSZ09      N\n152      152          9           JURONG WEST CENTRAL    JWSZ09      N\n153      153          2               BEDOK RESERVOIR    BDSZ02      N\n154      154          1                      TOH TUCK    CLSZ01      N\n155      155          5                MOUNT PLEASANT    NVSZ05      N\n156      156          5                     HILLCREST    BTSZ05      N\n157      157         12                      JOO SENG    TPSZ12      N\n158      158          5                      CHIN BEE    JWSZ05      N\n159      159          5            LORONG 8 TOA PAYOH    TPSZ05      N\n160      160          3                      TOH GUAN    JESZ03      N\n161      161          3                      BRADDELL    TPSZ03      N\n162      162         10                      BIDADARI    TPSZ10      N\n163      163          4                      ALJUNIED    GLSZ04      N\n164      164          4                      TYERSALL    TNSZ04      N\n165      165          2                      MOULMEIN    NVSZ02      N\n166      166          2                      LIU FANG    BLSZ02      N\n167      167          5                       FRANKEL    BDSZ05      N\n168      168          4                CLEMENTI NORTH    CLSZ04      N\n169      169          7                   LEEDON PARK    BTSZ07      N\n170      170          5                  GEYLANG EAST    GLSZ05      N\n171      171          8                 TEBAN GARDENS    JESZ08      N\n172      172          2                BOON LAY PLACE    JWSZ02      N\n173      173          8              BUKIT BATOK EAST    BKSZ08      N\n174      174          6              BUKIT BATOK WEST    BKSZ06      N\n175      175          7           BUKIT BATOK CENTRAL    BKSZ07      N\n176      176          7              UPPER PAYA LEBAR    SGSZ07      N\n177      177          3                      HONG KAH    JWSZ03      N\n178      178          2                TUAS PROMENADE    TSSZ02      N\n179      179          4                  AIRPORT ROAD    PLSZ04      N\n180      180          6             SERANGOON CENTRAL    SGSZ06      N\n181      181          3                   BISHAN EAST    BSSZ03      N\n182      182          3                 TAMPINES WEST    TMSZ03      N\n183      183          3                    BRICKWORKS    BKSZ03      N\n184      184          9          DEFU INDUSTRIAL PARK    HGSZ09      N\n185      185          4                        GUILIN    BKSZ04      N\n186      186          2                     MARYMOUNT    BSSZ02      N\n187      187          1                         WENYA    JWSZ01      N\n188      188          7                NATURE RESERVE    BPSZ07      N\n189      189          2                 TAMPINES EAST    TMSZ02      N\n190      190          8                      TAI SENG    HGSZ08      N\n191      191          1                        TENGEH    TSSZ01      N\n192      192          1                    YUHUA WEST    JESZ01      N\n193      193          8                        YUNNAN    JWSZ08      N\n194      194          5                  LORONG CHUAN    SGSZ05      N\n195      195          4                       DUNEARN    NVSZ04      N\n196      196          2                    SUNSET WAY    CLSZ02      N\n197      197          2                    MACPHERSON    GLSZ02      N\n198      198          7                      KIM KEAT    TPSZ07      N\n199      199          4                   BEDOK NORTH    BDSZ04      N\n200      200          2             TOA PAYOH CENTRAL    TPSZ02      N\n201      201          1              PAYA LEBAR NORTH    PLSZ01      N\n202      202          3                  HOUGANG EAST    HGSZ03      N\n203      203         10                  LORONG HALUS    HGSZ10      N\n204      204          2                       KANGKAR    HGSZ02      N\n205      205          7               SEMBAWANG HILLS    AMSZ07      N\n206      206          5                        JELEBU    BPSZ05      N\n207      207          2                     KEAT HONG    CKSZ02      N\n208      208          4                  HOUGANG WEST    HGSZ04      N\n209      209          3               PAYA LEBAR WEST    PLSZ03      N\n210      210          4                       BANGKIT    BPSZ04      N\n211      211          1                    ANAK BUKIT    BTSZ01      N\n212      212          2                    SWISS CLUB    BTSZ02      N\n213      213          5                         XILIN    TMSZ05      N\n214      214          4                         SIMEI    TMSZ04      N\n215      215          4                    PENG SIANG    CKSZ04      N\n216      216          2                PASIR RIS WEST    PRSZ02      N\n217      217          9             YIO CHU KANG WEST    AMSZ09      N\n218      218          5                     TRAFALGAR    HGSZ05      N\n219      219          1                     TECK WHYE    CKSZ01      N\n220      220          3         CHOA CHU KANG CENTRAL    CKSZ03      N\n221      221          2                   CHANGI WEST    CHSZ02      N\n222      222          3                         FAJAR    BPSZ03      N\n223      223          1                         SENJA    BPSZ01      N\n224      224          2                       SAUJANA    BPSZ02      N\n225      225          1                 SELETAR HILLS    SGSZ01      N\n226      226          5                   COMPASSVALE    SESZ05      N\n227      227         12             YIO CHU KANG EAST    AMSZ12      N\n228      228         10                  YIO CHU KANG    AMSZ10      N\n229      229          6                   LOYANG WEST    PRSZ06      N\n230      230          8                        TAGORE    AMSZ08      N\n231      231          7                 LORONG AH SOO    HGSZ07      N\n232      232          8                   FLORA DRIVE    PRSZ08      N\n233      233          5                      HILLVIEW    BKSZ05      N\n234      234          1                    CHANGI BAY    CBSZ01      N\n235      235          2               PAYA LEBAR EAST    PLSZ02      N\n236      236          1                 UPPER THOMSON    BSSZ01      N\n237      237          2                HONG KAH NORTH    BKSZ02      N\n238      238          4                    TOWNSVILLE    AMSZ04      N\n239      239          6                         KOVAN    HGSZ06      N\n240      240          3                    CHONG BOON    AMSZ03      N\n241      241          5                    SHANGRI-LA    AMSZ05      N\n242      242          4              SERANGOON GARDEN    SGSZ04      N\n243      243          1               HOUGANG CENTRAL    HGSZ01      N\n244      244          7                   LOYANG EAST    PRSZ07      N\n245      245          6                    DAIRY FARM    BPSZ06      N\n246      246          5               PASIR RIS DRIVE    PRSZ05      N\n247      247          1                TAMPINES NORTH    TMSZ01      N\n248      248          2                     CHENG SAN    AMSZ02      N\n249      249          1        ANG MO KIO TOWN CENTRE    AMSZ01      N\n250      250          6                   KEBUN BAHRU    AMSZ06      N\n251      251          2    SERANGOON NORTH IND ESTATE    SGSZ02      N\n252      252          1                        TENGAH    THSZ01      N\n253      253          3               SERANGOON NORTH    SGSZ03      N\n254      254          3             PASIR RIS CENTRAL    PRSZ03      N\n255      255          1                        GOMBAK    BKSZ01      N\n256      256          5                          PLAB    PLSZ05      N\n257      257          1                        KRANJI    SKSZ01      N\n258      258          4                PASIR RIS PARK    PRSZ04      N\n259      259          5           CHOA CHU KANG NORTH    CKSZ05      N\n260      260          2                     RIVERVALE    SESZ02      N\n261      261          7                 SENGKANG WEST    SESZ07      N\n262      262          6                      FERNVALE    SESZ06      N\n263      263          4                 PUNGGOL FIELD    PGSZ04      N\n264      264          6                       YEW TEE    CKSZ06      N\n265      265          1      PASIR RIS WAFER FAB PARK    PRSZ01      N\n266      266          3                       MATILDA    PGSZ03      N\n267      267          5                 WATERWAY EAST    PGSZ05      N\n268      268          3                     GALI BATU    SKSZ03      N\n269      269          3                CHANGI AIRPORT    CHSZ03      N\n270      270         11            YIO CHU KANG NORTH    AMSZ11      N\n271      271          1                  CHANGI POINT    CHSZ01      N\n272      272          3          SENGKANG TOWN CENTRE    SESZ03      N\n273      273          4                    ANCHORVALE    SESZ04      N\n274      274          1            LORONG HALUS NORTH    SESZ01      N\n275      275          4                  YISHUN SOUTH    YSSZ04      N\n276      276          5                 LOWER SELETAR    YSSZ05      N\n277      277          1                    NORTHSHORE    PGSZ01      N\n278      278          3                 MANDAI ESTATE    MDSZ03      N\n279      279          1                YISHUN CENTRAL    YSSZ01      N\n280      280          3           PULAU PUNGGOL TIMOR    SLSZ03      N\n281      281          2                     TURF CLUB    SKSZ02      N\n282      282          4               WOODLANDS SOUTH    WDSZ04      N\n283      283          5                     WOODGROVE    WDSZ05      N\n284      284          3                   YISHUN EAST    YSSZ03      N\n285      285          1       WESTERN WATER CATCHMENT    WCSZ01      N\n286      286          2           PULAU PUNGGOL BARAT    SLSZ02      N\n287      287          9                   YISHUN WEST    YSSZ09      N\n288      288          1     WOODLANDS REGIONAL CENTRE    WDSZ01      N\n289      289          5                RESERVOIR VIEW    SKSZ05      N\n290      290          3                WOODLANDS EAST    WDSZ03      N\n291      291          3             SEMBAWANG CENTRAL    SBSZ03      N\n292      292          7                GREENWOOD PARK    WDSZ07      N\n293      293          1                SEMBAWANG EAST    SBSZ01      N\n294      294          8                   SENOKO WEST    WDSZ08      N\n295      295          4                 PULAU SELETAR    SMSZ04      N\n296      296          5                     ADMIRALTY    SBSZ05      N\n297      297          1                  LIM CHU KANG    LKSZ01      N\n298      298          1                 SIMPANG NORTH    SMSZ01      N\n299      299          9                  SENOKO SOUTH    SBSZ09      N\n300      300          4               SEMBAWANG NORTH    SBSZ04      N\n301      301          2                  TANJONG IRAU    SMSZ02      N\n302      302          1         NORTH-EASTERN ISLANDS    NESZ01      N\n303      303          2                   MANDAI EAST    MDSZ02      N\n304      304          3                 SIMPANG SOUTH    SMSZ03      N\n305      305          2                     NORTHLAND    YSSZ02      N\n306      306          2                       MIDVIEW    WDSZ02      N\n307      307          6                WOODLANDS WEST    WDSZ06      N\n308      308          2             SEMBAWANG SPRINGS    SBSZ02      N\n309      309          6                    SPRINGLEAF    YSSZ06      N\n310      310          2           PUNGGOL TOWN CENTRE    PGSZ02      N\n311      311          7                      NEE SOON    YSSZ07      N\n312      312          6                 PUNGGOL CANAL    PGSZ06      N\n313      313          1       CENTRAL WATER CATCHMENT    CCSZ01      N\n314      314          4                       SELETAR    SLSZ04      N\n315      315          4                      PANG SUA    SKSZ04      N\n316      316          1        SELETAR AEROSPACE PARK    SLSZ01      N\n317      317          8                        KHATIB    YSSZ08      N\n318      318          1                   MANDAI WEST    MDSZ01      N\n319      319          7                  CONEY ISLAND    PGSZ07      N\n320      320          9                   NORTH COAST    WDSZ09      N\n321      321          6             SEMBAWANG STRAITS    SBSZ06      N\n322      322          7                   THE WHARVES    SBSZ07      N\n323      323          8                  SENOKO NORTH    SBSZ08      N\n                 PLN_AREA_N PLN_AREA_C          REGION_N REGION_C\n1              MARINA SOUTH         MS    CENTRAL REGION       CR\n2                    OUTRAM         OT    CENTRAL REGION       CR\n3           SINGAPORE RIVER         SR    CENTRAL REGION       CR\n4               BUKIT MERAH         BM    CENTRAL REGION       CR\n5               BUKIT MERAH         BM    CENTRAL REGION       CR\n6               BUKIT MERAH         BM    CENTRAL REGION       CR\n7               BUKIT MERAH         BM    CENTRAL REGION       CR\n8           SINGAPORE RIVER         SR    CENTRAL REGION       CR\n9                QUEENSTOWN         QT    CENTRAL REGION       CR\n10               QUEENSTOWN         QT    CENTRAL REGION       CR\n11               QUEENSTOWN         QT    CENTRAL REGION       CR\n12              BUKIT MERAH         BM    CENTRAL REGION       CR\n13              MARINA EAST         ME    CENTRAL REGION       CR\n14             RIVER VALLEY         RV    CENTRAL REGION       CR\n15          SINGAPORE RIVER         SR    CENTRAL REGION       CR\n16          WESTERN ISLANDS         WI       WEST REGION       WR\n17          WESTERN ISLANDS         WI       WEST REGION       WR\n18          WESTERN ISLANDS         WI       WEST REGION       WR\n19         SOUTHERN ISLANDS         SI    CENTRAL REGION       CR\n20         SOUTHERN ISLANDS         SI    CENTRAL REGION       CR\n21              BUKIT MERAH         BM    CENTRAL REGION       CR\n22            DOWNTOWN CORE         DT    CENTRAL REGION       CR\n23             STRAITS VIEW         SV    CENTRAL REGION       CR\n24              BUKIT MERAH         BM    CENTRAL REGION       CR\n25              BUKIT MERAH         BM    CENTRAL REGION       CR\n26            DOWNTOWN CORE         DT    CENTRAL REGION       CR\n27            DOWNTOWN CORE         DT    CENTRAL REGION       CR\n28              BUKIT MERAH         BM    CENTRAL REGION       CR\n29              BUKIT MERAH         BM    CENTRAL REGION       CR\n30               QUEENSTOWN         QT    CENTRAL REGION       CR\n31            DOWNTOWN CORE         DT    CENTRAL REGION       CR\n32              BUKIT MERAH         BM    CENTRAL REGION       CR\n33              BUKIT MERAH         BM    CENTRAL REGION       CR\n34                   OUTRAM         OT    CENTRAL REGION       CR\n35              BUKIT MERAH         BM    CENTRAL REGION       CR\n36                   OUTRAM         OT    CENTRAL REGION       CR\n37            DOWNTOWN CORE         DT    CENTRAL REGION       CR\n38            DOWNTOWN CORE         DT    CENTRAL REGION       CR\n39                   OUTRAM         OT    CENTRAL REGION       CR\n40              BUKIT MERAH         BM    CENTRAL REGION       CR\n41            DOWNTOWN CORE         DT    CENTRAL REGION       CR\n42              BUKIT MERAH         BM    CENTRAL REGION       CR\n43            DOWNTOWN CORE         DT    CENTRAL REGION       CR\n44            MARINE PARADE         MP    CENTRAL REGION       CR\n45            DOWNTOWN CORE         DT    CENTRAL REGION       CR\n46                   MUSEUM         MU    CENTRAL REGION       CR\n47             RIVER VALLEY         RV    CENTRAL REGION       CR\n48            DOWNTOWN CORE         DT    CENTRAL REGION       CR\n49               QUEENSTOWN         QT    CENTRAL REGION       CR\n50            MARINE PARADE         MP    CENTRAL REGION       CR\n51               QUEENSTOWN         QT    CENTRAL REGION       CR\n52             RIVER VALLEY         RV    CENTRAL REGION       CR\n53                  ORCHARD         OR    CENTRAL REGION       CR\n54                   ROCHOR         RC    CENTRAL REGION       CR\n55             RIVER VALLEY         RV    CENTRAL REGION       CR\n56               QUEENSTOWN         QT    CENTRAL REGION       CR\n57                   MUSEUM         MU    CENTRAL REGION       CR\n58            DOWNTOWN CORE         DT    CENTRAL REGION       CR\n59                   ROCHOR         RC    CENTRAL REGION       CR\n60             RIVER VALLEY         RV    CENTRAL REGION       CR\n61              BUKIT MERAH         BM    CENTRAL REGION       CR\n62            DOWNTOWN CORE         DT    CENTRAL REGION       CR\n63              BUKIT MERAH         BM    CENTRAL REGION       CR\n64               QUEENSTOWN         QT    CENTRAL REGION       CR\n65                   ROCHOR         RC    CENTRAL REGION       CR\n66                   ROCHOR         RC    CENTRAL REGION       CR\n67               QUEENSTOWN         QT    CENTRAL REGION       CR\n68                  KALLANG         KL    CENTRAL REGION       CR\n69            MARINE PARADE         MP    CENTRAL REGION       CR\n70               QUEENSTOWN         QT    CENTRAL REGION       CR\n71               QUEENSTOWN         QT    CENTRAL REGION       CR\n72                  TANGLIN         TN    CENTRAL REGION       CR\n73                   NEWTON         NT    CENTRAL REGION       CR\n74                 CLEMENTI         CL       WEST REGION       WR\n75                     TUAS         TS       WEST REGION       WR\n76                   NEWTON         NT    CENTRAL REGION       CR\n77                    BEDOK         BD       EAST REGION       ER\n78                 CLEMENTI         CL       WEST REGION       WR\n79                  PIONEER         PN       WEST REGION       WR\n80              JURONG EAST         JE       WEST REGION       WR\n81                   NEWTON         NT    CENTRAL REGION       CR\n82                  KALLANG         KL    CENTRAL REGION       CR\n83                  ORCHARD         OR    CENTRAL REGION       CR\n84                   NEWTON         NT    CENTRAL REGION       CR\n85                   ROCHOR         RC    CENTRAL REGION       CR\n86                  PIONEER         PN       WEST REGION       WR\n87                   MUSEUM         MU    CENTRAL REGION       CR\n88              BUKIT TIMAH         BT    CENTRAL REGION       CR\n89                     TUAS         TS       WEST REGION       WR\n90                  TANGLIN         TN    CENTRAL REGION       CR\n91                 CLEMENTI         CL       WEST REGION       WR\n92                    BEDOK         BD       EAST REGION       ER\n93                  PIONEER         PN       WEST REGION       WR\n94                  PIONEER         PN       WEST REGION       WR\n95                  TANGLIN         TN    CENTRAL REGION       CR\n96                   ROCHOR         RC    CENTRAL REGION       CR\n97                   ROCHOR         RC    CENTRAL REGION       CR\n98                   ROCHOR         RC    CENTRAL REGION       CR\n99                   ROCHOR         RC    CENTRAL REGION       CR\n100                 KALLANG         KL    CENTRAL REGION       CR\n101              QUEENSTOWN         QT    CENTRAL REGION       CR\n102                 ORCHARD         OR    CENTRAL REGION       CR\n103           MARINE PARADE         MP    CENTRAL REGION       CR\n104             JURONG EAST         JE       WEST REGION       WR\n105                 KALLANG         KL    CENTRAL REGION       CR\n106                CLEMENTI         CL       WEST REGION       WR\n107                  NOVENA         NV    CENTRAL REGION       CR\n108                   BEDOK         BD       EAST REGION       ER\n109                 KALLANG         KL    CENTRAL REGION       CR\n110                  NOVENA         NV    CENTRAL REGION       CR\n111                    TUAS         TS       WEST REGION       WR\n112                 PIONEER         PN       WEST REGION       WR\n113                 GEYLANG         GL    CENTRAL REGION       CR\n114             JURONG EAST         JE       WEST REGION       WR\n115                BOON LAY         BL       WEST REGION       WR\n116             BUKIT TIMAH         BT    CENTRAL REGION       CR\n117                   BEDOK         BD       EAST REGION       ER\n118           MARINE PARADE         MP    CENTRAL REGION       CR\n119              QUEENSTOWN         QT    CENTRAL REGION       CR\n120                  ROCHOR         RC    CENTRAL REGION       CR\n121                  NEWTON         NT    CENTRAL REGION       CR\n122             JURONG EAST         JE       WEST REGION       WR\n123                BOON LAY         BL       WEST REGION       WR\n124                BOON LAY         BL       WEST REGION       WR\n125              QUEENSTOWN         QT    CENTRAL REGION       CR\n126                 KALLANG         KL    CENTRAL REGION       CR\n127                  NEWTON         NT    CENTRAL REGION       CR\n128                CLEMENTI         CL       WEST REGION       WR\n129              QUEENSTOWN         QT    CENTRAL REGION       CR\n130                CLEMENTI         CL       WEST REGION       WR\n131                 KALLANG         KL    CENTRAL REGION       CR\n132                 KALLANG         KL    CENTRAL REGION       CR\n133                 KALLANG         KL    CENTRAL REGION       CR\n134             BUKIT TIMAH         BT    CENTRAL REGION       CR\n135             JURONG EAST         JE       WEST REGION       WR\n136             BUKIT TIMAH         BT    CENTRAL REGION       CR\n137                 GEYLANG         GL    CENTRAL REGION       CR\n138               TOA PAYOH         TP    CENTRAL REGION       CR\n139               TOA PAYOH         TP    CENTRAL REGION       CR\n140                    TUAS         TS       WEST REGION       WR\n141               TOA PAYOH         TP    CENTRAL REGION       CR\n142               TOA PAYOH         TP    CENTRAL REGION       CR\n143             JURONG WEST         JW       WEST REGION       WR\n144             JURONG WEST         JW       WEST REGION       WR\n145               TOA PAYOH         TP    CENTRAL REGION       CR\n146             JURONG WEST         JW       WEST REGION       WR\n147             JURONG EAST         JE       WEST REGION       WR\n148               TOA PAYOH         TP    CENTRAL REGION       CR\n149                   BEDOK         BD       EAST REGION       ER\n150             JURONG EAST         JE       WEST REGION       WR\n151             BUKIT BATOK         BK       WEST REGION       WR\n152             JURONG WEST         JW       WEST REGION       WR\n153                   BEDOK         BD       EAST REGION       ER\n154                CLEMENTI         CL       WEST REGION       WR\n155                  NOVENA         NV    CENTRAL REGION       CR\n156             BUKIT TIMAH         BT    CENTRAL REGION       CR\n157               TOA PAYOH         TP    CENTRAL REGION       CR\n158             JURONG WEST         JW       WEST REGION       WR\n159               TOA PAYOH         TP    CENTRAL REGION       CR\n160             JURONG EAST         JE       WEST REGION       WR\n161               TOA PAYOH         TP    CENTRAL REGION       CR\n162               TOA PAYOH         TP    CENTRAL REGION       CR\n163                 GEYLANG         GL    CENTRAL REGION       CR\n164                 TANGLIN         TN    CENTRAL REGION       CR\n165                  NOVENA         NV    CENTRAL REGION       CR\n166                BOON LAY         BL       WEST REGION       WR\n167                   BEDOK         BD       EAST REGION       ER\n168                CLEMENTI         CL       WEST REGION       WR\n169             BUKIT TIMAH         BT    CENTRAL REGION       CR\n170                 GEYLANG         GL    CENTRAL REGION       CR\n171             JURONG EAST         JE       WEST REGION       WR\n172             JURONG WEST         JW       WEST REGION       WR\n173             BUKIT BATOK         BK       WEST REGION       WR\n174             BUKIT BATOK         BK       WEST REGION       WR\n175             BUKIT BATOK         BK       WEST REGION       WR\n176               SERANGOON         SG NORTH-EAST REGION      NER\n177             JURONG WEST         JW       WEST REGION       WR\n178                    TUAS         TS       WEST REGION       WR\n179              PAYA LEBAR         PL       EAST REGION       ER\n180               SERANGOON         SG NORTH-EAST REGION      NER\n181                  BISHAN         BS    CENTRAL REGION       CR\n182                TAMPINES         TM       EAST REGION       ER\n183             BUKIT BATOK         BK       WEST REGION       WR\n184                 HOUGANG         HG NORTH-EAST REGION      NER\n185             BUKIT BATOK         BK       WEST REGION       WR\n186                  BISHAN         BS    CENTRAL REGION       CR\n187             JURONG WEST         JW       WEST REGION       WR\n188           BUKIT PANJANG         BP       WEST REGION       WR\n189                TAMPINES         TM       EAST REGION       ER\n190                 HOUGANG         HG NORTH-EAST REGION      NER\n191                    TUAS         TS       WEST REGION       WR\n192             JURONG EAST         JE       WEST REGION       WR\n193             JURONG WEST         JW       WEST REGION       WR\n194               SERANGOON         SG NORTH-EAST REGION      NER\n195                  NOVENA         NV    CENTRAL REGION       CR\n196                CLEMENTI         CL       WEST REGION       WR\n197                 GEYLANG         GL    CENTRAL REGION       CR\n198               TOA PAYOH         TP    CENTRAL REGION       CR\n199                   BEDOK         BD       EAST REGION       ER\n200               TOA PAYOH         TP    CENTRAL REGION       CR\n201              PAYA LEBAR         PL       EAST REGION       ER\n202                 HOUGANG         HG NORTH-EAST REGION      NER\n203                 HOUGANG         HG NORTH-EAST REGION      NER\n204                 HOUGANG         HG NORTH-EAST REGION      NER\n205              ANG MO KIO         AM NORTH-EAST REGION      NER\n206           BUKIT PANJANG         BP       WEST REGION       WR\n207           CHOA CHU KANG         CK       WEST REGION       WR\n208                 HOUGANG         HG NORTH-EAST REGION      NER\n209              PAYA LEBAR         PL       EAST REGION       ER\n210           BUKIT PANJANG         BP       WEST REGION       WR\n211             BUKIT TIMAH         BT    CENTRAL REGION       CR\n212             BUKIT TIMAH         BT    CENTRAL REGION       CR\n213                TAMPINES         TM       EAST REGION       ER\n214                TAMPINES         TM       EAST REGION       ER\n215           CHOA CHU KANG         CK       WEST REGION       WR\n216               PASIR RIS         PR       EAST REGION       ER\n217              ANG MO KIO         AM NORTH-EAST REGION      NER\n218                 HOUGANG         HG NORTH-EAST REGION      NER\n219           CHOA CHU KANG         CK       WEST REGION       WR\n220           CHOA CHU KANG         CK       WEST REGION       WR\n221                  CHANGI         CH       EAST REGION       ER\n222           BUKIT PANJANG         BP       WEST REGION       WR\n223           BUKIT PANJANG         BP       WEST REGION       WR\n224           BUKIT PANJANG         BP       WEST REGION       WR\n225               SERANGOON         SG NORTH-EAST REGION      NER\n226                SENGKANG         SE NORTH-EAST REGION      NER\n227              ANG MO KIO         AM NORTH-EAST REGION      NER\n228              ANG MO KIO         AM NORTH-EAST REGION      NER\n229               PASIR RIS         PR       EAST REGION       ER\n230              ANG MO KIO         AM NORTH-EAST REGION      NER\n231                 HOUGANG         HG NORTH-EAST REGION      NER\n232               PASIR RIS         PR       EAST REGION       ER\n233             BUKIT BATOK         BK       WEST REGION       WR\n234              CHANGI BAY         CB       EAST REGION       ER\n235              PAYA LEBAR         PL       EAST REGION       ER\n236                  BISHAN         BS    CENTRAL REGION       CR\n237             BUKIT BATOK         BK       WEST REGION       WR\n238              ANG MO KIO         AM NORTH-EAST REGION      NER\n239                 HOUGANG         HG NORTH-EAST REGION      NER\n240              ANG MO KIO         AM NORTH-EAST REGION      NER\n241              ANG MO KIO         AM NORTH-EAST REGION      NER\n242               SERANGOON         SG NORTH-EAST REGION      NER\n243                 HOUGANG         HG NORTH-EAST REGION      NER\n244               PASIR RIS         PR       EAST REGION       ER\n245           BUKIT PANJANG         BP       WEST REGION       WR\n246               PASIR RIS         PR       EAST REGION       ER\n247                TAMPINES         TM       EAST REGION       ER\n248              ANG MO KIO         AM NORTH-EAST REGION      NER\n249              ANG MO KIO         AM NORTH-EAST REGION      NER\n250              ANG MO KIO         AM NORTH-EAST REGION      NER\n251               SERANGOON         SG NORTH-EAST REGION      NER\n252                  TENGAH         TH       WEST REGION       WR\n253               SERANGOON         SG NORTH-EAST REGION      NER\n254               PASIR RIS         PR       EAST REGION       ER\n255             BUKIT BATOK         BK       WEST REGION       WR\n256              PAYA LEBAR         PL       EAST REGION       ER\n257            SUNGEI KADUT         SK      NORTH REGION       NR\n258               PASIR RIS         PR       EAST REGION       ER\n259           CHOA CHU KANG         CK       WEST REGION       WR\n260                SENGKANG         SE NORTH-EAST REGION      NER\n261                SENGKANG         SE NORTH-EAST REGION      NER\n262                SENGKANG         SE NORTH-EAST REGION      NER\n263                 PUNGGOL         PG NORTH-EAST REGION      NER\n264           CHOA CHU KANG         CK       WEST REGION       WR\n265               PASIR RIS         PR       EAST REGION       ER\n266                 PUNGGOL         PG NORTH-EAST REGION      NER\n267                 PUNGGOL         PG NORTH-EAST REGION      NER\n268            SUNGEI KADUT         SK      NORTH REGION       NR\n269                  CHANGI         CH       EAST REGION       ER\n270              ANG MO KIO         AM NORTH-EAST REGION      NER\n271                  CHANGI         CH       EAST REGION       ER\n272                SENGKANG         SE NORTH-EAST REGION      NER\n273                SENGKANG         SE NORTH-EAST REGION      NER\n274                SENGKANG         SE NORTH-EAST REGION      NER\n275                  YISHUN         YS      NORTH REGION       NR\n276                  YISHUN         YS      NORTH REGION       NR\n277                 PUNGGOL         PG NORTH-EAST REGION      NER\n278                  MANDAI         MD      NORTH REGION       NR\n279                  YISHUN         YS      NORTH REGION       NR\n280                 SELETAR         SL NORTH-EAST REGION      NER\n281            SUNGEI KADUT         SK      NORTH REGION       NR\n282               WOODLANDS         WD      NORTH REGION       NR\n283               WOODLANDS         WD      NORTH REGION       NR\n284                  YISHUN         YS      NORTH REGION       NR\n285 WESTERN WATER CATCHMENT         WC       WEST REGION       WR\n286                 SELETAR         SL NORTH-EAST REGION      NER\n287                  YISHUN         YS      NORTH REGION       NR\n288               WOODLANDS         WD      NORTH REGION       NR\n289            SUNGEI KADUT         SK      NORTH REGION       NR\n290               WOODLANDS         WD      NORTH REGION       NR\n291               SEMBAWANG         SB      NORTH REGION       NR\n292               WOODLANDS         WD      NORTH REGION       NR\n293               SEMBAWANG         SB      NORTH REGION       NR\n294               WOODLANDS         WD      NORTH REGION       NR\n295                 SIMPANG         SM      NORTH REGION       NR\n296               SEMBAWANG         SB      NORTH REGION       NR\n297            LIM CHU KANG         LK      NORTH REGION       NR\n298                 SIMPANG         SM      NORTH REGION       NR\n299               SEMBAWANG         SB      NORTH REGION       NR\n300               SEMBAWANG         SB      NORTH REGION       NR\n301                 SIMPANG         SM      NORTH REGION       NR\n302   NORTH-EASTERN ISLANDS         NE NORTH-EAST REGION      NER\n303                  MANDAI         MD      NORTH REGION       NR\n304                 SIMPANG         SM      NORTH REGION       NR\n305                  YISHUN         YS      NORTH REGION       NR\n306               WOODLANDS         WD      NORTH REGION       NR\n307               WOODLANDS         WD      NORTH REGION       NR\n308               SEMBAWANG         SB      NORTH REGION       NR\n309                  YISHUN         YS      NORTH REGION       NR\n310                 PUNGGOL         PG NORTH-EAST REGION      NER\n311                  YISHUN         YS      NORTH REGION       NR\n312                 PUNGGOL         PG NORTH-EAST REGION      NER\n313 CENTRAL WATER CATCHMENT         CC      NORTH REGION       NR\n314                 SELETAR         SL NORTH-EAST REGION      NER\n315            SUNGEI KADUT         SK      NORTH REGION       NR\n316                 SELETAR         SL NORTH-EAST REGION      NER\n317                  YISHUN         YS      NORTH REGION       NR\n318                  MANDAI         MD      NORTH REGION       NR\n319                 PUNGGOL         PG NORTH-EAST REGION      NER\n320               WOODLANDS         WD      NORTH REGION       NR\n321               SEMBAWANG         SB      NORTH REGION       NR\n322               SEMBAWANG         SB      NORTH REGION       NR\n323               SEMBAWANG         SB      NORTH REGION       NR\n             INC_CRC FMEL_UPD_D    X_ADDR   Y_ADDR SHAPE_Leng  SHAPE_Area\n1   5ED7EB253F99252E 2014-12-05 31595.836 29220.19  5267.3810  1630379.27\n2   8C7149B9EB32EEFC 2014-12-05 28679.063 29782.05  3506.1074   559816.25\n3   C35FEFF02B13E0E5 2014-12-05 29654.959 29974.66  1740.9258   160807.50\n4   3775D82C5DDBEFBD 2014-12-05 26782.826 29933.77  3313.6249   595428.89\n5   85D9ABEF0A40678F 2014-12-05 26201.958 30005.70  2825.5941   387429.44\n6   9D286521EF5E3B59 2014-12-05 25358.821 29991.38  4428.9134  1030378.79\n7   7839A8577144EFE2 2014-12-05 27680.063 30230.86  3275.3125   551732.05\n8   48661DC0FBA09F7A 2014-12-05 29253.207 30222.86  2208.6193   290184.65\n9   1F721290C421BFAB 2014-12-05 22077.338 29893.78  6571.3231  1084792.32\n10  3580D2AFFBEE914C 2014-12-05 24168.311 30104.18  3454.2393   631644.29\n11  601BA309A1AAC731 2014-12-05 23464.841 29725.37  7439.5477  1826848.56\n12  4DC4BF8D86594CBF 2014-12-05 26548.251 30519.39  2907.0515   293706.40\n13  782A2FAF53029A34 2014-12-05 32344.049 30103.25  6470.9496  1844060.67\n14  C3C22D1EE31757BD 2014-12-05 28465.400 30711.22  2842.5255   392563.34\n15  DF71BB5EC3C9FFD1 2014-12-05 28416.848 30409.36  4995.7581   506588.96\n16  699F7210FBF1AFA8 2014-12-05 13012.880 27225.87 68083.9365 36707720.92\n17  F718C723E08FBD51 2014-12-05 15931.759 19579.07 24759.0658  4207271.09\n18  E69207D4F76DEEA3 2014-12-05 21206.334 20465.81 18703.6811  4963787.10\n19  5809FC547293EA2D 2014-12-05 29815.090 23412.59 25626.9772  2206319.46\n20  A6FCDC9C447952CB 2014-12-05 27593.939 25813.35 17496.1937  4919132.37\n21  9711879901A8487F 2014-12-05 28387.339 27536.57 16805.6555  3449640.61\n22  4893F02202845C1D 2014-12-05 29145.350 28466.78  1586.1001   103238.48\n23  21451799CA1AB6EF 2014-12-05 30832.902 28194.08  5277.7608  1127297.24\n24  C1AC31ABF9978DDB 2014-12-05 25805.787 27911.42 13737.1162  2701634.34\n25  0F0735F1BDDF53C7 2014-12-05 26570.517 28871.89  2290.2273   276826.81\n26  CB2D9FC5CAB792B1 2014-12-05 29392.048 29096.75  1419.8019    63664.97\n27  65AA82AF6F4D925D 2014-12-05 29730.198 29011.33  2116.0947   196619.86\n28  CF28DD4E7898CC7B 2014-12-05 27335.831 28979.77  3304.0605   365333.43\n29  54A4BD5ABBBDC5A8 2014-12-05 25280.261 28791.46  5317.7817  1454827.65\n30  C6E665749CEADED6 2014-12-05 23692.639 28894.41  5797.2313   853206.57\n31  8EFE9EC1AEF2DA0A 2014-12-05 30125.837 28683.04  5002.0162  1070723.26\n32  91630902E00FD7B9 2014-12-05 28147.221 29131.04  2915.2820   533017.39\n33  102DDFE3D40A95C9 2014-12-05 25244.207 29407.09  4281.1727   442502.83\n34  B4120D23006C932A 2014-12-05 28831.781 29419.65  1822.1927    93140.44\n35  1C51019439A68700 2014-12-05 26360.799 29384.14  3074.9632   411722.82\n36  0FF1661344C84AED 2014-12-05 29153.968 29158.04  4297.5999   587222.68\n37  615D4EDDEF809F8E 2014-12-05 29706.724 29744.91   871.5549    39437.94\n38  72107B11807074F4 2014-12-05 29968.618 29572.76  1872.7522   188767.49\n39  B609DF5587626C8F 2014-12-05 29509.644 29646.45  1605.2797   133006.94\n40  A0FB4B68155D164A 2014-12-05 27785.672 29590.40  3303.2149   448127.58\n41  197F5E664DA4D5E1 2014-12-05 30806.242 29530.17  2897.1264   521200.52\n42  91FFE927ABE3E4DB 2014-12-05 27277.470 29607.02  2506.6879   350787.56\n43  945CC212CA80626F 2014-12-05 30379.504 29776.43  2405.9909   261843.90\n44  1575868DF0D30E32 2014-12-05 33715.698 30512.25  6657.1514  1590339.80\n45  2AB099523A1AEAD5 2014-12-05 30938.099 30471.83  4047.1112   886954.81\n46  5A1130F73E65C2D7 2014-12-05 29793.093 30958.10  2348.6572   223206.60\n47  5A22C0945D1794D2 2014-12-05 28802.356 31053.67  1989.4870   200052.68\n48  C3663E9926627289 2014-12-05 30209.074 30536.51  4544.1698   710568.70\n49  F15BD95C8778DC31 2014-12-05 24651.069 30651.13  3580.4429   748684.00\n50  768CE19AACFCB9EB 2014-12-05 36386.526 31338.90  5333.0087   591779.00\n51  247B3009E9665A6E 2014-12-05 21688.924 30930.12  5625.4169  1755950.44\n52  0FF5E50B9581D2BE 2014-12-05 27315.559 31563.80  2464.4131   340743.34\n53  F70C32D861DD6CA5 2014-12-05 28626.561 31494.90  3039.8052   329437.93\n54  CF8BBFA03E1B0246 2014-12-05 29999.063 31594.59  1916.0975   170664.30\n55  29BCAA5838A4EAC0 2014-12-05 28082.940 31145.11  2676.3526   368482.99\n56  543ED13CCC907021 2014-12-05 21576.076 28788.22 23438.8185  7601894.00\n57  AD3DE26295353551 2014-12-05 29320.073 31245.75  2584.7883   221973.34\n58  E042FEB6C937D5A5 2014-12-05 30528.335 31278.46  2658.8816   280174.77\n59  DD1436D810825828 2014-12-05 30189.210 31335.73  2093.7702   214250.30\n60  350FD169665248C4 2014-12-05 27809.317 31511.37  1753.9271   173121.77\n61  92F3596780DFCCEA 2014-12-05 27029.964 28501.66  3713.8382   533671.25\n62  4FFE6642FB35D40A 2014-12-05 29397.831 28706.35  1787.7105   145518.66\n63  CF9CAD50B0D9A528 2014-12-05 28333.577 28602.99  3776.6834   635704.06\n64  5903D38684211B10 2014-12-05 23925.441 31512.79  3556.2291   503220.75\n65  D51BAF9568A828F4 2014-12-05 29680.018 32062.93  1216.4806    55681.28\n66  31DE89B5FC57F46A 2014-12-05 30601.344 32003.10  1727.9635   116330.00\n67  D437A9A68F04D2D4 2014-12-05 23299.244 31176.16  6591.9079  2051652.62\n68  928DCE8E44F904C8 2014-12-05 32740.121 31438.31  6515.7586  2434594.03\n69  A9F9036C2E4F7623 2014-12-05 34449.704 31557.74  5430.2671  1713623.00\n70  2423D1D91E730899 2014-12-05 24278.771 31919.97  2713.4300   310513.65\n71  D79DDCEC02F8DF37 2014-12-05 22015.532 31800.52  5637.7220  1386643.32\n72  664D9D93F09E7CD1 2014-12-05 25568.308 31752.67  6450.9729  1951865.75\n73  8B79CA72836AD7A6 2014-12-05 28482.667 32108.19  3853.9004   452471.83\n74  22F5FFEEEB8E5284 2014-12-05 20184.351 31651.88  5211.8675   697501.71\n75  D2A66C8A6232EA9A 2014-12-05  5092.895 26137.87 54928.0939 27710950.08\n76  23972F8A61891E05 2014-12-05 28922.846 32259.79  2446.7334   171720.62\n77  9483FA426FD007AE 2014-12-05 38435.468 32101.88  5436.8905  1097833.70\n78  F01FB50693FE0377 2014-12-05 20764.198 31824.74  5275.7494  1053493.75\n79  F3241D6C0FEF13ED 2014-12-05  8872.750 31423.44  8489.9826  2796006.83\n80  BC263278706376DE 2014-12-05 17651.309 31799.61  9876.0491  3049720.08\n81  136BF08C36E3A625 2014-12-05 27668.184 32484.76  2476.2463   336221.49\n82  0524461C92F35D94 2014-12-05 32138.222 32275.69  4018.1276   741437.99\n83  B26DFAF98B8F3E52 2014-12-05 27916.927 31967.01  4109.2313   460550.43\n84  A2FE23F6A19B509D 2014-12-05 29226.828 31963.29  3730.3411   543483.68\n85  BEC03B4580EB622F 2014-12-05 30307.510 32122.99  2203.2803   278303.54\n86  482D973AA378FFF0 2014-12-05 10327.423 31746.76  9465.2222  1769495.16\n87  B3E02024E600E8BA 2014-12-05 29413.972 30713.07  2585.2294   385093.11\n88  709639180E81EC72 2014-12-05 24862.822 33234.80  4192.2895   558760.53\n89  AE9636556732D218 2014-12-05  5753.634 31501.45 11013.6245  5675810.85\n90  960862F1C1B08BFA 2014-12-05 27002.693 32905.58  6241.3329  2096085.23\n91  0BE668D9B5368B3F 2014-12-05 19293.763 33172.62  3644.1318   722588.68\n92  9767E56D0C09A484 2014-12-05 40835.377 32903.60  8698.5970  2550461.67\n93  7CD74371F5BAD860 2014-12-05 11668.244 33336.53  6249.4771  2042630.98\n94  029BD940F4455194 2014-12-05  9693.971 33074.43  7268.4508  3260399.46\n95  06B9FD8607810069 2014-12-05 26896.402 31045.02  5469.4411  1346152.78\n96  DCC789993ED54477 2014-12-05 30934.989 31623.15  1681.6270   171334.39\n97  E8FA232C5BEEA956 2014-12-05 29817.330 31611.00  1478.0500    49626.02\n98  D8225E737A6496B4 2014-12-05 29583.255 31639.48  2301.2303   193992.35\n99  6DFA7E9068F7B4CE 2014-12-05 30693.783 31819.13  1686.0095   120171.32\n100 97A1E6DEEC6C442D 2014-12-05 31396.891 31457.29  4634.7843   850853.91\n101 F7ADADFB700DFB84 2014-12-05 25202.761 31065.97  5969.6450  1026467.39\n102 876C892801F74239 2014-12-05 27162.876 31905.73  1864.4887   167537.07\n103 44613908A004F20C 2014-12-05 36263.983 31684.27  6019.2791  1160017.48\n104 4B0C61FF99008ACC 2014-12-05 16367.556 33519.99  6612.9032  2560995.94\n105 F1279A5E67F0E58D 2014-12-05 32110.063 33765.67  3745.0340   735502.23\n106 180FC14DBEF3A0A4 2014-12-05 19489.656 33800.87  4665.7560   948158.91\n107 554AD3E3224BB5DD 2014-12-05 28070.258 33930.26  5346.8097  1321089.88\n108 1E89C4218E6421C2 2014-12-05 40379.421 33744.22  7811.5890  2997307.46\n109 69C9F7CD6F08EA3A 2014-12-05 31175.957 33827.94  5603.0009  1376830.05\n110 779D071A741FD0DE 2014-12-05 29975.264 34194.07  6804.3410  1926622.00\n111 B16AC41469AD9EB5 2014-12-05  6921.159 33401.42 10583.7111  3203306.04\n112 B1041F5E831D2636 2014-12-05 10883.947 34203.70  8601.2028  2349378.27\n113 C96E4D530743AF4C 2014-12-05 32761.492 34229.72  4055.2027   963198.88\n114 98C98587CD02475A 2014-12-05 18514.600 34285.80  3024.2758   485022.31\n115 6CCF8637EBA7EA5E 2014-12-05 14192.465 34209.55  6899.9995  1881305.83\n116 5DB075FA57F73ADC 2014-12-05 24463.149 34200.33  5905.9042  1425083.18\n117 528DB1419283465B 2014-12-05 37158.702 34115.97  6785.1117  2387277.53\n118 55705659E2A91D11 2014-12-05 35680.901 32176.35  5062.8149  1078992.03\n119 A29DC7655F65E7B3 2014-12-05 23711.437 32294.77  3420.3293   459546.29\n120 710C13F4E3EDBBE6 2014-12-05 30093.415 32386.21  2540.9604   247887.63\n121 8B2F19EEE51EDA60 2014-12-05 28587.163 32653.94  2399.4073   213581.64\n122 0664CA7EF6504AE5 2014-12-05 15250.743 32183.92 11355.0022  2464856.70\n123 F78E0287D3F24214 2014-12-05 13418.492 32264.59  8738.6794  1940693.42\n124 274A049950D70524 2014-12-05 11970.143 32202.39  6422.0421  2118499.41\n125 00F5E30B5C9B7AD8 2014-12-05 22899.190 32579.94  3223.6455   485046.92\n126 A7A07F328A38B6EF 2014-12-05 30874.406 32569.53  3609.1505   757907.61\n127 254596A2516A7DBA 2014-12-05 28108.881 32875.27  2798.5985   351242.25\n128 A6EE4A49376B69C4 2014-12-05 19228.603 32265.40  5689.6469  1312922.68\n129 8E9608C7B3B27AD7 2014-12-05 21751.751 32627.89  4666.9701   946651.42\n130 B2C4E087B443854E 2014-12-05 20183.450 32707.54  3630.1892   748043.28\n131 B548D80BC47261CB 2014-12-05 29891.531 32888.53  4344.6122  1022292.30\n132 0D1D1759D7BC6D6C 2014-12-05 32338.321 33018.76  2972.1110   410994.54\n133 F605DD67E5154CFB 2014-12-05 31579.289 32929.53  3710.9046   839488.98\n134 FF2AA0D68743AE28 2014-12-05 22210.509 33177.22  6626.6672  1228487.73\n135 857DAA77ED3346BF 2014-12-05 17912.978 35033.91  3096.9841   554623.68\n136 12A4B25B07B14D08 2014-12-05 22485.019 34364.29  8185.1973  3392897.36\n137 12CC0A25547E67F9 2014-12-05 35039.550 34647.26  5573.5329  1878092.48\n138 323E7ABC6E27B92B 2014-12-05 32485.490 35050.20  3836.1058   867750.44\n139 C54D6A4E4D1A775C 2014-12-05 31596.799 35028.10  3496.8817   639143.56\n140 1CD927A110152200 2014-12-05  7737.033 34331.09  7702.8249  3260150.86\n141 E896DA37D43AE86B 2014-12-05 30814.328 35440.97  2901.7894   411403.94\n142 3FBAA35FE787D703 2014-12-05 30193.135 35272.75  2626.1366   418657.36\n143 9B1413350A34D0D4 2014-12-05 12929.745 34857.75  8830.5553  2098176.50\n144 A5DB0CB48852975E 2014-12-05 11290.267 35199.67  5137.7178  1524551.34\n145 FA35D874BD766895 2014-12-05 31670.479 35799.90  3778.8906   813382.98\n146 832B7D27EAD276CE 2014-12-05 15522.036 35189.14  6583.6941  1484296.47\n147 3BBFD45071B70ECF 2014-12-05 16697.012 35114.91  8828.6338  3108023.27\n148 F09D85529E92E6F5 2014-12-05 28943.192 35787.35  4516.8400  1037281.09\n149 0E5F89C6D8042867 2014-12-05 36485.395 35307.04  8153.8881  2820171.68\n150 703D4A0324A15A14 2014-12-05 17485.175 35841.78  4018.4210   924762.48\n151 D5DC9A5BC8BC1AC1 2014-12-05 19631.873 35910.96  6998.8059  1806553.08\n152 1D90F8ED7A36C82C 2014-12-05 13396.626 35811.73  4649.7972  1404536.64\n153 F3CEF1310CE15C52 2014-12-05 38351.117 35800.61  6899.5259  2379331.53\n154 0E1BA5E467E89BE8 2014-12-05 19433.120 34884.25  6119.8835  2077796.55\n155 F910FC998DE2CB15 2014-12-05 27515.312 35112.62  7234.1107  3142950.11\n156 1DC35394CBDDDADD 2014-12-05 25207.843 35039.29  7428.7003  2636483.26\n157 33EC42B8FE3B21D0 2014-12-05 33454.069 35419.73  4254.5313  1057165.24\n158 E40040F5493ECE07 2014-12-05 14631.806 35240.97  4899.0340  1287949.82\n159 4A20B4AB7C41B9D6 2014-12-05 30646.843 35893.11  3271.2712   439646.76\n160 013B509B8EDF15BE 2014-12-05 18294.177 35518.17  4462.3144   746882.30\n161 849909336BD70CC9 2014-12-05 29811.601 35855.51  3513.7569   446241.79\n162 B522727043B8AF0C 2014-12-05 32632.539 35918.01  3323.7428   572502.14\n163 83AFAB768B6B2B66 2014-12-05 33592.576 32970.83  7100.6991  2959367.63\n164 DAC6AB8C67377C3B 2014-12-05 25732.654 32985.85  6430.9861  2158289.72\n165 50F53AE70EC1A4A3 2014-12-05 29057.442 33323.92  5388.7419  1347456.01\n166 E793F02FC4904B9B 2014-12-05 14079.100 33391.56  7135.4425  2338909.49\n167 B34F041CC4B050EC 2014-12-05 37694.552 33007.27  8750.3863  4297140.71\n168 FE2A39D748C39557 2014-12-05 20613.245 33368.82  4251.4454   991039.78\n169 BE682D8040DECFEA 2014-12-05 23947.764 33247.68  7565.1701  2049551.25\n170 58687154BD252A0A 2014-12-05 35237.168 33246.06  7028.3401  2579087.17\n171 B2B5A419BCAB53ED 2014-12-05 17965.722 33016.34  8204.2974  3187584.08\n172 87E39292C52D96D3 2014-12-05 14403.779 36444.63  3708.3663   906317.39\n173 7CED8DCEA0FF3FC1 2014-12-05 19566.361 36806.30  2619.5524   380201.80\n174 2CB400C307F6BCD9 2014-12-05 17865.884 36623.21  3414.7994   526383.35\n175 4CE31051AB87CA5E 2014-12-05 18773.558 36680.05  3782.8270   800298.56\n176 85166B505D7B3F6B 2014-12-05 32866.523 36522.07  4658.9994   898561.30\n177 714E35D7866DC63D 2014-12-05 15507.935 36890.28  5589.7846  1793463.63\n178 F2BFB371A2C0DEFA 2014-12-05  5918.996 34910.58 13318.7734  3188097.31\n179 2C840AED9CEFDB07 2014-12-05 35133.315 37075.32  3433.8848   494504.07\n180 3E0A343DED145DD2 2014-12-05 32157.375 37148.61  4784.6232  1061889.35\n181 54980EC3DD176721 2014-12-05 30191.909 36882.19  5680.7194  1794461.26\n182 2E3EA3D1BBF9A601 2014-12-05 39421.657 36739.21  8058.3357  3475209.89\n183 56BA53C9A2E97051 2014-12-05 17861.636 37527.33  4392.3622  1225673.65\n184 6BA8E702DD748D19 2014-12-05 34951.396 37089.43  8517.5962  1974371.71\n185 1EC9354628DA67BE 2014-12-05 19151.828 37505.98  5564.3332  1085080.08\n186 1363543F3E7844CC 2014-12-05 29287.585 37383.76  6383.4793  1964134.53\n187 A6921D5CCCE1A298 2014-12-05 13953.527 37532.72  5864.5928  1974943.24\n188 5E964070D9B0D244 2014-12-05 21822.627 37285.26  9051.9091  4141322.43\n189 21658EAAF84F4D8D 2014-12-05 41122.547 37392.39 10180.6241  4339824.14\n190 83A61CB3DD808C5B 2014-12-05 34043.045 36213.01  6396.6284  1796058.93\n191 A74ED9CED03678BA 2014-12-05  7798.168 35535.61  9918.4642  2251155.70\n192 6C125B9A8CCB91DA 2014-12-05 16721.252 36571.26  3817.5211   776142.49\n193 D3B6116B19FF864D 2014-12-05 12593.141 36299.93  7192.2087  2206305.01\n194 8CF45D8EE07ED019 2014-12-05 31327.763 36732.63  5440.3473  1180126.11\n195 E55224E9EB1AAB39 2014-12-05 26525.528 34268.85  4827.4083  1229894.42\n196 D310037B2BD7FD2C 2014-12-05 20805.313 34279.45  4572.1305   964682.68\n197 A6E1CADF14D4862F 2014-12-05 33774.348 34399.16  4585.7882  1263409.40\n198 7E3E15992F058B10 2014-12-05 30817.606 34898.90  2500.8523   369770.56\n199 A2254301F85C1EDF 2014-12-05 39429.210 34737.62  8414.9621  3203663.49\n200 F05298981CE86DAB 2014-12-05 29409.744 34982.20  5201.9688  1107267.04\n201 3B624AD13872144A 2014-12-05 38291.979 39463.33  4812.8629  1287387.26\n202 EED5DED3CE2CF722 2014-12-05 35128.001 39812.39  3960.4469   842667.63\n203 F0518D430182A509 2014-12-05 35870.257 39071.44  5788.9600  1333532.99\n204 BE2E2BB27D14DC52 2014-12-05 35222.441 39071.34  5617.4308  1007410.00\n205 FE6D048ED663500B 2014-12-05 27715.924 39634.53  4326.1113   894516.08\n206 61A034F12715D43D 2014-12-05 20535.390 39769.44  3992.4260   911208.29\n207 8ADEB58B9C197CD0 2014-12-05 18333.674 39720.62  4680.7833  1143813.67\n208 27B0E0BDE3579753 2014-12-05 33849.221 39506.87  6424.4821  1328876.20\n209 4BADA58E2612A6E2 2014-12-05 36649.311 39403.49  5898.4757   609894.67\n210 434BCF269E20F681 2014-12-05 21431.229 39899.53  4350.1357   763183.43\n211 22AC7070AFD473BD 2014-12-05 21127.192 35561.88  7637.8095  2768353.56\n212 7AED94EB01C4B0C6 2014-12-05 23436.269 35866.37  8976.7441  3467036.98\n213 1511CC4BB4BE642B 2014-12-05 43110.614 34607.31 12926.0470  7833992.84\n214 80BC46AD51E70C08 2014-12-05 41431.063 35870.79  7402.5608  2778635.66\n215 38D2C20DFB2C1BB6 2014-12-05 17462.292 40146.41  4555.0580   862737.09\n216 504681216FE2A24B 2014-12-05 39851.409 40140.22  5128.4949  1583440.16\n217 34215498CFFEE6DF 2014-12-05 28750.498 40360.63  3707.0057   846137.20\n218 86A32783BB5CDD32 2014-12-05 33351.522 40336.80  6199.2675  1744387.41\n219 B0AC5DFFC3C9CC3B 2014-12-05 19269.994 40394.11  4531.9815  1001591.79\n220 CCB9716DE31DDEF5 2014-12-05 18465.672 40772.92  4202.4966  1097298.80\n221 7460F2CFB1D7D36C 2014-12-05 44092.338 38928.66 14918.1082  4848516.74\n222 2F183C2676E91CD1 2014-12-05 21080.957 40748.09  3800.6089   668454.44\n223 E8D08EFDCD0D5E22 2014-12-05 19897.947 40895.36  3836.2542   624877.50\n224 BAD02A93A41830EC 2014-12-05 20536.714 40906.65  3686.6906   674992.00\n225 AE4E2159139560B6 2014-12-05 31676.963 40603.20  6498.6511  2330683.26\n226 380E7DCFD2E09905 2014-12-05 34304.251 40761.09  5216.0174  1093213.49\n227 75F91E9882406325 2014-12-05 30234.368 40602.65  5592.1911  1861872.04\n228 5E2B16BB381BAEA4 2014-12-05 29443.745 40836.02  4533.2184   909418.57\n229 05FD555397CBEE7A 2014-12-05 43294.834 39888.77  6203.0021  2114789.49\n230 DECC20CBAF2CD0C4 2014-12-05 27445.771 40971.42  8162.6002  3334192.44\n231 6EDE1DB873D24BDD 2014-12-05 33930.317 37657.03  5438.2110  1515533.89\n232 FA9C76B49B6D0C95 2014-12-05 42801.735 37930.55  3956.6158   944998.45\n233 3111003F85F45513 2014-12-05 20276.653 37526.46  6673.9340  1990788.40\n234 ACFD43D8AE3F7B3F 2014-12-05 49502.487 34316.54 18731.5600  1829821.69\n235 389E16D1B4BCDE92 2014-12-05 38065.448 37522.40  7470.1120  2259239.74\n236 0ABCF49C51112DC2 2014-12-05 27884.687 37749.39 10082.0753  3860324.99\n237 7688003183213EBF 2014-12-05 18505.465 38307.47  3842.9940   859179.18\n238 377A4E677018DDF9 2014-12-05 29686.468 38599.50  3313.3174   546403.86\n239 19C0ECAF2E3AE59A 2014-12-05 33270.791 38331.48  5644.2877  1948613.21\n240 94B98B182E1B853F 2014-12-05 30485.511 38478.99  4710.5387  1078622.32\n241 B208B7127D3E0A31 2014-12-05 28564.716 38888.92  4019.2295   687930.10\n242 9E333AF1E3047F58 2014-12-05 31710.823 38310.22  6972.4191  3023148.98\n243 C4419A9A8D05E0DF 2014-12-05 34470.700 39076.60  2759.8155   441733.44\n244 4B656D023BC2388D 2014-12-05 43592.331 38890.09  4185.4629   970068.07\n245 FE385B2E17662DDF 2014-12-05 21181.120 38939.84  4814.1954  1235901.75\n246 2B73597AF3F174F3 2014-12-05 42032.458 38988.22  5311.0604  1639669.02\n247 619A4A5A72D3F75A 2014-12-05 39763.942 38698.17  7128.3554  2543106.63\n248 504511A82C516D62 2014-12-05 30312.192 39413.35  4218.9581   955710.19\n249 B996E2754B3DA5E1 2014-12-05 29501.766 39419.40  2642.2088   316882.02\n250 60BFB1E98CF343F9 2014-12-05 28700.167 39496.51  4288.1942  1046417.00\n251 2648D1D39685215F 2014-12-05 31498.878 39642.22  4299.2112   921430.95\n252 7E6091D123C993EB 2014-12-05 16363.189 38432.55 12808.8765  7370557.68\n253 C685042EC58E5C55 2014-12-05 32458.803 39597.64  3610.7324   684704.30\n254 FF244AAC9D31CDAF 2014-12-05 40755.902 39341.75  5273.2390  1511487.38\n255 1DCF02A5C4038697 2014-12-05 19560.703 39034.54  7921.5572  2459098.27\n256 C3865987F1E8B141 2014-12-05 36691.911 37730.72 11966.0168  7034806.47\n257 3487338E07E5DE5F 2014-12-05 19766.843 46226.35  7899.9523  3652031.03\n258 9856E3CDCF57AD96 2014-12-05 41529.798 40218.94  8533.9640  1719704.60\n259 1ED0377B40E71BDA 2014-12-05 18347.568 41593.76  4552.3147  1088638.01\n260 986666487FF7CF78 2014-12-05 35977.611 41060.80  6315.9544  1569034.78\n261 53C82220D68B4128 2014-12-05 31319.943 41936.68  5991.0200  1670029.86\n262 C2885440D673A7A2 2014-12-05 32806.291 41896.37  6491.7679  2391082.76\n263 7462F6141FA74A37 2014-12-05 36673.899 41847.09  5229.1161  1378710.54\n264 D172AF50E2754CBF 2014-12-05 18498.114 42506.07  3715.3942   923214.75\n265 9658EA18C574343B 2014-12-05 38612.497 41196.68 10606.6469  5325421.58\n266 14D0DB33976B7B81 2014-12-05 35089.985 42728.27  5361.9160  1418284.25\n267 A9E7E4A7DEE0B6F2 2014-12-05 37063.224 42568.22  5391.0651  1489246.88\n268 B462B6D7566CF5CD 2014-12-05 20165.069 42429.24  9036.6828  5186128.08\n269 70B39BA5469B9018 2014-12-05 46661.849 36599.82 28163.2283 35096028.59\n270 CCAEEFD474A4B1A3 2014-12-05 29505.988 41733.44  6445.2430  1463278.18\n271 0F530A1557E9AF1F 2014-12-05 44603.633 41360.42  4897.4824   995944.77\n272 5A2D0E9E6B285069 2014-12-05 35163.812 41501.14  5216.4005  1455507.86\n273 F00F5344E293F642 2014-12-05 34218.535 41815.32  5112.4618  1499108.63\n274 4A9FCDF7EAE9BEAE 2014-12-05 36619.215 40404.62  3930.0968   924866.02\n275 42D160EC51F711D5 2014-12-05 28500.547 44471.67  5781.5881  1340167.99\n276 CF8B2D55A2958851 2014-12-05 29437.620 43432.05 15209.7628  8453312.38\n277 317584A40150FF3F 2014-12-05 36169.557 44222.77  5355.6371  1360000.63\n278 F6266F7368DBB9AB 2014-12-05 27082.698 45367.46  1633.7084   143137.94\n279 796B74418F857A6C 2014-12-05 28483.071 45383.33  2549.6432   436368.53\n280 DF9C2E922175C69D 2014-12-05 34428.849 44535.90  4817.8037  1259743.11\n281 17459E60C3EEAF30 2014-12-05 20234.601 44507.19  7665.6760  3291405.51\n282 8A4E14DAC4ACE11C 2014-12-05 23609.573 45692.88  5211.3844  1576001.48\n283 B1222FC839464134 2014-12-05 21905.285 45668.04  6284.5997  1665469.26\n284 7E20200E3D7B0C16 2014-12-05 29476.600 45515.72  5945.7041  1767092.90\n285 82062B23CEEE75F2 2014-12-05 12020.342 40454.87 44305.6606 69748298.79\n286 20F2831A2780CFEB 2014-12-05 33050.098 45213.53  6251.2078  2050051.22\n287 95C11920195B86C7 2014-12-05 27743.267 45873.60  5318.5793  1517767.39\n288 8AEF535CD000EA39 2014-12-05 22571.209 46698.87  3254.3433   595652.14\n289 40050ADDFBCC870F 2014-12-05 18367.171 45940.49 10399.4245  3284130.42\n290 C90769E43EE6B0F2 2014-12-05 24506.638 46991.63  6603.6083  2553463.72\n291 772A64AB9A93FC3A 2014-12-05 26268.733 47558.08  3955.1176   962437.40\n292 A38714A4F4163DCE 2014-12-05 22608.389 47660.06  4620.8656  1281296.51\n293 5C6A0B0C3E280F49 2014-12-05 27788.940 47682.83  3494.9734   758123.46\n294 ACD9BD92A81177CE 2014-12-05 23921.551 48088.74  3966.7410   905921.12\n295 66E54DD5CE0C71A2 2014-12-05 31511.014 47245.33  5466.0483  1611278.68\n296 2E2DB30B78E2AC57 2014-12-05 27091.275 48333.80  4534.2519  1261648.75\n297 E4489A0861169020 2014-12-05 15309.817 45819.04 18733.8363 17494884.18\n298 19529EBD71A301DD 2014-12-05 29388.714 47645.28  9071.7524  3450455.36\n299 01A4287FB060A0A6 2014-12-05 25130.655 48346.03  5262.5628  1741957.36\n300 F4016BB091C51693 2014-12-05 26038.808 48732.91  5519.9348  1394865.68\n301 74181C5882F588F0 2014-12-05 29959.631 48428.17  4322.1952  1074375.12\n302 92BC3E09C68F3B52 2014-12-05 50424.792 42612.88 62436.2354 67250562.96\n303 44831379A129F359 2014-12-05 25739.274 45391.76 11572.5295  7235809.44\n304 86605C93A9575D00 2014-12-05 30567.900 46241.50  7166.9137  2147082.07\n305 A0E30DFB562910D3 2014-12-05 28520.581 46642.72  5057.1199  1511000.36\n306 42D5F52D334C615F 2014-12-05 23349.760 46841.11  4159.2014   936415.53\n307 4215C006676A7D38 2014-12-05 21582.590 46573.02  5929.6447  1648629.91\n308 C739B507A1ACBDB3 2014-12-05 27076.812 46959.09  4212.0422  1099394.72\n309 5D0241839A91E181 2014-12-05 26969.723 42586.22  6912.8008  2209210.71\n310 625C5BEC57D068FE 2014-12-05 35602.378 43427.51  4896.7675  1264384.79\n311 4AAC92E24CAB13A5 2014-12-05 25921.725 43261.52  7074.0708  2206695.55\n312 4577C2B37C75D519 2014-12-05 37408.842 43168.57  6279.4648  1265919.30\n313 52D00685FE621970 2014-12-05 24424.418 39849.05 30538.2462 37147854.46\n314 E63BBDBBA2B092AF 2014-12-05 33371.550 43425.09  8487.2745  3916069.34\n315 310C8087D7221C08 2014-12-05 18535.568 43826.08  7561.9901  2175380.06\n316 0C69219764BD4C25 2014-12-05 31690.730 43796.91  8946.5605  3621841.18\n317 DC75517DA31123DB 2014-12-05 27480.636 44420.69  4956.1457  1432913.06\n318 FFCCF172717C2EAF 2014-12-05 22549.074 44455.85  9630.6272  4387133.12\n319 8B13A48924BBE015 2014-12-05 37928.498 43351.37  5670.1371  1200804.56\n320 898B2436858382A1 2014-12-05 22147.036 48031.55 10847.8820  2450783.61\n321 AA1A638CA2B0D5B7 2014-12-05 28352.477 48918.27  7217.3884  1540733.67\n322 6D89875A351CF51C 2014-12-05 26945.068 49552.79 11828.8777  1635808.13\n323 A800CBEE879C1BF9 2014-12-05 24665.788 49482.60  7392.1289  2241386.62\n                          geometry\n1   MULTIPOLYGON (((31495.56 30...\n2   MULTIPOLYGON (((29092.28 30...\n3   MULTIPOLYGON (((29932.33 29...\n4   MULTIPOLYGON (((27131.28 30...\n5   MULTIPOLYGON (((26451.03 30...\n6   MULTIPOLYGON (((25899.7 297...\n7   MULTIPOLYGON (((27746.95 30...\n8   MULTIPOLYGON (((29351.26 29...\n9   MULTIPOLYGON (((20996.49 30...\n10  MULTIPOLYGON (((24472.11 29...\n11  MULTIPOLYGON (((23332.77 30...\n12  MULTIPOLYGON (((26231.96 30...\n13  MULTIPOLYGON (((33214.62 29...\n14  MULTIPOLYGON (((28481.45 30...\n15  MULTIPOLYGON (((28087.34 30...\n16  MULTIPOLYGON (((14557.7 304...\n17  MULTIPOLYGON (((15772.59 21...\n18  MULTIPOLYGON (((19843.41 21...\n19  MULTIPOLYGON (((29712.51 23...\n20  MULTIPOLYGON (((26858.1 266...\n21  MULTIPOLYGON (((27891.15 28...\n22  MULTIPOLYGON (((29201.07 28...\n23  MULTIPOLYGON (((31269.21 28...\n24  MULTIPOLYGON (((26514.58 28...\n25  MULTIPOLYGON (((26638.88 29...\n26  MULTIPOLYGON (((29341.73 29...\n27  MULTIPOLYGON (((29808.18 28...\n28  MULTIPOLYGON (((26931.6 293...\n29  MULTIPOLYGON (((25046 29318...\n30  MULTIPOLYGON (((22948.23 29...\n31  MULTIPOLYGON (((30436.73 29...\n32  MULTIPOLYGON (((28176.74 28...\n33  MULTIPOLYGON (((25910.34 29...\n34  MULTIPOLYGON (((29099.02 29...\n35  MULTIPOLYGON (((26750.09 29...\n36  MULTIPOLYGON (((29161.2 297...\n37  MULTIPOLYGON (((29814.11 29...\n38  MULTIPOLYGON (((30137.77 29...\n39  MULTIPOLYGON (((29699.44 29...\n40  MULTIPOLYGON (((27748.04 29...\n41  MULTIPOLYGON (((30844.87 29...\n42  MULTIPOLYGON (((27444.04 29...\n43  MULTIPOLYGON (((30436.73 29...\n44  MULTIPOLYGON (((35279.55 30...\n45  MULTIPOLYGON (((31353.26 30...\n46  MULTIPOLYGON (((29803.48 31...\n47  MULTIPOLYGON (((28836.19 31...\n48  MULTIPOLYGON (((30671.27 30...\n49  MULTIPOLYGON (((24834.91 30...\n50  MULTIPOLYGON (((37589.39 31...\n51  MULTIPOLYGON (((22653.1 306...\n52  MULTIPOLYGON (((27695.96 31...\n53  MULTIPOLYGON (((28677.44 31...\n54  MULTIPOLYGON (((30240.46 31...\n55  MULTIPOLYGON (((28448.32 30...\n56  MULTIPOLYGON (((20404.57 30...\n57  MULTIPOLYGON (((29383.41 31...\n58  MULTIPOLYGON (((30574.12 31...\n59  MULTIPOLYGON (((30306 31670...\n60  MULTIPOLYGON (((27640.37 31...\n61  MULTIPOLYGON (((27483.57 28...\n62  MULTIPOLYGON (((29612.3 286...\n63  MULTIPOLYGON (((28833.25 28...\n64  MULTIPOLYGON (((24243.72 30...\n65  MULTIPOLYGON (((29787.11 32...\n66  MULTIPOLYGON (((30371.78 31...\n67  MULTIPOLYGON (((23341.24 32...\n68  MULTIPOLYGON (((31632.98 30...\n69  MULTIPOLYGON (((34842.6 309...\n70  MULTIPOLYGON (((24544.1 321...\n71  MULTIPOLYGON (((22053.2 320...\n72  MULTIPOLYGON (((25742.29 32...\n73  MULTIPOLYGON (((28674.31 32...\n74  MULTIPOLYGON (((20447.11 31...\n75  MULTIPOLYGON (((4929.537 32...\n76  MULTIPOLYGON (((28882.44 31...\n77  MULTIPOLYGON (((39348.48 32...\n78  MULTIPOLYGON (((21204.25 32...\n79  MULTIPOLYGON (((8511.338 32...\n80  MULTIPOLYGON (((18190.15 31...\n81  MULTIPOLYGON (((28026.35 32...\n82  MULTIPOLYGON (((31915.99 31...\n83  MULTIPOLYGON (((28223.65 32...\n84  MULTIPOLYGON (((29664.48 31...\n85  MULTIPOLYGON (((30316.83 31...\n86  MULTIPOLYGON (((11034.96 32...\n87  MULTIPOLYGON (((29598.97 30...\n88  MULTIPOLYGON (((25266.67 33...\n89  MULTIPOLYGON (((7045.641 31...\n90  MULTIPOLYGON (((26819.04 31...\n91  MULTIPOLYGON (((19371.3 335...\n92  MULTIPOLYGON (((42475.62 33...\n93  MULTIPOLYGON (((12720.61 33...\n94  MULTIPOLYGON (((9338.887 33...\n95  MULTIPOLYGON (((27519.62 31...\n96  MULTIPOLYGON (((30913.01 31...\n97  MULTIPOLYGON (((29942.37 31...\n98  MULTIPOLYGON (((29794.8 319...\n99  MULTIPOLYGON (((30757.13 31...\n100 MULTIPOLYGON (((31494.25 32...\n101 MULTIPOLYGON (((24860.18 31...\n102 MULTIPOLYGON (((26935.71 31...\n103 MULTIPOLYGON (((37525.15 31...\n104 MULTIPOLYGON (((17380.34 34...\n105 MULTIPOLYGON (((32710.73 33...\n106 MULTIPOLYGON (((19908.1 330...\n107 MULTIPOLYGON (((28959.61 34...\n108 MULTIPOLYGON (((39362.15 32...\n109 MULTIPOLYGON (((31277.37 34...\n110 MULTIPOLYGON (((31228.81 34...\n111 MULTIPOLYGON (((7570.264 33...\n112 MULTIPOLYGON (((10481.34 34...\n113 MULTIPOLYGON (((33353.54 33...\n114 MULTIPOLYGON (((18938.25 33...\n115 MULTIPOLYGON (((15436.02 34...\n116 MULTIPOLYGON (((25771.96 33...\n117 MULTIPOLYGON (((38141.63 34...\n118 MULTIPOLYGON (((36317.74 32...\n119 MULTIPOLYGON (((23744.11 32...\n120 MULTIPOLYGON (((30437.59 32...\n121 MULTIPOLYGON (((28959.95 32...\n122 MULTIPOLYGON (((14483.48 31...\n123 MULTIPOLYGON (((12861.38 32...\n124 MULTIPOLYGON (((12920.17 32...\n125 MULTIPOLYGON (((23175.98 32...\n126 MULTIPOLYGON (((31389.56 32...\n127 MULTIPOLYGON (((28027.4 323...\n128 MULTIPOLYGON (((19680.06 31...\n129 MULTIPOLYGON (((22199.28 32...\n130 MULTIPOLYGON (((20238.63 32...\n131 MULTIPOLYGON (((30344.12 32...\n132 MULTIPOLYGON (((32160.87 32...\n133 MULTIPOLYGON (((31437.02 32...\n134 MULTIPOLYGON (((23068.3 331...\n135 MULTIPOLYGON (((18113.26 34...\n136 MULTIPOLYGON (((23191.9 337...\n137 MULTIPOLYGON (((34416.78 33...\n138 MULTIPOLYGON (((32843.21 35...\n139 MULTIPOLYGON (((31317.36 35...\n140 MULTIPOLYGON (((8268.008 32...\n141 MULTIPOLYGON (((31203.01 35...\n142 MULTIPOLYGON (((30184.87 34...\n143 MULTIPOLYGON (((14212.28 35...\n144 MULTIPOLYGON (((11768.57 35...\n145 MULTIPOLYGON (((32023.35 36...\n146 MULTIPOLYGON (((15941.47 34...\n147 MULTIPOLYGON (((16156.66 36...\n148 MULTIPOLYGON (((29274.16 36...\n149 MULTIPOLYGON (((37495.22 36...\n150 MULTIPOLYGON (((17367.24 35...\n151 MULTIPOLYGON (((20198.51 36...\n152 MULTIPOLYGON (((13673.08 35...\n153 MULTIPOLYGON (((39853.92 35...\n154 MULTIPOLYGON (((20310.59 34...\n155 MULTIPOLYGON (((28297.1 359...\n156 MULTIPOLYGON (((25392.54 35...\n157 MULTIPOLYGON (((33684.04 35...\n158 MULTIPOLYGON (((14105.97 34...\n159 MULTIPOLYGON (((31018.84 36...\n160 MULTIPOLYGON (((18611.03 35...\n161 MULTIPOLYGON (((30233.85 35...\n162 MULTIPOLYGON (((33037.89 36...\n163 MULTIPOLYGON (((34449.13 33...\n164 MULTIPOLYGON (((26662.22 33...\n165 MULTIPOLYGON (((29691.81 33...\n166 MULTIPOLYGON (((15377.33 33...\n167 MULTIPOLYGON (((36551.53 31...\n168 MULTIPOLYGON (((20903.48 32...\n169 MULTIPOLYGON (((23704.38 33...\n170 MULTIPOLYGON (((35619.75 32...\n171 MULTIPOLYGON (((18866.43 33...\n172 MULTIPOLYGON (((14219.85 35...\n173 MULTIPOLYGON (((19587.9 364...\n174 MULTIPOLYGON (((18390.81 36...\n175 MULTIPOLYGON (((19576.04 36...\n176 MULTIPOLYGON (((33460.96 36...\n177 MULTIPOLYGON (((16296.05 36...\n178 MULTIPOLYGON (((6326.528 36...\n179 MULTIPOLYGON (((35580.28 37...\n180 MULTIPOLYGON (((32777.72 37...\n181 MULTIPOLYGON (((30988.88 36...\n182 MULTIPOLYGON (((39918.43 35...\n183 MULTIPOLYGON (((18550.85 37...\n184 MULTIPOLYGON (((35768.73 37...\n185 MULTIPOLYGON (((19526.77 37...\n186 MULTIPOLYGON (((29469.7 363...\n187 MULTIPOLYGON (((13848.87 36...\n188 MULTIPOLYGON (((23235.16 37...\n189 MULTIPOLYGON (((42196.76 38...\n190 MULTIPOLYGON (((34312.34 37...\n191 MULTIPOLYGON (((6851.701 36...\n192 MULTIPOLYGON (((17129.98 36...\n193 MULTIPOLYGON (((12670.56 35...\n194 MULTIPOLYGON (((31359.94 37...\n195 MULTIPOLYGON (((27284.61 34...\n196 MULTIPOLYGON (((20627.17 34...\n197 MULTIPOLYGON (((33477.75 33...\n198 MULTIPOLYGON (((31229.75 34...\n199 MULTIPOLYGON (((40284.24 35...\n200 MULTIPOLYGON (((29419.83 35...\n201 MULTIPOLYGON (((38857.81 38...\n202 MULTIPOLYGON (((35819.13 40...\n203 MULTIPOLYGON (((36000.48 38...\n204 MULTIPOLYGON (((34705.08 38...\n205 MULTIPOLYGON (((27744.03 38...\n206 MULTIPOLYGON (((20458.98 39...\n207 MULTIPOLYGON (((18700.53 39...\n208 MULTIPOLYGON (((34621.73 40...\n209 MULTIPOLYGON (((37483.61 40...\n210 MULTIPOLYGON (((21530.33 40...\n211 MULTIPOLYGON (((21069.06 36...\n212 MULTIPOLYGON (((24031.39 36...\n213 MULTIPOLYGON (((43280.93 35...\n214 MULTIPOLYGON (((41221.16 34...\n215 MULTIPOLYGON (((17876.69 39...\n216 MULTIPOLYGON (((40016.02 39...\n217 MULTIPOLYGON (((29269.91 39...\n218 MULTIPOLYGON (((33363.8 410...\n219 MULTIPOLYGON (((19776.93 40...\n220 MULTIPOLYGON (((19023.08 40...\n221 MULTIPOLYGON (((43581.17 41...\n222 MULTIPOLYGON (((21508.83 40...\n223 MULTIPOLYGON (((20331.76 41...\n224 MULTIPOLYGON (((20632.96 40...\n225 MULTIPOLYGON (((30825.29 39...\n226 MULTIPOLYGON (((34489.01 40...\n227 MULTIPOLYGON (((30467.29 39...\n228 MULTIPOLYGON (((29598.36 39...\n229 MULTIPOLYGON (((43756.39 39...\n230 MULTIPOLYGON (((27193.46 41...\n231 MULTIPOLYGON (((34418.46 37...\n232 MULTIPOLYGON (((42669.84 37...\n233 MULTIPOLYGON (((20647.51 38...\n234 MULTIPOLYGON (((48860.11 34...\n235 MULTIPOLYGON (((37983.63 36...\n236 MULTIPOLYGON (((29036.5 383...\n237 MULTIPOLYGON (((18442.46 37...\n238 MULTIPOLYGON (((29649.88 38...\n239 MULTIPOLYGON (((33107.31 37...\n240 MULTIPOLYGON (((30676.17 39...\n241 MULTIPOLYGON (((28228.2 392...\n242 MULTIPOLYGON (((32503.17 37...\n243 MULTIPOLYGON (((34940.91 39...\n244 MULTIPOLYGON (((43423.5 382...\n245 MULTIPOLYGON (((21531.41 39...\n246 MULTIPOLYGON (((42832.87 38...\n247 MULTIPOLYGON (((40676.23 38...\n248 MULTIPOLYGON (((30384.33 39...\n249 MULTIPOLYGON (((29692.8 389...\n250 MULTIPOLYGON (((28491.21 39...\n251 MULTIPOLYGON (((32278.06 40...\n252 MULTIPOLYGON (((17343.52 36...\n253 MULTIPOLYGON (((32860.5 397...\n254 MULTIPOLYGON (((40878.13 39...\n255 MULTIPOLYGON (((20294.46 39...\n256 MULTIPOLYGON (((37250.55 36...\n257 MULTIPOLYGON (((19639.22 47...\n258 MULTIPOLYGON (((41343.11 40...\n259 MULTIPOLYGON (((18074.71 42...\n260 MULTIPOLYGON (((37015.07 40...\n261 MULTIPOLYGON (((31961.99 42...\n262 MULTIPOLYGON (((33310.81 41...\n263 MULTIPOLYGON (((36644.67 42...\n264 MULTIPOLYGON (((18349.06 43...\n265 MULTIPOLYGON (((39291.19 42...\n266 MULTIPOLYGON (((35984.25 42...\n267 MULTIPOLYGON (((37838.8 424...\n268 MULTIPOLYGON (((21410.16 41...\n269 MULTIPOLYGON (((45818.88 41...\n270 MULTIPOLYGON (((30658.5 420...\n271 MULTIPOLYGON (((44586.3 417...\n272 MULTIPOLYGON (((35615.75 40...\n273 MULTIPOLYGON (((34972.39 42...\n274 MULTIPOLYGON (((37017.79 40...\n275 MULTIPOLYGON (((29187.4 449...\n276 MULTIPOLYGON (((30482.59 45...\n277 MULTIPOLYGON (((36866.94 44...\n278 MULTIPOLYGON (((27119.56 45...\n279 MULTIPOLYGON (((28293.43 44...\n280 MULTIPOLYGON (((35103.37 44...\n281 MULTIPOLYGON (((21116.19 43...\n282 MULTIPOLYGON (((24091.47 46...\n283 MULTIPOLYGON (((22694.69 46...\n284 MULTIPOLYGON (((29798.97 44...\n285 MULTIPOLYGON (((12386.35 46...\n286 MULTIPOLYGON (((33963.59 45...\n287 MULTIPOLYGON (((28191.45 45...\n288 MULTIPOLYGON (((22734.02 46...\n289 MULTIPOLYGON (((18796.95 47...\n290 MULTIPOLYGON (((24786.75 46...\n291 MULTIPOLYGON (((26311.14 46...\n292 MULTIPOLYGON (((23264.88 48...\n293 MULTIPOLYGON (((27797.78 47...\n294 MULTIPOLYGON (((23499.52 47...\n295 MULTIPOLYGON (((32351.43 46...\n296 MULTIPOLYGON (((27468.83 48...\n297 MULTIPOLYGON (((15662.88 48...\n298 MULTIPOLYGON (((29655.72 47...\n299 MULTIPOLYGON (((25627.95 47...\n300 MULTIPOLYGON (((25639.81 47...\n301 MULTIPOLYGON (((29696.12 47...\n302 MULTIPOLYGON (((52567.43 46...\n303 MULTIPOLYGON (((27006.77 46...\n304 MULTIPOLYGON (((31359.2 462...\n305 MULTIPOLYGON (((28636.13 45...\n306 MULTIPOLYGON (((23820.19 46...\n307 MULTIPOLYGON (((21900.33 45...\n308 MULTIPOLYGON (((27031.57 46...\n309 MULTIPOLYGON (((27253.37 41...\n310 MULTIPOLYGON (((36122.41 42...\n311 MULTIPOLYGON (((25528.62 44...\n312 MULTIPOLYGON (((37042.89 44...\n313 MULTIPOLYGON (((25073.29 43...\n314 MULTIPOLYGON (((33955 42590...\n315 MULTIPOLYGON (((19156.47 44...\n316 MULTIPOLYGON (((31971.82 45...\n317 MULTIPOLYGON (((27819.05 44...\n318 MULTIPOLYGON (((24684.68 44...\n319 MULTIPOLYGON (((38738.41 42...\n320 MULTIPOLYGON (((21693.06 48...\n321 MULTIPOLYGON (((29302.17 48...\n322 MULTIPOLYGON (((26219.89 50...\n323 MULTIPOLYGON (((26047.11 50..."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#importing-attribute-data-into-r",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#importing-attribute-data-into-r",
    "title": "Hands On Exercise 8",
    "section": "21.3.3 Importing Attribute Data into R",
    "text": "21.3.3 Importing Attribute Data into R\nNext, we will import respopagsex2011to2020.csv file into RStudio and save the file into an R dataframe called popagsex.\nThe task will be performed by using read_csv() function of readr package as shown in the code chunk below.\n\npopdata &lt;- read_csv(\"data/aspatial/respopagesextod2011to2020.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#data-wrangling",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#data-wrangling",
    "title": "Hands On Exercise 8",
    "section": "21.3.4 Data Wrangling",
    "text": "21.3.4 Data Wrangling\nThe data table should include the variables PA, SZ, YOUNG, ECONOMY ACTIVE, AGED, TOTAL, DEPENDENCY.\nYOUNG: age group 0 to 4 until age group 20 to 24, ECONOMY ACTIVE: age group 25-29 until age group 60-64, AGED: age group 65 and above, TOTAL: all age group, and DEPENDENCY: the ratio between young and aged against economy active group.\nThe following data wrangling and transformation functions will be used:\n\npivot_wider() of tidyr package, and\nmutate(), filter(), group_by() and select() of dplyr package\n\n\n\nShow the code\npopdata2020 &lt;- popdata %&gt;%\n  filter(Time == 2020) %&gt;%\n  group_by(PA, SZ, AG) %&gt;%\n  summarise(`POP` = sum(`Pop`)) %&gt;%\n  ungroup() %&gt;%\n  pivot_wider(names_from=AG, \n              values_from=POP) %&gt;%\n  mutate(YOUNG = rowSums(.[3:6])\n         +rowSums(.[12])) %&gt;%\nmutate(`ECONOMY ACTIVE` = rowSums(.[7:11])+\nrowSums(.[13:15]))%&gt;%\nmutate(`AGED`=rowSums(.[16:21])) %&gt;%\nmutate(`TOTAL`=rowSums(.[3:21])) %&gt;%  \nmutate(`DEPENDENCY` = (`YOUNG` + `AGED`)\n/`ECONOMY ACTIVE`) %&gt;%\n  select(`PA`, `SZ`, `YOUNG`, \n       `ECONOMY ACTIVE`, `AGED`, \n       `TOTAL`, `DEPENDENCY`)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#joining-the-attribute-data-and-geospatial-data",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#joining-the-attribute-data-and-geospatial-data",
    "title": "Hands On Exercise 8",
    "section": "21.3.5 Joining the attribute data and geospatial data",
    "text": "21.3.5 Joining the attribute data and geospatial data\nBefore we can perform the georelational join, one extra step is required to convert the values in PA and SZ fields to uppercase. This is because the values of PA and SZ fields are made up of upper- and lowercase. On the other, hand the SUBZONE_N and PLN_AREA_N are in uppercase.\n\npopdata2020 &lt;- popdata2020 %&gt;%\n  mutate(across(c(PA, SZ), toupper)) %&gt;%\n  filter(`ECONOMY ACTIVE` &gt; 0)\n\nNext, left_join() of dplyr is used to join the geographical data and attribute table using planning subzone name e.g. SUBZONE_N and SZ as the common identifier.\n\nmpsz_pop2020 &lt;- left_join(mpsz, popdata2020,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))\n\n\n\n\n\n\n\nThing to learn from the code chunk above:\n\n\n\nleft_join() of dplyr package is used with mpsz simple feature data frame as the left data table is to ensure that the output will be a simple features data frame.\n\n\n\nwrite_rds(mpsz_pop2020, \"data/rds/mpszpop2020.rds\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#plotting-a-choropleth-map-quickly-by-using-qtm",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#plotting-a-choropleth-map-quickly-by-using-qtm",
    "title": "Hands On Exercise 8",
    "section": "21.4.1 Plotting a choropleth map quickly by using qtm()",
    "text": "21.4.1 Plotting a choropleth map quickly by using qtm()\nThe easiest and quickest to draw a choropleth map using tmap is using qtm(). It is concise and provides a good default visualisation in many cases.\nThe code chunk below will draw a cartographic standard choropleth map as shown below.\n\n\nShow the code\ntmap_mode(\"plot\")\nqtm(mpsz_pop2020, \n    fill = \"DEPENDENCY\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThings to learn from the code chunk above:\n\n\n\n\ntmap_mode() with “plot” option is used to produce a static map. For interactive mode, “view” option should be used.\nfill argument is used to map the attribute (i.e. DEPENDENCY)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#creating-a-choropleth-map-by-using-tmaps-elements",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#creating-a-choropleth-map-by-using-tmaps-elements",
    "title": "Hands On Exercise 8",
    "section": "21.4.2 Creating a choropleth map by using tmap’s elements",
    "text": "21.4.2 Creating a choropleth map by using tmap’s elements\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_polygons(fill = \"DEPENDENCY\", \n              fill.scale = tm_scale_intervals(\n                style = \"quantile\",\n                n = 5,\n                values = \"brewer.blues\"),\n              fill.legend = tm_legend(\n                title = \"Dependency ratio\")) +\n  tm_title(\"Distribution of Dependency Ratio by planning subzone\") +\n  tm_layout(frame = TRUE) +\n  tm_borders(fill_alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#drawing-a-base-map",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#drawing-a-base-map",
    "title": "Hands On Exercise 8",
    "section": "21.4.3 Drawing a base map",
    "text": "21.4.3 Drawing a base map\nThe basic building block of tmap is tm_shape() followed by one or more layer elemments such as tm_fill() and tm_polygons().\nIn the code chunk below, tm_shape() is used to define the input data (i.e mpsz_pop2020) and tm_polygons() is used to draw the planning subzone polygons\n\n\nShow the code\ntm_shape(mpsz_pop2020) +\n  tm_polygons()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#drawing-a-choropleth-map-using-tm_polygons",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#drawing-a-choropleth-map-using-tm_polygons",
    "title": "Hands On Exercise 8",
    "section": "21.4.4 Drawing a choropleth map using tm_polygons()",
    "text": "21.4.4 Drawing a choropleth map using tm_polygons()\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThings to learn from the code chunk above:\n\n\n\n\nThe default interval binning used to draw the choropleth map is called “pretty”.\nThe default colour scheme used is YlOrRd of ColorBrewer.\nBy default, Missing value will be shaded in grey."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#drawing-a-choropleth-map-using-tm_fill-and-tm_border",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#drawing-a-choropleth-map-using-tm_fill-and-tm_border",
    "title": "Hands On Exercise 8",
    "section": "21.4.5 Drawing a choropleth map using tm_fill() and *tm_border()**",
    "text": "21.4.5 Drawing a choropleth map using tm_fill() and *tm_border()**\nThe code chunk below draws a choropleth map by using tm_fill() alone.\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\")\n\n\n\n\n\n\n\n\n\nTo add the boundary of the planning subzones, tm_borders will be used as shown in the code chunk below.\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_polygons(fill = \"DEPENDENCY\") +\n  tm_borders(lwd = 0.01,  \n             fill_alpha = 0.1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#data-classification-methods-of-tmap",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#data-classification-methods-of-tmap",
    "title": "Hands On Exercise 8",
    "section": "21.4.6 Data classification methods of tmap",
    "text": "21.4.6 Data classification methods of tmap\nMost choropleth maps employ some methods of data classification. The point of classification is to take a large number of observations and group them into data ranges or classes.\ntmap provides a total ten data classification methods, namely: fixed, sd, equal, pretty (default), quantile, kmeans, hclust, bclust, fisher, and jenks.\nTo define a data classification method, the style argument of tm_fill() or tm_polygons() will be used."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#plotting-choropleth-maps-with-built-in-classification-methods",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#plotting-choropleth-maps-with-built-in-classification-methods",
    "title": "Hands On Exercise 8",
    "section": "21.4.7 Plotting choropleth maps with built-in classification methods",
    "text": "21.4.7 Plotting choropleth maps with built-in classification methods\nThe code chunk below shows a quantile data classification that used 5 classes.\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n      fill.scale = tm_scale_intervals(\n        style = \"quantile\",\n        n = 5)) +\n  tm_borders(fill_alpha = 0.5)\n\n\n\n\n\n\n\n\n\nIn the code chunk below, equal data classification method is used.\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n      fill.scale = tm_scale_intervals(\n        style = \"equal\",\n        n = 5)) +\n  tm_borders(fill_alpha = 0.5)\n\n\n\n\n\n\n\n\n\nNotice that the distribution of quantile data classification method are more evenly distributed then equal data classification method."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#using-different-classification-methods",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#using-different-classification-methods",
    "title": "Hands On Exercise 8",
    "section": "21.4.8 Using different classification methods",
    "text": "21.4.8 Using different classification methods\n\nprettykmeanssdfisher\n\n\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n      fill.scale = tm_scale_intervals(\n        style = \"pretty\",\n        n = 5)) +\n  tm_borders(fill_alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n      fill.scale = tm_scale_intervals(\n        style = \"kmeans\",\n        n = 5)) +\n  tm_borders(fill_alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n      fill.scale = tm_scale_intervals(\n        style = \"sd\",\n        n = 5)) +\n  tm_borders(fill_alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n      fill.scale = tm_scale_intervals(\n        style = \"fisher\",\n        n = 5)) +\n  tm_borders(fill_alpha = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#using-similar-classification-method-but-with-different-numbers-of-classes",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#using-similar-classification-method-but-with-different-numbers-of-classes",
    "title": "Hands On Exercise 8",
    "section": "21.4.9 Using similar classification method but with different numbers of classes",
    "text": "21.4.9 Using similar classification method but with different numbers of classes\n\nfisher (2 classes)fisher (6 classes)fisher (10 classes)fisher (20 classes)\n\n\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n      fill.scale = tm_scale_intervals(\n        style = \"fisher\",\n        n = 2)) +\n  tm_borders(fill_alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n      fill.scale = tm_scale_intervals(\n        style = \"fisher\",\n        n = 6)) +\n  tm_borders(fill_alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n      fill.scale = tm_scale_intervals(\n        style = \"fisher\",\n        n = 10)) +\n  tm_borders(fill_alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n      fill.scale = tm_scale_intervals(\n        style = \"fisher\",\n        n = 20)) +\n  tm_borders(fill_alpha = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#insight",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#insight",
    "title": "Hands On Exercise 8",
    "section": "21.5.0 Insight",
    "text": "21.5.0 Insight\nChoice of classification method matters: Different methods can produce dramatically different maps even with the same number of classes.\nFisher and kmeans are often preferable for real-world spatial analysis due to their data-driven nature.\nNumber of classes should match analysis goal:\n\nUse fewer classes (e.g., 2–6) for general trends.\nUse more classes (e.g., 10+) for detailed exploration, but only if the audience can handle complexity.\nAvoid overfitting visuals: Maps with too many classes (like 20) may confuse rather than clarify."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#plotting-choropleth-map-with-custome-break",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#plotting-choropleth-map-with-custome-break",
    "title": "Hands On Exercise 8",
    "section": "21.5.1 Plotting choropleth map with custome break",
    "text": "21.5.1 Plotting choropleth map with custome break\nCode chunk below will be used to compute and display the descriptive statistics of DEPENDENCY field.\n\nsummary(mpsz_pop2020$DEPENDENCY)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n 0.1111  0.7147  0.7867  0.8585  0.8763 19.0000      92 \n\n\nplot the choropleth map\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n          breaks = c(0, 0.60, 0.70, 0.80, 0.90, 1.00)) +\n  tm_borders(fill_alpha = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#colour-scheme",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#colour-scheme",
    "title": "Hands On Exercise 8",
    "section": "21.5.2 Colour Scheme",
    "text": "21.5.2 Colour Scheme\ntmap supports colour ramps either defined by the user or a set of predefined colour ramps from the RColorBrewer package.\nTo change the colour, we assign the preferred colour to values argument of tm_scale_intervals() as shown in the code chunk below.\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n      fill.scale = tm_scale_intervals(\n        style = \"quantile\",\n        n = 5,\n        values = \"brewer.greens\")) +\n  tm_borders(fill_alpha = 0.5)\n\n\n\n\n\n\n\n\n\nNotice that the choropleth map is shaded in green.\nTo reverse the colour shading, add a “-” prefix.\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n      fill.scale = tm_scale_intervals(\n        style = \"quantile\",\n        n = 5,\n        values = \"-brewer.greens\")) +\n  tm_borders(fill_alpha = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#map-layouts",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#map-layouts",
    "title": "Hands On Exercise 8",
    "section": "21.5.3 Map Layouts",
    "text": "21.5.3 Map Layouts\nMap layout refers to the combination of all map elements into a cohensive map. Map elements include among others the objects to be mapped, the title, the scale bar, the compass, margins and aspects ratios. Colour settings and data classification methods covered in the previous section relate to the palette and break-points are used to affect how the map looks.\nIn tmap, several tm_legend() options are provided to change the placement, format and appearance of the legend.\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n      fill.scale = tm_scale_intervals(\n        style = \"jenks\",\n        n = 5,\n        values = \"brewer.greens\"),\n      fill.legend = tm_legend(\n        title = \"Dependency ratio\")) +\n  tm_borders(fill_alpha = 0.5) +\n  tm_title(\"Distribution of Dependency Ratio by planning subzone \\n(Jenks classification)\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#map-style",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#map-style",
    "title": "Hands On Exercise 8",
    "section": "21.5.4 Map style",
    "text": "21.5.4 Map style\ntmap allows a wide variety of layout settings to be changed. They can be called by using tmap_style().\nThe code chunk below shows the classic style is used.\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"classic\")\n\n\n\n\n\n\n\n\n\nIn the code chunk below, tm_compass(), tm_scale_bar() and tm_grid() are used to add compass, scale bar and grid lines onto the choropleth map.\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_polygons(fill = \"DEPENDENCY\", \n              fill.scale = tm_scale_intervals(\n                style = \"quantile\",\n                n = 5,\n                values = \"brewer.blues\"),\n              fill.legend = tm_legend(\n                title = \"Dependency ratio\")) +\n  tm_title(\"Distribution of Dependency Ratio by planning subzone\") +\n  tm_layout(frame = TRUE) +\n  tm_borders(fill_alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\n\n\n\n\nTo reset the default style, refer to the code chunk below.\n\ntmap_style(\"white\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#drawing-small-multiple-choropleth-maps",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#drawing-small-multiple-choropleth-maps",
    "title": "Hands On Exercise 8",
    "section": "21.5.5 Drawing Small Multiple Choropleth Maps",
    "text": "21.5.5 Drawing Small Multiple Choropleth Maps\nSmall multiple maps, also referred to as facet maps, are composed of many maps arrange side-by-side, and sometimes stacked vertically. Small multiple maps enable the visualisation of how spatial relationships change with respect to another variable, such as time.\nIn tmap, small multiple maps can be plotted in three ways:\n\nby assigning multiple values to at least one of the asthetic arguments,\nby defining a group-by variable in tm_facets(), and\nby creating multiple stand-alone maps with tmap_arrange().\n\nSmall multiple choropleth maps are created by defining ncols in tm_fill().\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(c(\"YOUNG\", \"AGED\"),\n          style = \"equal\", \n          palette = \"Blues\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\")) +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"white\")\n\n\n\n\n\n\n\n\nIn this example, small multiple choropleth maps are created by assigning multiple values to at least one of the aesthetic arguments\n\n\nShow the code\ntm_shape(mpsz_pop2020)+ \n  tm_polygons(c(\"DEPENDENCY\",\"AGED\"),\n          style = c(\"equal\", \"quantile\"), \n          palette = list(\"Blues\",\"Greens\")) +\n  tm_layout(legend.position = c(\"right\", \"bottom\"))\n\n\n\n\n\n\n\n\n\nIn this example, multiple small choropleth maps are created by using tm_facets().\n\n\nShow the code\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          thres.poly = 0) + \n  tm_facets(by=\"REGION_N\", \n            free.coords=TRUE) +\n  tm_layout(legend.show = FALSE,\n            title.position = c(\"center\", \"center\"), \n            title.size = 20) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\nIn this example, multiple small choropleth maps are created by creating multiple stand-alone maps with tmap_arrange().\n\n\nShow the code\nyoungmap &lt;- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"YOUNG\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\nagedmap &lt;- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"AGED\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\ntmap_arrange(youngmap, agedmap, asp=1, ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#mappping-spatial-object-meeting-a-selection-criterion",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#mappping-spatial-object-meeting-a-selection-criterion",
    "title": "Hands On Exercise 8",
    "section": "21.5.6 Mappping Spatial Object Meeting a Selection Criterion",
    "text": "21.5.6 Mappping Spatial Object Meeting a Selection Criterion\nInstead of creating small multiple choropleth map, you can also use selection funtion to map spatial objects meeting the selection criterion.\n\n\nShow the code\ntm_shape(mpsz_pop2020[mpsz_pop2020$REGION_N==\"CENTRAL REGION\", ])+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(legend.outside = TRUE,\n            legend.height = 0.45, \n            legend.width = 5.0,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#reference",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#reference",
    "title": "Hands On Exercise 8",
    "section": "21.6 Reference",
    "text": "21.6 Reference\n\n21.6.1 All about tmap package\n\ntmap: Thematic Maps in R\ntmap\ntmap: get started!\ntmap: changes in version 2.0\ntmap: creating thematic maps in a flexible way (useR!2015)\nExploring and presenting maps with tmap (useR!2017)\n\n\n\n21.6.2 Geospatial data wrangling\n\nsf: Simple Features for R\nSimple Features for R: StandardizedSupport for Spatial Vector Data\nReading, Writing and Converting Simple Features\n\n\n\n21.6.3 Data wrangling\n\ndplyr\nTidy data\ntidyr: Easily Tidy Data with ‘spread()’ and ‘gather()’ Functions"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#data-import-and-preparation",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#data-import-and-preparation",
    "title": "Hands On Exercise 8",
    "section": "23.1 Data Import and Preparation",
    "text": "23.1 Data Import and Preparation\nThe data set use for this hands-on exercise is called SGPools_svy21. The data is in csv file format.\nThe code chunk below uses read_csv() function of readr package to import SGPools_svy21.csv into R as a tibble data frame called sgpools.\n\nsgpools &lt;- read_csv(\"data/aspatial/SGPools_svy21.csv\")\n\nAfter importing the data file into R, it is important for us to examine if the data file has been imported correctly.\nThe code chunk below shows list() is used to do the job.\n\nlist(sgpools) \n\n[[1]]\n# A tibble: 306 × 7\n   NAME           ADDRESS POSTCODE XCOORD YCOORD `OUTLET TYPE` `Gp1Gp2 Winnings`\n   &lt;chr&gt;          &lt;chr&gt;      &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt; &lt;chr&gt;                     &lt;dbl&gt;\n 1 Livewire (Mar… 2 Bayf…    18972 30842. 29599. Branch                        5\n 2 Livewire (Res… 26 Sen…    98138 26704. 26526. Branch                       11\n 3 SportsBuzz (K… Lotus …   738078 20118. 44888. Branch                        0\n 4 SportsBuzz (P… 1 Sele…   188306 29777. 31382. Branch                       44\n 5 Prime Serango… Blk 54…   552542 32239. 39519. Branch                        0\n 6 Singapore Poo… 1A Woo…   731001 21012. 46987. Branch                        3\n 7 Singapore Poo… Blk 64…   370064 33990. 34356. Branch                       17\n 8 Singapore Poo… Blk 88…   370088 33847. 33976. Branch                       16\n 9 Singapore Poo… Blk 30…   540308 33910. 41275. Branch                       21\n10 Singapore Poo… Blk 20…   560202 29246. 38943. Branch                       25\n# ℹ 296 more rows\n\n\nNotice that the sgpools data in tibble data frame and not the common R data frame."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#creating-a-sf-data-frame-from-an-aspatial-data-frame",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#creating-a-sf-data-frame-from-an-aspatial-data-frame",
    "title": "Hands On Exercise 8",
    "section": "23.2 Creating a sf data frame from an aspatial data frame",
    "text": "23.2 Creating a sf data frame from an aspatial data frame\nThe code chunk below converts sgpools data frame into a simple feature data frame by using st_as_sf() of sf packages\n\nsgpools_sf &lt;- st_as_sf(sgpools, \n                       coords = c(\"XCOORD\", \"YCOORD\"),\n                       crs= 3414)\n\nThings to learn from the arguments above:\n\nThe coords argument requires to provide the column name of the x-coordinates first then followed by the column name of the y-coordinates.\nThe crs argument required to provide the coordinates system in epsg format. EPSG: 3414 is Singapore SVY21 Projected Coordinate System.\n\nWe can display the basic information of the newly created sgpools_sf by using the code chunk below.\n\n\nShow the code\nlist(sgpools_sf)\n\n\n[[1]]\nSimple feature collection with 306 features and 5 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 7844.194 ymin: 26525.7 xmax: 45176.57 ymax: 47987.13\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 306 × 6\n   NAME                         ADDRESS POSTCODE `OUTLET TYPE` `Gp1Gp2 Winnings`\n * &lt;chr&gt;                        &lt;chr&gt;      &lt;dbl&gt; &lt;chr&gt;                     &lt;dbl&gt;\n 1 Livewire (Marina Bay Sands)  2 Bayf…    18972 Branch                        5\n 2 Livewire (Resorts World Sen… 26 Sen…    98138 Branch                       11\n 3 SportsBuzz (Kranji)          Lotus …   738078 Branch                        0\n 4 SportsBuzz (PoMo)            1 Sele…   188306 Branch                       44\n 5 Prime Serangoon North        Blk 54…   552542 Branch                        0\n 6 Singapore Pools Woodlands C… 1A Woo…   731001 Branch                        3\n 7 Singapore Pools 64 Circuit … Blk 64…   370064 Branch                       17\n 8 Singapore Pools 88 Circuit … Blk 88…   370088 Branch                       16\n 9 Singapore Pools Anchorvale … Blk 30…   540308 Branch                       21\n10 Singapore Pools Ang Mo Kio … Blk 20…   560202 Branch                       25\n# ℹ 296 more rows\n# ℹ 1 more variable: geometry &lt;POINT [m]&gt;"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#an-interactive-point-symbol-map",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#an-interactive-point-symbol-map",
    "title": "Hands On Exercise 8",
    "section": "24.1 An interactive point symbol map",
    "text": "24.1 An interactive point symbol map\nThe code chunks below are used to create an interactive point symbol map.\n\n\nShow the code\ntm_shape(sgpools_sf) + \n  tm_bubbles(fill = \"red\",\n           size = 1,\n           col = \"black\",\n           lwd = 1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#lets-make-it-proportional",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#lets-make-it-proportional",
    "title": "Hands On Exercise 8",
    "section": "24.2 Lets make it proportional",
    "text": "24.2 Lets make it proportional\nTo draw a proportional symbol map, we need to assign a numerical variable to the size visual attribute. The code chunks below show that the variable Gp1Gp2Winnings is assigned to size visual attribute.\n\n\nShow the code\ntm_shape(sgpools_sf) + \n  tm_bubbles(fill = \"red\",\n             size = \"Gp1Gp2 Winnings\",\n             col = \"black\",\n             lwd = 1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#lets-give-it-a-different-colour",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#lets-give-it-a-different-colour",
    "title": "Hands On Exercise 8",
    "section": "24.3 Lets give it a different colour",
    "text": "24.3 Lets give it a different colour\nThe proportional symbol map can be further improved by using the colour visual attribute. In the code chunks below, OUTLET_TYPE variable is used as the colour attribute variable.\n\n\nShow the code\ntm_shape(sgpools_sf) + \n  tm_bubbles(fill = \"OUTLET TYPE\", \n             size = \"Gp1Gp2 Winnings\",\n             col = \"black\",\n             lwd = 1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#i-have-twin-brothers",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#i-have-twin-brothers",
    "title": "Hands On Exercise 8",
    "section": "24.4 I have twin brothers",
    "text": "24.4 I have twin brothers\nAn impressive and little-know feature of tmap’s view mode is that it also works with faceted plots. The argument sync in tm_facets() can be used in this case to produce multiple maps with synchronised zoom and pan settings.\n\n\nShow the code\ntm_shape(sgpools_sf) + \n  tm_bubbles(fill = \"OUTLET TYPE\", \n             size = \"Gp1Gp2 Winnings\",\n             col = \"black\",\n             lwd = 1) + \n  tm_facets(by= \"OUTLET TYPE\",\n            nrow = 1,\n            sync = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntmap_mode(\"plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#references",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#references",
    "title": "Hands On Exercise 8",
    "section": "24.5 References",
    "text": "24.5 References\n\n24.5.1 All about tmap package\n\ntmap: Thematic Maps in R\ntmap\ntmap: get started!\ntmap: changes in version 2.0\ntmap: creating thematic maps in a flexible way (useR!2015)\nExploring and presenting maps with tmap (useR!2017)\n\n\n\n24.5.2 Geospatial data wrangling\n\nsf: Simple Features for R\nSimple Features for R: StandardizedSupport for Spatial Vector Data\nReading, Writing and Converting Simple Features\n\n\n\n24.5.3 Data wrangling\n\ndplyr\nTidy data\ntidyr: Easily Tidy Data with ‘spread()’ and ‘gather()’ Functions"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#objectives",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#objectives",
    "title": "Hands On Exercise 8",
    "section": "23.2 Objectives",
    "text": "23.2 Objectives\nIn this in-class exercise, we will gain hands-on experience on using appropriate R methods to plot analytical maps.\nBy the end of this in-class exercise, we will be able to use appropriate functions of tmap and tidyverse to perform the following tasks:\n\nImporting geospatial data in rds format into R environment.\nCreating cartographic quality choropleth maps by using appropriate tmap functions.\nCreating rate map\nCreating percentile map\nCreating boxmap"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#installing-and-loading-packages",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#installing-and-loading-packages",
    "title": "Hands On Exercise 8",
    "section": "24.1 Installing and loading packages",
    "text": "24.1 Installing and loading packages\n\npacman::p_load(tmap, tidyverse, sf)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#importing-data",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#importing-data",
    "title": "Hands On Exercise 8",
    "section": "24.2 Importing data",
    "text": "24.2 Importing data\nFor the purpose of this hands-on exercise, a prepared data set called NGA_wp.rds will be used. The data set is a polygon feature data.frame providing information on water point of Nigeria at the LGA level.\n\nNGA_wp &lt;- read_rds(\"data/rds/NGA_wp.rds\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#visualising-distribution-of-non-functional-water-point",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#visualising-distribution-of-non-functional-water-point",
    "title": "Hands On Exercise 8",
    "section": "25.1 Visualising distribution of non-functional water point",
    "text": "25.1 Visualising distribution of non-functional water point\n\n\nShow the code\np1 &lt;- tm_shape(NGA_wp) +\n  tm_polygons(fill = \"wp_functional\",\n             fill.scale = tm_scale_intervals(\n               style = \"equal\",\n               n = 10,\n               values = \"brewer.blues\"),\n             fill.legend = tm_legend(\n               position = c(\"right\", \"bottom\"))) +\n  tm_borders(lwd = 0.1,\n             fill_alpha = 1) +\n  tm_title(\"Distribution of functional water point by LGAs\")\n\n\n\n\nShow the code\np2 &lt;- tm_shape(NGA_wp) + \n  tm_polygons(fill = \"total_wp\", \n              fill.scale = tm_scale_intervals(\n                style = \"equal\",\n                n = 10,\n                values = \"brewer.blues\"),\n              fill.legend = tm_legend(\n                position = c(\"right\", \"bottom\"))) +\n  tm_borders(lwd = 0.1, \n             fill_alpha = 1) + \n  tm_title(\"Distribution of total  water point by LGAs\")\n\n\n\ntmap_arrange(p2, p1, nrow = 1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#choropleth-map-for-rates",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#choropleth-map-for-rates",
    "title": "Hands On Exercise 8",
    "section": "25.2 Choropleth Map for Rates",
    "text": "25.2 Choropleth Map for Rates\nIn much of our readings we have now seen the importance to map rates rather than counts of things, and that is for the simple reason that water points are not equally distributed in space. That means that if we do not account for how many water points are somewhere, we end up mapping total water point size rather than our topic of interest."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#deriving-proportion-of-functional-water-points-and-non-functional-water-points",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#deriving-proportion-of-functional-water-points-and-non-functional-water-points",
    "title": "Hands On Exercise 8",
    "section": "25.3 Deriving Proportion of Functional Water Points and Non-Functional Water Points",
    "text": "25.3 Deriving Proportion of Functional Water Points and Non-Functional Water Points\nWe will tabulate the proportion of functional water points and the proportion of non-functional water points in each LGA. In the following code chunk, mutate() from dplyr package is used to derive two fields, namely pct_functional and pct_nonfunctional.\n\n\nShow the code\nNGA_wp &lt;- NGA_wp %&gt;%\n  mutate(pct_functional = wp_functional/total_wp) %&gt;%\n  mutate(pct_nonfunctional = wp_nonfunctional/total_wp)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#plotting-map-of-rate",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#plotting-map-of-rate",
    "title": "Hands On Exercise 8",
    "section": "25.4 Plotting map of rate",
    "text": "25.4 Plotting map of rate\nPlot a choropleth map showing the distribution of percentage functional water point by LGA.\n\n\nShow the code\ntm_shape(NGA_wp) +\n  tm_polygons(\"pct_functional\",\n              fill.scale = tm_scale_intervals(\n                style = \"equal\",\n                n = 10,\n                values = \"brewer.blues\"),\n              fill.legend = tm_legend(\n                position = c(\"right\", \"bottom\"))) + \n  tm_borders(lwd = 0.1,\n             fill_alpha = 1) +\n  tm_title(\"Rate map of functional water point by LGAs\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#percentile-map",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#percentile-map",
    "title": "Hands On Exercise 8",
    "section": "26.1 Percentile Map",
    "text": "26.1 Percentile Map\nThe percentile map is a special type of quantile map with six specific categories: 0-1%,1-10%, 10-50%,50-90%,90-99%, and 99-100%. The corresponding breakpoints can be derived by means of the base R quantile command, passing an explicit vector of cumulative probabilities as c(0,.01,.1,.5,.9,.99,1). Note that the begin and endpoint need to be included.\nData Preparation Step 1: Exclude records with NA by using the code chunk below.\n\nNGA_wp &lt;- NGA_wp %&gt;%\n  drop_na()\n\nStep 2: Creating customised classification and extracting values\n\npercent &lt;- c(0,.01,.1,.5,.9,.99,1)\nvar &lt;- NGA_wp[\"pct_functional\"] %&gt;%\n  st_set_geometry(NULL)\nquantile(var[,1], percent)\n\n       0%        1%       10%       50%       90%       99%      100% \n0.0000000 0.0000000 0.2169811 0.4791667 0.8611111 1.0000000 1.0000000"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#creating-the-get.var-function",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#creating-the-get.var-function",
    "title": "Hands On Exercise 8",
    "section": "26.2 Creating the get.var function",
    "text": "26.2 Creating the get.var function\nFirstly, we will write an R function as shown below to extract a variable (i.e. wp_nonfunctional) as a vector out of an sf data.frame.\n\narguments:\n\nvname: variable name (as character, in quotes)\ndf: name of sf data frame\n\nreturns:\n\nv: vector with values (without a column name)\n\n\n\n\nShow the code\nget.var &lt;- function(vname,df) {\n  v &lt;- df[vname] %&gt;% \n    st_set_geometry(NULL)\n  v &lt;- unname(v[,1])\n  return(v)\n}"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#a-percentile-mapping-function",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#a-percentile-mapping-function",
    "title": "Hands On Exercise 8",
    "section": "26.3 A percentile mapping function",
    "text": "26.3 A percentile mapping function\nNext, we will write a percentile mapping function by using the code chunk below.\n\n\nShow the code\npercentmap &lt;- function(vnam, df, legtitle=NA, mtitle=\"Percentile Map\"){\n  percent &lt;- c(0,.01,.1,.5,.9,.99,1)\n  var &lt;- get.var(vnam, df)\n  bperc &lt;- quantile(var, percent)\n  tm_shape(df) +\n  tm_polygons() +\n  tm_shape(df) +\n     tm_polygons(vnam,\n             title=legtitle,\n             breaks=bperc,\n             palette=\"Blues\",\n          labels=c(\"&lt; 1%\", \"1% - 10%\", \"10% - 50%\", \"50% - 90%\", \"90% - 99%\", \"&gt; 99%\"))  +\n  tm_borders() +\n  tm_layout(main.title = mtitle, \n            title.position = c(\"right\",\"bottom\"))\n}"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#test-drive-the-percentile-mapping-function",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#test-drive-the-percentile-mapping-function",
    "title": "Hands On Exercise 8",
    "section": "26.4 Test drive the percentile mapping function",
    "text": "26.4 Test drive the percentile mapping function\n\npercentmap(\"total_wp\", NGA_wp)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#box-map",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#box-map",
    "title": "Hands On Exercise 8",
    "section": "26.5 Box map",
    "text": "26.5 Box map\nIn essence, a box map is an augmented quartile map, with an additional lower and upper category. When there are lower outliers, then the starting point for the breaks is the minimum value, and the second break is the lower fence. In contrast, when there are no lower outliers, then the starting point for the breaks will be the lower fence, and the second break is the minimum value (there will be no observations that fall in the interval between the lower fence and the minimum value).\n\nggplot(data = NGA_wp,\n       aes(x = \"\",\n           y = wp_nonfunctional)) +\n  geom_boxplot()\n\n\n\n\n\n\n\n\n\nDisplaying summary statistics on a choropleth map by using the basic principles of boxplot.\nTo create a box map, a custom breaks specification will be used. However, there is a complication. The break points for the box map vary depending on whether lower or upper outliers are present."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#creating-the-boxbreaks-function",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#creating-the-boxbreaks-function",
    "title": "Hands On Exercise 8",
    "section": "26.6 Creating the boxbreaks function",
    "text": "26.6 Creating the boxbreaks function\nThe code chunk below is an R function that creating break points for a box map.\n\narguments:\n\nv: vector with observations\nmult: multiplier for IQR (default 1.5)\n\nreturns:\n\nbb: vector with 7 break points compute quartile and fences\n\n\n\n\nShow the code\nboxbreaks &lt;- function(v,mult=1.5) {\n  qv &lt;- unname(quantile(v))\n  iqr &lt;- qv[4] - qv[2]\n  upfence &lt;- qv[4] + mult * iqr\n  lofence &lt;- qv[2] - mult * iqr\n  # initialize break points vector\n  bb &lt;- vector(mode=\"numeric\",length=7)\n  # logic for lower and upper fences\n  if (lofence &lt; qv[1]) {  # no lower outliers\n    bb[1] &lt;- lofence\n    bb[2] &lt;- floor(qv[1])\n  } else {\n    bb[2] &lt;- lofence\n    bb[1] &lt;- qv[1]\n  }\n  if (upfence &gt; qv[5]) { # no upper outliers\n    bb[7] &lt;- upfence\n    bb[6] &lt;- ceiling(qv[5])\n  } else {\n    bb[6] &lt;- upfence\n    bb[7] &lt;- qv[5]\n  }\n  bb[3:5] &lt;- qv[2:4]\n  return(bb)\n}"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#creating-the-get.var-function-1",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#creating-the-get.var-function-1",
    "title": "Hands On Exercise 8",
    "section": "26.7 Creating the get.var function",
    "text": "26.7 Creating the get.var function\nThe code chunk below is an R function to extract a variable as a vector out of an sf data frame.\n\narguments:\n\nvname: variable name (as character, in quotes)\ndf: name of sf data frame\n\nreturns:\n\nv: vector with values (without a column name)\n\n\n\n\nShow the code\nget.var &lt;- function(vname,df) {\n  v &lt;- df[vname] %&gt;% st_set_geometry(NULL)\n  v &lt;- unname(v[,1])\n  return(v)\n}"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#test-drive-the-newly-created-function",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#test-drive-the-newly-created-function",
    "title": "Hands On Exercise 8",
    "section": "26.8 Test drive the newly created function",
    "text": "26.8 Test drive the newly created function\n\nvar &lt;- get.var(\"wp_nonfunctional\", NGA_wp) \nboxbreaks(var)\n\n[1] -56.5   0.0  14.0  34.0  61.0 131.5 278.0"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#boxmap-function",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#boxmap-function",
    "title": "Hands On Exercise 8",
    "section": "26.9 Boxmap function",
    "text": "26.9 Boxmap function\nThe code chunk below is an R function to create a box map. - arguments: - vnam: variable name (as character, in quotes) - df: simple features polygon layer - legtitle: legend title - mtitle: map title - mult: multiplier for IQR - returns: - a tmap-element (plots a map)\n\n\nShow the code\nboxmap &lt;- function(vnam, df, \n                   legtitle=NA,\n                   mtitle=\"Box Map\",\n                   mult=1.5){\n  var &lt;- get.var(vnam,df)\n  bb &lt;- boxbreaks(var)\n  tm_shape(df) +\n    tm_polygons() +\n  tm_shape(df) +\n     tm_fill(vnam,title=legtitle,\n             breaks=bb,\n             palette=\"Blues\",\n          labels = c(\"lower outlier\", \n                     \"&lt; 25%\", \n                     \"25% - 50%\", \n                     \"50% - 75%\",\n                     \"&gt; 75%\", \n                     \"upper outlier\"))  +\n  tm_borders() +\n  tm_layout(main.title = mtitle, \n            title.position = c(\"left\",\n                               \"top\"))\n}\n\n\n\n\nShow the code\ntmap_mode(\"plot\")\nboxmap(\"wp_nonfunctional\", NGA_wp)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#references-1",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#references-1",
    "title": "Hands On Exercise 8",
    "section": "26.9 References",
    "text": "26.9 References\nChapter 19: Functions of R for Data Science."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#examining-the-data-structure",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#examining-the-data-structure",
    "title": "Hands-on Exercise 06",
    "section": "17.3.2 Examining the data structure",
    "text": "17.3.2 Examining the data structure\nIt is always a good practice to examine the imported data frame before further analysis is performed.\nFor example, kable() can be used to review the structure of the imported data frame.\n\nkable(head(attacks))\n\n\n\n\ntimestamp\nsource_country\ntz\n\n\n\n\n2015-03-12 15:59:16\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:00:48\nFR\nEurope/Paris\n\n\n2015-03-12 16:02:26\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:02:38\nUS\nAmerica/Chicago\n\n\n2015-03-12 16:03:22\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:03:45\nCN\nAsia/Shanghai\n\n\n\n\n\nThere are three columns, namely timestamp, source_country and tz.\n\ntimestamp field stores date-time values in POSIXct format.\nsource_country field stores the source of the attack. It is in ISO 3166-1 alpha-2 country code.\ntz field stores time zone of the source IP address."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#data-preparation",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#data-preparation",
    "title": "Hands-on Exercise 06",
    "section": "17.3.3 Data Preparation",
    "text": "17.3.3 Data Preparation\nStep 1: Deriving weekday and hour of day fields\nBefore we can plot the calender heatmap, two new fields namely wkday and hour need to be derived. In this step, we will write a function to perform the task.\n\n\nShow the code\nmake_hr_wkday &lt;- function(ts, sc, tz) {\n  real_times &lt;- ymd_hms(ts, \n                        tz = tz[1], \n                        quiet = TRUE)\n  dt &lt;- data.table(source_country = sc,\n                   wkday = weekdays(real_times),\n                   hour = hour(real_times))\n  return(dt)\n}\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nymd_hms() and hour() are from lubridate package, and\nweekdays() is a base R function.\n\n\n\nStep 2: Deriving the attacks tibble data frame\n\n\nShow the code\nwkday_levels &lt;- c('Saturday', 'Friday', \n                  'Thursday', 'Wednesday', \n                  'Tuesday', 'Monday', \n                  'Sunday')\n\nattacks &lt;- attacks %&gt;%\n  group_by(tz) %&gt;%\n  do(make_hr_wkday(.$timestamp, \n                   .$source_country, \n                   .$tz)) %&gt;% \n  ungroup() %&gt;% \n  mutate(wkday = factor(\n    wkday, levels = wkday_levels),\n    hour  = factor(\n      hour, levels = 0:23))\n\n\n\n\n\n\n\n\nNote\n\n\n\nBeside extracting the necessary data into attacks data frame, mutate() of dplyr package is used to convert wkday and hour fields into factor so they’ll be ordered when plotting\n\n\nTable below shows the tidy tibble table after processing.\n\nkable(head(attacks))\n\n\n\n\ntz\nsource_country\nwkday\nhour\n\n\n\n\nAfrica/Cairo\nBG\nSaturday\n20\n\n\nAfrica/Cairo\nTW\nSunday\n6\n\n\nAfrica/Cairo\nTW\nSunday\n8\n\n\nAfrica/Cairo\nCN\nSunday\n11\n\n\nAfrica/Cairo\nUS\nSunday\n15\n\n\nAfrica/Cairo\nCA\nMonday\n11"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#building-the-calendar-heatmaps",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#building-the-calendar-heatmaps",
    "title": "Hands-on Exercise 06",
    "section": "17.3.4 Building the Calendar Heatmaps",
    "text": "17.3.4 Building the Calendar Heatmaps\n\n\nShow the code\ngrouped &lt;- attacks %&gt;% \n  count(wkday, hour) %&gt;% \n  ungroup() %&gt;%\n  na.omit()\n\nggplot(grouped, \n       aes(hour, \n           wkday, \n           fill = n)) + \ngeom_tile(color = \"white\", \n          size = 0.1) + \ntheme_tufte(base_family = \"Helvetica\") + \ncoord_equal() +\nscale_fill_gradient(name = \"# of attacks\",\n                    low = \"sky blue\", \n                    high = \"dark blue\") +\nlabs(x = NULL, \n     y = NULL, \n     title = \"Attacks by weekday and time of day\") +\ntheme(axis.ticks = element_blank(),\n      plot.title = element_text(hjust = 0.5),\n      legend.title = element_text(size = 8),\n      legend.text = element_text(size = 6) )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\n\na tibble data table called grouped is derived by aggregating the attack by wkday and hour fields.\na new field called n is derived by using group_by() and count() functions.\nna.omit() is used to exclude missing value.\ngeom_tile() is used to plot tiles (grids) at each x and y position. color and size arguments are used to specify the border color and line size of the tiles.\ntheme_tufte() of ggthemes package is used to remove unnecessary chart junk. To learn which visual components of default ggplot2 have been excluded, you are encouraged to comment out this line to examine the default plot.\ncoord_equal() is used to ensure the plot will have an aspect ratio of 1:1.\nscale_fill_gradient() function is used to creates a two colour gradient (low-high)."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#building-multiple-calendar-heatmaps",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#building-multiple-calendar-heatmaps",
    "title": "Hands-on Exercise 06",
    "section": "17.3.5 Building Multiple Calendar Heatmaps",
    "text": "17.3.5 Building Multiple Calendar Heatmaps\nChallenge: Building multiple heatmaps for the top four countries with the highest number of attacks.\nStep 1: Deriving attack by country object\nIn order to identify the top 4 countries with the highest number of attacks, you are required to do the followings:\n\ncount the number of attacks by country,\ncalculate the percent of attackes by country, and\nsave the results in a tibble data frame.\n\n\nattacks_by_country &lt;- count(\n  attacks, source_country) %&gt;%\n  mutate(percent = percent(n/sum(n))) %&gt;%\n  arrange(desc(n))\n\nStep 2: Preparing the tidy data frame\nIn this step, you are required to extract the attack records of the top 4 countries from attacks data frame and save the data in a new tibble data frame (i.e. top4_attacks).\n\ntop4 &lt;- attacks_by_country$source_country[1:4]\ntop4_attacks &lt;- attacks %&gt;%\n  filter(source_country %in% top4) %&gt;%\n  count(source_country, wkday, hour) %&gt;%\n  ungroup() %&gt;%\n  mutate(source_country = factor(\n    source_country, levels = top4)) %&gt;%\n  na.omit()\n\nStep 3: Plotting the Multiple Calender Heatmap by using ggplot2 package.\n\nggplot(top4_attacks, \n       aes(hour, \n           wkday, \n           fill = n)) + \n  geom_tile(color = \"white\", \n          size = 0.1) + \n  theme_tufte(base_family = \"Helvetica\") + \n  coord_equal() +\n  scale_fill_gradient(name = \"# of attacks\",\n                    low = \"sky blue\", \n                    high = \"dark blue\") +\n  facet_wrap(~source_country, ncol = 2) +\n  labs(x = NULL, y = NULL, \n     title = \"Attacks on top 4 countries by weekday and time of day\") +\n  theme(axis.ticks = element_blank(),\n        axis.text.x = element_text(size = 7),\n        plot.title = element_text(hjust = 0.5),\n        legend.title = element_text(size = 8),\n        legend.text = element_text(size = 6) )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#plotting-cycle-plot",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#plotting-cycle-plot",
    "title": "Hands-on Exercise 06",
    "section": "17.3.6 Plotting Cycle Plot",
    "text": "17.3.6 Plotting Cycle Plot\n\nStep 1: Data Import\nFor the purpose of this hands-on exercise, arrivals_by_air.xlsx will be used.\n\nair &lt;- read_excel(\"Data_06/arrivals_by_air.xlsx\")\n\n\n\nStep 2: Deriving month and year fields\n\nair$month &lt;- factor(month(air$`Month-Year`), \n                    levels=1:12, \n                    labels=month.abb, \n                    ordered=TRUE) \nair$year &lt;- year(ymd(air$`Month-Year`))\n\n\n\nStep 3: Extracting the target country\n\nVietnam &lt;- air %&gt;% \n  select(`Vietnam`, \n         month, \n         year) %&gt;%\n  filter(year &gt;= 2010)\n\n\n\nStep 4: Computing year average arrivals by month\n\nhline.data &lt;- Vietnam %&gt;% \n  group_by(month) %&gt;%\n  summarise(avgvalue = mean(`Vietnam`))\n\n\n\nStep 5: Plotting the cycle plot\n\nggplot() + \n  geom_line(data=Vietnam,\n            aes(x=year, \n                y=`Vietnam`, \n                group=month), \n            colour=\"black\") +\n  geom_hline(aes(yintercept=avgvalue), \n             data=hline.data, \n             linetype=6, \n             colour=\"red\", \n             size=0.5) + \n  facet_grid(~month) +\n  labs(axis.text.x = element_blank(),\n       title = \"Visitor arrivals from Vietnam by air, Jan 2010-Dec 2019\") +\n  xlab(\"\") +\n  ylab(\"No. of Visitors\") +\n  theme_light()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#step-1-data-import-1",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#step-1-data-import-1",
    "title": "Hands-on Exercise 06",
    "section": "17.4.1 Step 1: Data Import",
    "text": "17.4.1 Step 1: Data Import\n\nrice &lt;- read_csv(\"Data_06/rice.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#step-2-plotting-the-slopegraph",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#step-2-plotting-the-slopegraph",
    "title": "Hands-on Exercise 06",
    "section": "17.4.2 Step 2: Plotting the slopegraph",
    "text": "17.4.2 Step 2: Plotting the slopegraph\n\nrice %&gt;% \n  mutate(Year = factor(Year)) %&gt;%\n  filter(Year %in% c(1961, 1980)) %&gt;%\n  newggslopegraph(Year, Yield, Country,\n                Title = \"Rice Yield of Top 11 Asian Counties\",\n                SubTitle = \"1961-1980\",\n                Caption = \"Prepared by: Dr. Kam Tin Seong\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nFor effective data visualisation design, factor() is used convert the value type of Year field from numeric to factor."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "title": "Hands-on Exercise 4",
    "section": "",
    "text": "Visualising distribution is not new in statistical analysis. In chapter 1, we have shared some of the popular statistical graphics methods for visualising distribution are histogram, probability density curve (pdf), boxplot, notch plot and violin plot and how they can be created by using ggplot2. In this chapter, we are going to share two relatively new statistical graphic methods for visualising distribution, namely ridgeline plot and raincloud plot by using ggplot2 and its extensions."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#installing-and-loading-the-packages",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#installing-and-loading-the-packages",
    "title": "Hands-on Exercise 4",
    "section": "9.2.1 Installing and loading the packages",
    "text": "9.2.1 Installing and loading the packages\nFor the purpose of this exercise, the following R packages will be used, they are:\n\nggridges, a ggplot2 extension specially designed for plotting ridgeline plots,\nggdist, a ggplot2 extension spacially desgin for visualising distribution and uncertainty,\ntidyverse, a family of R packages to meet the modern data science and visual communication needs,\nggthemes, a ggplot extension that provides the user additional themes, scales, and geoms for the ggplots package, and\ncolorspace, an R package provides a broad toolbox for selecting individual colors or color palettes, manipulating these colors, and employing them in various kinds of visualisations.\n\nThe code chunk below will be used load these R packages into RStudio environment.\n\npacman::p_load(ggdist, ggridges, ggthemes,\n               colorspace, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#data-import",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#data-import",
    "title": "Hands-on Exercise 4",
    "section": "9.2.2 Data import",
    "text": "9.2.2 Data import\nFor the purpose of this exercise, Exam_data.csv will be used.\nIn the code chunk below, read_csv() of readr package is used to import Exam_data.csv into R and saved it into a tibble data.frame.\n\nexam &lt;- read_csv(\"Data_04/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#plotting-ridgeline-graph-ggridges-method",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#plotting-ridgeline-graph-ggridges-method",
    "title": "Hands-on Exercise 4",
    "section": "9.3.1 Plotting ridgeline graph: ggridges method",
    "text": "9.3.1 Plotting ridgeline graph: ggridges method\nggridges package provides two main geom to plot gridgeline plots, they are: geom_ridgeline() and geom_density_ridges(). The former takes height values directly to draw the ridgelines, and the latter first estimates data densities and then draws those using ridgelines.\nThe ridgeline plot below is plotted by using geom_density_ridges().\n\n\nShow the code\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS)) +\n  geom_density_ridges(\n    scale = 3,\n    rel_min_height = 0.01,\n    bandwidth = 3.4,\n    fill = lighten(\"#7097BB\", .3),\n    color = \"white\"\n  ) +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n    ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#varying-fill-colors-along-the-x-axis",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#varying-fill-colors-along-the-x-axis",
    "title": "Hands-on Exercise 4",
    "section": "9.3.2 Varying fill colors along the x axis",
    "text": "9.3.2 Varying fill colors along the x axis\nSometimes we would like to have the area under a ridgeline not filled with a single solid color but rather with colors that vary in some form along the x axis. This effect can be achieved by using either geom_ridgeline_gradient() or geom_density_ridges_gradient(). Both geoms work just like geom_ridgeline() and geom_density_ridges(), except that they allow for varying fill colors. However, they do not allow for alpha transparency in the fill. For technical reasons, we can have changing fill colors or transparency but not both.\n\n\nShow the code\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS,\n           fill = stat(x))) +\n  geom_density_ridges_gradient(\n    scale = 3,\n    rel_min_height = 0.01) +\n  scale_fill_viridis_c(name = \"Temp. [F]\",\n                       option = \"C\") +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n  ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#mapping-the-probabilities-directly-onto-colour",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#mapping-the-probabilities-directly-onto-colour",
    "title": "Hands-on Exercise 4",
    "section": "9.3.3 Mapping the probabilities directly onto colour",
    "text": "9.3.3 Mapping the probabilities directly onto colour\nBeside providing additional geom objects to support the need to plot ridgeline plot, ggridges package also provides a stat function called stat_density_ridges() that replaces stat_density() of ggplot2.\nFigure below is plotted by mapping the probabilities calculated by using stat(ecdf) which represent the empirical cumulative density function for the distribution of English score.\n\n\nShow the code\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = 0.5 - abs(0.5-stat(ecdf)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\", \n                      calc_ecdf = TRUE) +\n  scale_fill_viridis_c(name = \"Tail probability\",\n                       direction = -1) +\n  theme_ridges()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#ridgeline-plots-with-quantile-lines",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#ridgeline-plots-with-quantile-lines",
    "title": "Hands-on Exercise 4",
    "section": "9.3.4 Ridgeline plots with quantile lines",
    "text": "9.3.4 Ridgeline plots with quantile lines\ny using geom_density_ridges_gradient(), we can colour the ridgeline plot by quantile, via the calculated stat(quantile) aesthetic as shown in the figures below.\n\nPlotCodeSpecify quantiles by cut pointsCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = c(0.025, 0.975)\n    ) +\n  scale_fill_manual(\n    name = \"Probability\",\n    values = c(\"#FF0000A0\", \"#A0A0A0A0\", \"#0000FFA0\"),\n    labels = c(\"(0, 0.025]\", \"(0.025, 0.975]\", \"(0.975, 1]\")\n  ) +\n  theme_ridges()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#plotting-a-half-eye-graph",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#plotting-a-half-eye-graph",
    "title": "Hands-on Exercise 4",
    "section": "Plotting a Half Eye graph",
    "text": "Plotting a Half Eye graph\n\n\nShow the code\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#adding-the-boxplot-with-geom_boxplot",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#adding-the-boxplot-with-geom_boxplot",
    "title": "Hands-on Exercise 4",
    "section": "Adding the boxplot with geom_boxplot()",
    "text": "Adding the boxplot with geom_boxplot()\n\n\nShow the code\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#adding-the-dot-plots-with-stat_dots",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#adding-the-dot-plots-with-stat_dots",
    "title": "Hands-on Exercise 4",
    "section": "Adding the Dot Plots with stat_dots()",
    "text": "Adding the Dot Plots with stat_dots()\n\n\nShow the code\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#finishing-touch",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#finishing-touch",
    "title": "Hands-on Exercise 4",
    "section": "Finishing touch",
    "text": "Finishing touch\n\n\nShow the code\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 1.5) +\n  coord_flip() +\n  theme_economist()\n\n\n\n\n\n\n\n\n\nReference\n\nIntroducing Ridgeline Plots (formerly Joyplots)\nClaus O. Wilke Fundamentals of Data Visualization especially Chapter 6, 7, 8, 9 and 10.\nAllen M, Poggiali D, Whitaker K et al. “Raincloud plots: a multi-platform tool for robust data. visualization” [version 2; peer review: 2 approved]. Welcome Open Res 2021, pp. 4:63.\nDots + interval stats and geoms"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#getting-started-1",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#getting-started-1",
    "title": "Hands-on Exercise 4",
    "section": "10.1 Getting Started",
    "text": "10.1 Getting Started"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#installing-and-launching-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#installing-and-launching-r-packages",
    "title": "Hands-on Exercise 4",
    "section": "10.1.1 Installing and launching R packages",
    "text": "10.1.1 Installing and launching R packages\nIn this exercise, ggstatsplot and tidyverse will be used.\n\npacman::p_load(ggstatsplot, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#importing-data",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#importing-data",
    "title": "Hands-on Exercise 4",
    "section": "10.1.2 Importing data",
    "text": "10.1.2 Importing data\n\nlibrary(tidyverse)\n\nexam &lt;- read_csv(\"Data_04/Exam_data.csv\")\n\nprint(exam)\n\n# A tibble: 322 × 7\n   ID         CLASS GENDER RACE    ENGLISH MATHS SCIENCE\n   &lt;chr&gt;      &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;     &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt;\n 1 Student321 3I    Male   Malay        21     9      15\n 2 Student305 3I    Female Malay        24    22      16\n 3 Student289 3H    Male   Chinese      26    16      16\n 4 Student227 3F    Male   Chinese      27    77      31\n 5 Student318 3I    Male   Malay        27    11      25\n 6 Student306 3I    Female Malay        31    16      16\n 7 Student313 3I    Male   Chinese      31    21      25\n 8 Student316 3I    Male   Malay        31    18      27\n 9 Student312 3I    Male   Malay        33    19      15\n10 Student297 3H    Male   Indian       34    49      37\n# ℹ 312 more rows"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#one-sample-test-gghistostats-method",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#one-sample-test-gghistostats-method",
    "title": "Hands-on Exercise 4",
    "section": "10.1.3 One-sample test: gghistostats() method",
    "text": "10.1.3 One-sample test: gghistostats() method\n\n\nShow the code\nset.seed(1234)\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"English scores\"\n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#two-sample-mean-test-ggbetweenstats",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#two-sample-mean-test-ggbetweenstats",
    "title": "Hands-on Exercise 4",
    "section": "10.1.4 Two-sample mean test: ggbetweenstats()",
    "text": "10.1.4 Two-sample mean test: ggbetweenstats()\n\n\nShow the code\nggbetweenstats(\n  data = exam,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE\n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#oneway-anova-test-ggbetweenstats-method",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#oneway-anova-test-ggbetweenstats-method",
    "title": "Hands-on Exercise 4",
    "section": "10.1.5 Oneway ANOVA Test: ggbetweenstats() method",
    "text": "10.1.5 Oneway ANOVA Test: ggbetweenstats() method\n\n\nShow the code\nggbetweenstats(\n  data = exam,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#significant-test-of-correlation-ggscatterstats",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#significant-test-of-correlation-ggscatterstats",
    "title": "Hands-on Exercise 4",
    "section": "10.1.6 Significant Test of Correlation: ggscatterstats()",
    "text": "10.1.6 Significant Test of Correlation: ggscatterstats()\n\n\nShow the code\nggscatterstats(\n  data = exam,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = FALSE,\n  )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#significant-test-of-association-depedence-ggbarstats-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#significant-test-of-association-depedence-ggbarstats-methods",
    "title": "Hands-on Exercise 4",
    "section": "10.1.7 Significant Test of Association (Depedence) : ggbarstats() methods",
    "text": "10.1.7 Significant Test of Association (Depedence) : ggbarstats() methods\nIn the code chunk below, the Maths scores is binned into a 4-class variable by using cut().\n\n\nShow the code\nexam1 &lt;- exam %&gt;% \n  mutate(MATHS_bins = \n           cut(MATHS, \n               breaks = c(0,60,75,85,100))\n)\n\n\nIn this code chunk below ggbarstats() is used to build a visual for Significant Test of Association\n\n\nShow the code\nggbarstats(exam1, \n           x = MATHS_bins, \n           y = GENDER)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#installing-and-loading-the-packages-1",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#installing-and-loading-the-packages-1",
    "title": "Hands-on Exercise 4",
    "section": "11.2.1 Installing and loading the packages",
    "text": "11.2.1 Installing and loading the packages\nFor the purpose of this exercise, the following R packages will be used, they are:\n\ntidyverse, a family of R packages for data science process,\nplotly for creating interactive plot,\ngganimate for creating animation plot,\nDT for displaying interactive html table,\ncrosstalk for for implementing cross-widget interactions (currently, linked brushing and filtering), and\nggdist for visualising distribution and uncertainty.\n\n\npacman::p_load(plotly, crosstalk, DT, \n               ggdist, ggridges, colorspace,\n               gganimate, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#data-import-1",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#data-import-1",
    "title": "Hands-on Exercise 4",
    "section": "11.2.2 Data import",
    "text": "11.2.2 Data import\nFor the purpose of this exercise, Exam_data.csv will be used.\n\nexam &lt;- read_csv(\"Data_04/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#plotting-standard-error-bars-of-point-estimates",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#plotting-standard-error-bars-of-point-estimates",
    "title": "Hands-on Exercise 4",
    "section": "11.3.1 Plotting standard error bars of point estimates",
    "text": "11.3.1 Plotting standard error bars of point estimates\n\n\n\n\n\n\nThings to learn from the code chunk below\n\n\n\nThe error bars are computed by using the formula mean+/-se. For geom_point(), it is important to indicate stat=“identity”.\n\n\n\n\nShow the code\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=RACE, \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    linewidth=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"Standard error of mean maths score by rac\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#plotting-confidence-interval-of-point-estimates",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#plotting-confidence-interval-of-point-estimates",
    "title": "Hands-on Exercise 4",
    "section": "11.3.2 Plotting confidence interval of point estimates",
    "text": "11.3.2 Plotting confidence interval of point estimates\n\n\n\n\n\n\nThings to learn from the code chunk below\n\n\n\n\nThe confidence intervals are computed by using the formula mean+/-1.96*se.\nThe error bars is sorted by using the average maths scores.\nlabs() argument of ggplot2 is used to change the x-axis label.\n\n\n\n\n\nShow the code\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=reorder(RACE, -mean), \n        ymin=mean-1.96*se, \n        ymax=mean+1.96*se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    linewidth=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  labs(x = \"Maths score\",\n       title = \"95% confidence interval of mean maths score by race\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-with-interactive-error-bars",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-with-interactive-error-bars",
    "title": "Hands-on Exercise 4",
    "section": "11.3.3 Visualizing the uncertainty of point estimates with interactive error bars",
    "text": "11.3.3 Visualizing the uncertainty of point estimates with interactive error bars\n\n\nShow the code\nshared_df = SharedData$new(my_sum)\n\nbscols(widths = c(4,8),\n       ggplotly((ggplot(shared_df) +\n                   geom_errorbar(aes(\n                     x=reorder(RACE, -mean),\n                     ymin=mean-2.58*se, \n                     ymax=mean+2.58*se), \n                     width=0.2, \n                     colour=\"black\", \n                     alpha=0.9, \n                     size=0.5) +\n                   geom_point(aes(\n                     x=RACE, \n                     y=mean, \n                     text = paste(\"Race:\", `RACE`, \n                                  \"&lt;br&gt;N:\", `n`,\n                                  \"&lt;br&gt;Avg. Scores:\", round(mean, digits = 2),\n                                  \"&lt;br&gt;95% CI:[\", \n                                  round((mean-2.58*se), digits = 2), \",\",\n                                  round((mean+2.58*se), digits = 2),\"]\")),\n                     stat=\"identity\", \n                     color=\"red\", \n                     size = 1.5, \n                     alpha=1) + \n                   xlab(\"Race\") + \n                   ylab(\"Average Scores\") + \n                   theme_minimal() + \n                   theme(axis.text.x = element_text(\n                     angle = 45, vjust = 0.5, hjust=1)) +\n                   ggtitle(\"99% Confidence interval of average /&lt;br&gt;maths scores by race\")), \n                tooltip = \"text\"), \n       DT::datatable(shared_df, \n                     rownames = FALSE, \n                     class=\"compact\", \n                     width=\"100%\", \n                     options = list(pageLength = 10,\n                                    scrollX=T), \n                     colnames = c(\"No. of pupils\", \n                                  \"Avg Scores\",\n                                  \"Std Dev\",\n                                  \"Std Error\")) %&gt;%\n         formatRound(columns=c('mean', 'sd', 'se'),\n                     digits=2))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods",
    "title": "Hands-on Exercise 4",
    "section": "11.3.4 Visualizing the uncertainty of point estimates: ggdist methods",
    "text": "11.3.4 Visualizing the uncertainty of point estimates: ggdist methods\nIn the code chunk below, stat_pointinterval() of ggdist is used to build a visual for displaying distribution of maths scores by race.\n\nPlotCodeDifferent argumentsCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_pointinterval() +\n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexam %&gt;%\n  ggplot(aes(x = RACE, y = MATHS)) +\n  stat_pointinterval(.width = 0.95,\n  .point = median,\n  .interval = qi) +\n  labs(\n    title = \"Visualising confidence intervals of median math score\",\n    subtitle = \"Median Point + Multiple-interval plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#makeover-the-plot-on-previous-slide-by-showing-95-and-99-confidence-intervals.",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#makeover-the-plot-on-previous-slide-by-showing-95-and-99-confidence-intervals.",
    "title": "Hands-on Exercise 4",
    "section": "11.3.5 Makeover the plot on previous slide by showing 95% and 99% confidence intervals.",
    "text": "11.3.5 Makeover the plot on previous slide by showing 95% and 99% confidence intervals.\n\n\nShow the code\nexam %&gt;%\n  ggplot(aes(x = RACE, y = MATHS)) +\n  stat_pointinterval(\n    .width = c(0.95, 0.99),  # To show both 95% and 99% intervals\n    .point = median,\n    .interval = qi\n  ) +\n  labs(\n    title = \"Visualising confidence intervals of median math score\",\n    subtitle = \"Median Point + Multiple-interval plot (95% & 99%)\"\n  )\n\n\n\n\n\n\n\n\n\nIn the code chunk below, stat_gradientinterval() of ggdist is used to build a visual for displaying distribution of maths scores by race.\n\n\nShow the code\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_gradientinterval(   \n    fill = \"skyblue\",      \n    show.legend = TRUE     \n  ) +                        \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Gradient + interval plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#installing-ungeviz-package",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#installing-ungeviz-package",
    "title": "Hands-on Exercise 4",
    "section": "11.4.1 Installing ungeviz package",
    "text": "11.4.1 Installing ungeviz package\n\ndevtools::install_github(\"wilkelab/ungeviz\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#launch-the-application-in-r",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#launch-the-application-in-r",
    "title": "Hands-on Exercise 4",
    "section": "11.4.2 Launch the application in R",
    "text": "11.4.2 Launch the application in R\n\nlibrary(ungeviz)\n\nCode chunk below will be used to build the HOPs:\n\n\nShow the code\nggplot(data = exam, \n       (aes(x = factor(RACE), \n            y = MATHS))) +\n  geom_point(position = position_jitter(\n    height = 0.3, \n    width = 0.05), \n    size = 0.4, \n    color = \"#0072B2\", \n    alpha = 1/2) +\n  geom_hpline(data = sampler(25, \n                             group = RACE), \n              height = 0.6, \n              color = \"#D55E00\") +\n  theme_bw() + \n  transition_states(.draw, 1, 3)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#funnelplotr-methods-the-basic-plot",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#funnelplotr-methods-the-basic-plot",
    "title": "Hands-on Exercise 4",
    "section": "8.4.1 FunnelPlotR methods: The basic plot",
    "text": "8.4.1 FunnelPlotR methods: The basic plot\n\n\nShow the code\nfunnel_plot(\n  .data = covid19,\n  numerator = Positive,\n  denominator = Death,\n  group = `Sub-district`\n)\n\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 0 are outliers. \nPlot is adjusted for overdispersion. \n\n\nThings to learn from the code chunk above.\n\ngroup in this function is different from the scatterplot. Here, it defines the level of the points to be plotted i.e. Sub-district, District or City. If Cityc is chosen, there are only six data points.\nBy default, data_typeargument is “SR”.\nlimit: Plot limits, accepted values are: 95 or 99, corresponding to 95% or 99.8% quantiles of the distribution."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#funnelplotr-methods-makeover-1",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#funnelplotr-methods-makeover-1",
    "title": "Hands-on Exercise 4",
    "section": "8.4.2 FunnelPlotR methods: Makeover 1",
    "text": "8.4.2 FunnelPlotR methods: Makeover 1\n\n\nShow the code\nfunnel_plot(\n  .data = covid19,\n  numerator = Death,\n  denominator = Positive,\n  group = `Sub-district`,\n  data_type = \"PR\",     #&lt;&lt;\n  xrange = c(0, 6500),  #&lt;&lt;\n  yrange = c(0, 0.05)   #&lt;&lt;\n)\n\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \n\n\nThings to learn from the code chunk above.\n\nlabel = NA argument is to removed the default label outliers feature.\ntitle argument is used to add plot title.\nx_label and y_label arguments are used to add/edit x-axis and y-axis titles."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#computing-the-basic-derived-fields",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#computing-the-basic-derived-fields",
    "title": "Hands-on Exercise 4",
    "section": "8.5.1 Computing the basic derived fields",
    "text": "8.5.1 Computing the basic derived fields\nTo plot the funnel plot from scratch, we need to derive cumulative death rate and standard error of cumulative death rate.\n\ndf &lt;- covid19 %&gt;%\n  mutate(rate = Death / Positive) %&gt;%\n  mutate(rate.se = sqrt((rate*(1-rate)) / (Positive))) %&gt;%\n  filter(rate &gt; 0)\n\nNext, the fit.mean is computed by using the code chunk below.\n\nfit.mean &lt;- weighted.mean(df$rate, 1/df$rate.se^2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#calculate-lower-and-upper-limits-for-95-and-99.9-ci",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#calculate-lower-and-upper-limits-for-95-and-99.9-ci",
    "title": "Hands-on Exercise 4",
    "section": "8.5.2 Calculate lower and upper limits for 95% and 99.9% CI",
    "text": "8.5.2 Calculate lower and upper limits for 95% and 99.9% CI\nThe code chunk below is used to compute the lower and upper limits for 95% confidence interval.\n\n\nShow the code\nnumber.seq &lt;- seq(1, max(df$Positive), 1)\nnumber.ll95 &lt;- fit.mean - 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul95 &lt;- fit.mean + 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ll999 &lt;- fit.mean - 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul999 &lt;- fit.mean + 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \ndfCI &lt;- data.frame(number.ll95, number.ul95, number.ll999, \n                   number.ul999, number.seq, fit.mean)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#plotting-a-static-funnel-plot",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#plotting-a-static-funnel-plot",
    "title": "Hands-on Exercise 4",
    "section": "8.5.3 Plotting a static funnel plot",
    "text": "8.5.3 Plotting a static funnel plot\n\n\nShow the code\np &lt;- ggplot(df, aes(x = Positive, y = rate)) +\n  geom_point(aes(label=`Sub-district`), \n             alpha=0.4) +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_hline(data = dfCI, \n             aes(yintercept = fit.mean), \n             size = 0.4, \n             colour = \"grey40\") +\n  coord_cartesian(ylim=c(0,0.05)) +\n  annotate(\"text\", x = 1, y = -0.13, label = \"95%\", size = 3, colour = \"grey40\") + \n  annotate(\"text\", x = 4.5, y = -0.18, label = \"99%\", size = 3, colour = \"grey40\") + \n  ggtitle(\"Cumulative Fatality Rate by Cumulative Number of COVID-19 Cases\") +\n  xlab(\"Cumulative Number of COVID-19 Cases\") + \n  ylab(\"Cumulative Fatality Rate\") +\n  theme_light() +\n  theme(plot.title = element_text(size=12),\n        legend.position = c(0.91,0.85), \n        legend.title = element_text(size=7),\n        legend.text = element_text(size=7),\n        legend.background = element_rect(colour = \"grey60\", linetype = \"dotted\"),\n        legend.key.height = unit(0.3, \"cm\"))\np"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#interactive-funnel-plot-plotly-ggplot2",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#interactive-funnel-plot-plotly-ggplot2",
    "title": "Hands-on Exercise 4",
    "section": "8.5.4 Interactive Funnel Plot: plotly + ggplot2",
    "text": "8.5.4 Interactive Funnel Plot: plotly + ggplot2\n\n\nShow the code\nfp_ggplotly &lt;- ggplotly(p,\n  tooltip = c(\"label\", \n              \"x\", \n              \"y\"))\nfp_ggplotly"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on Exercise 2",
    "section": "",
    "text": "pacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#installing-and-loading-the-required-libraries",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#installing-and-loading-the-required-libraries",
    "title": "Hands-on Exercise 2",
    "section": "2.1.1 Installing and loading the required libraries",
    "text": "2.1.1 Installing and loading the required libraries\nIn this exercise, beside tidyverse, four R packages will be used. They are:\n\nggrepel: an R package provides geoms for ggplot2 to repel overlapping text labels.\nggthemes: an R package provides some extra themes, geoms, and scales for ‘ggplot2’.\nhrbrthemes: an R package provides typography-centric themes and theme components for ggplot2.\npatchwork: an R package for preparing composite figure created using ggplot2.\n\nCode chunk below will be used to check if these packages have been installed and also will load them onto your working R environment."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-hrbthems-package",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-hrbthems-package",
    "title": "Hands-on Exercise 2",
    "section": "2.4.1 Working with hrbthems package",
    "text": "2.4.1 Working with hrbthems package\nhrbrthemes package provides a base theme that focuses on typographic elements, including where various labels are placed as well as the fonts that are used.\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum()\n\n\n\n\n\n\n\n\nThe second goal centers around productivity for a production workflow. In fact, this “production workflow” is the context for where the elements of hrbrthemes should be used. Consult this vignette to learn more\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"Y\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWhat can we learn from the code chunk above?\n\n\n\n\naxis_title_size argument is used to increase the font size of the axis title to 18,\nbase_size argument is used to increase the default axis label to 15, and\ngrid argument is used to remove the x-axis grid lines."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-composite-graphics-pathwork-methods",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-composite-graphics-pathwork-methods",
    "title": "Hands-on Exercise 2",
    "section": "2.5.1 Creating Composite Graphics: pathwork methods",
    "text": "2.5.1 Creating Composite Graphics: pathwork methods\nThere are several ggplot2 extension’s functions support the needs to prepare composite figure by combining several graphs such as grid.arrange() of gridExtra package and plot_grid() ofcowplot package. In this section, I am going to shared with you an ggplot2 extension called patchwork which is specially designed for combining separate ggplot2 graphs into a single figure.\nPatchwork package has a very simple syntax where we can create layouts super easily. Here’s the general syntax that combines:\n\nTwo-Column Layout using the Plus Sign +.\nParenthesis () to create a subplot group.\nTwo-Row Layout using the Division Sign /"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-two-ggplot2-graphs",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-two-ggplot2-graphs",
    "title": "Hands-on Exercise 2",
    "section": "2.5.2 Combining two ggplot2 graphs",
    "text": "2.5.2 Combining two ggplot2 graphs\nFigure in the tabset below shows a composite of two histograms created using patchwork. Note how simple the syntax used to create the plot!\n\nplotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\np1 + p2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-three-ggplot2-graphs",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-three-ggplot2-graphs",
    "title": "Hands-on Exercise 2",
    "section": "2.5.3 Combining three ggplot2 graphs",
    "text": "2.5.3 Combining three ggplot2 graphs\nWe can plot more complex composite by using appropriate operators. For example, the composite figure below is plotted by using:\n\n“/” operator to stack two ggplot2 graphs,\n“|” operator to place the plots beside each other,\n“()” operator the define the sequence of the plotting.\n\n\nplotthe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n(p1 / p2) | p3\n\n\n\n\nTo learn more about, refer to Plot Assembly."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-with-tag",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-with-tag",
    "title": "Hands-on Exercise 2",
    "section": "2.5.4 Creating a composite figure with tag",
    "text": "2.5.4 Creating a composite figure with tag\nIn order to identify subplots in text, patchwork also provides auto-tagging capabilities as shown in the figure below.\n\nplotthe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-figure-with-insert",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-figure-with-insert",
    "title": "Hands-on Exercise 2",
    "section": "2.5.5 Creating figure with insert",
    "text": "2.5.5 Creating figure with insert\nBeside providing functions to place plots next to each other based on the provided layout. With inset_element() of patchwork, we can place one or several plots or graphic elements freely on top or below another plot.\n\nplotthe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "In this chapter, you will learn the basic principles and essential components of ggplot2. At the same time, you will gain hands-on experience on using these components to plot statistical graphics based on the principle of Layered Grammar of Graphics. By then end of this chapter you will be able to apply the essential graphical elements provided by ggplot2 to create elegant and yet functional statistical graphics."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#learning-outcome",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#learning-outcome",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "In this chapter, you will learn the basic principles and essential components of ggplot2. At the same time, you will gain hands-on experience on using these components to plot statistical graphics based on the principle of Layered Grammar of Graphics. By then end of this chapter you will be able to apply the essential graphical elements provided by ggplot2 to create elegant and yet functional statistical graphics."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#install-and-launching-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#install-and-launching-r-packages",
    "title": "Hands-on Exercise 1",
    "section": "Install and launching R packages",
    "text": "Install and launching R packages\nThe code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-the-data",
    "title": "Hands-on Exercise 1",
    "section": "Importing the data",
    "text": "Importing the data\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#r-graphics-vs-ggplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#r-graphics-vs-ggplot",
    "title": "Hands-on Exercise 1",
    "section": "1.3.1 R Graphics VS ggplot",
    "text": "1.3.1 R Graphics VS ggplot\nFirst, let us compare how R Graphics, the core graphical functions of Base R and ggplot plot a simple histogram.\n\nR Graphicsggplot2\n\n\n\nhist(exam_data$MATHS)\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=10, \n                 boundary = 100,\n                 color=\"black\", \n                 fill=\"grey\") +\n  ggtitle(\"Distribution of Maths scores\")\n\n\n\n\n\n\n\n\n\n\n\nAs you can see that the code chunk is relatively simple if R Graphics is used. Then, the question is why ggplot2 is recommended?\nAs pointed out by Hadley Wickham\n\n\n\n\n\n\nImportant\n\n\n\nThe transferable skills from ggplot2 are not the idiosyncrasies of plotting syntax, but a powerful way of thinking about visualisation, as a way of mapping between variables and the visual properties of geometric objects that you can perceive."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#a-layered-grammar-of-graphics",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#a-layered-grammar-of-graphics",
    "title": "Hands-on Exercise 1",
    "section": "1.4.1 A Layered Grammar of Graphics",
    "text": "1.4.1 A Layered Grammar of Graphics\nggplot2 is an implementation of Leland Wilkinson’s Grammar of Graphics. Figure below shows the seven grammars of ggplot2.\n\nReference: Hadley Wickham (2010) “A layered grammar of graphics.” Journal of Computational and Graphical Statistics, vol. 19, no. 1, pp. 3–28.\nA short description of each building block are as follows:\n\nData: The dataset being plotted.\nAesthetics take attributes of the data and use them to influence visual characteristics, such as position, colours, size, shape, or transparency.\nGeometrics: The visual elements used for our data, such as point, bar or line.\nFacets split the data into subsets to create multiple variations of the same graph (paneling, multiple plots).\nStatistics, statiscal transformations that summarise data (e.g. mean, confidence intervals).\nCoordinate systems define the plane on which data are mapped on the graphic.\nThemes modify all non-data components of a plot, such as main title, sub-title, y-aixs title, or legend background."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_bar",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_bar",
    "title": "Hands-on Exercise 1",
    "section": "1.7.1 Geometric Objects: geom_bar",
    "text": "1.7.1 Geometric Objects: geom_bar\nThe code chunk below plots a bar chart by using geom_bar().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_dotplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_dotplot",
    "title": "Hands-on Exercise 1",
    "section": "1.7.2 Geometric Objects: geom_dotplot",
    "text": "1.7.2 Geometric Objects: geom_dotplot\nIn a dot plot, the width of a dot corresponds to the bin width (or maximum width, depending on the binning algorithm), and dots are stacked, with each dot representing one observation.\nIn the code chunk below, geom_dotplot() of ggplot2 is used to plot a dot plot.\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(dotsize = 0.5)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBe warned\n\n\n\nThe y scale is not very useful, in fact it is very misleading.\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe code chunk below performs the following two steps:\n\nscale_y_continuous() is used to turn off the y-axis, and\nbinwidth argument is used to change the binwidth to 2.5.\n\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5,         \n               dotsize = 0.5) +      \n  scale_y_continuous(NULL,           \n                     breaks = NULL)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_histogram",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_histogram",
    "title": "Hands-on Exercise 1",
    "section": "1.7.3 Geometric Objects: geom_histogram()",
    "text": "1.7.3 Geometric Objects: geom_histogram()\nIn the code chunk below, geom_histogram() is used to create a simple histogram by using values in MATHS field of exam_data.\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram()       \n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nNote that the default bin is 30."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#modifying-a-geometric-object-by-changing-geom",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#modifying-a-geometric-object-by-changing-geom",
    "title": "Hands-on Exercise 1",
    "section": "1.7.4 Modifying a geometric object by changing geom()",
    "text": "1.7.4 Modifying a geometric object by changing geom()\nIn the code chunk below,\n\nbins argument is used to change the number of bins to 20,\nfill argument is used to shade the histogram with light blue color, and\ncolor argument is used to change the outline colour of the bars in black\n\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,            \n                 color=\"black\",      \n                 fill=\"light blue\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#modifying-a-geometric-object-by-changing-aes",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#modifying-a-geometric-object-by-changing-aes",
    "title": "Hands-on Exercise 1",
    "section": "1.7.5 Modifying a geometric object by changing aes()",
    "text": "1.7.5 Modifying a geometric object by changing aes()\n\nThe code chunk below changes the interior colour of the histogram (i.e. fill) by using sub-group of aesthetic().\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           fill = GENDER)) +\n  geom_histogram(bins=20, \n                 color=\"grey30\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThis approach can be used to colour, fill and alpha of the geometric."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom-density",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom-density",
    "title": "Hands-on Exercise 1",
    "section": "1.7.6 Geometric Objects: geom-density()",
    "text": "1.7.6 Geometric Objects: geom-density()\ngeom-density() computes and plots kernel density estimate, which is a smoothed version of the histogram.\nIt is a useful alternative to the histogram for continuous data that comes from an underlying smooth distribution.\nThe code below plots the distribution of Maths scores in a kernel density estimate plot.\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_density()           \n\n\n\n\n\n\n\n\nThe code chunk below plots two kernel density lines by using colour or fill arguments of aes()\n\nggplot(data=exam_data, \n       aes(x = MATHS, \n           colour = GENDER)) +\n  geom_density()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_boxplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_boxplot",
    "title": "Hands-on Exercise 1",
    "section": "1.7.7 Geometric Objects: geom_boxplot",
    "text": "1.7.7 Geometric Objects: geom_boxplot\ngeom_boxplot() displays continuous value list. It visualises five summary statistics (the median, two hinges and two whiskers), and all “outlying” points individually.\nThe code chunk below plots boxplots by using geom_boxplot().\n\nggplot(data=exam_data, \n       aes(y = MATHS,       \n           x= GENDER)) +    \n  geom_boxplot()            \n\n\n\n\n\n\n\n\nNotches are used in box plots to help visually assess whether the medians of distributions differ. If the notches do not overlap, this is evidence that the medians are different.\nThe code chunk below plots the distribution of Maths scores by gender in notched plot instead of boxplot.\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot(notch=TRUE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_violin",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_violin",
    "title": "Hands-on Exercise 1",
    "section": "1.7.8 Geometric Objects: geom_violin",
    "text": "1.7.8 Geometric Objects: geom_violin\ngeom_violin is designed for creating violin plot. Violin plots are a way of comparing multiple data distributions. With ordinary density curves, it is difficult to compare more than just a few distributions because the lines visually interfere with each other. With a violin plot, it’s easier to compare several distributions since they’re placed side by side.\nThe code below plot the distribution of Maths score by gender in violin plot.\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_point",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_point",
    "title": "Hands-on Exercise 1",
    "section": "1.7.9 Geometric Objects: geom_point()",
    "text": "1.7.9 Geometric Objects: geom_point()\ngeom_point() is especially useful for creating scatterplot.\nThe code chunk below plots a scatterplot showing the Maths and English grades of pupils by using geom_point().\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom-objects-can-be-combined",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom-objects-can-be-combined",
    "title": "Hands-on Exercise 1",
    "section": "1.7.10 geom objects can be combined",
    "text": "1.7.10 geom objects can be combined\nThe code chunk below plots the data points on the boxplots by using both geom_boxplot() and geom_point().\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +                    \n  geom_point(position=\"jitter\", \n             size = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat",
    "title": "Hands-on Exercise 1",
    "section": "1.8.1 Working with stat()",
    "text": "1.8.1 Working with stat()\nThe boxplots below are incomplete because the positions of the means were not shown.\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat---the-stat_summary-method",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat---the-stat_summary-method",
    "title": "Hands-on Exercise 1",
    "section": "1.8.2 Working with stat - the stat_summary() method",
    "text": "1.8.2 Working with stat - the stat_summary() method\nThe code chunk below adds mean values by using stat_summary() function and overriding the default geom.\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun = \"mean\",         \n               colour =\"red\",        \n               size=4)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat---the-geom-method",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat---the-geom-method",
    "title": "Hands-on Exercise 1",
    "section": "1.8.3 Working with stat - the geom() method",
    "text": "1.8.3 Working with stat - the geom() method\nThe code chunk below adding mean values by using geom_() function and overriding the default stat.\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun=\"mean\",           \n             colour=\"red\",          \n             size=4)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#adding-a-best-fit-curve-on-a-scatterplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#adding-a-best-fit-curve-on-a-scatterplot",
    "title": "Hands-on Exercise 1",
    "section": "1.8.4 Adding a best fit curve on a scatterplot?",
    "text": "1.8.4 Adding a best fit curve on a scatterplot?\nThe scatterplot below shows the relationship of Maths and English grades of pupils. The interpretability of this graph can be improved by adding a best fit curve.\n\nIn the code chunk below, geom_smooth() is used to plot a best fit curve on the scatterplot.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(size=0.5)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nThe default method used is loess.\n\n\n\nThe default smoothing method can be overridden as shown below.\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              linewidth=0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-facet_wrap",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-facet_wrap",
    "title": "Hands-on Exercise 1",
    "section": "1.9.1 Working with facet_wrap()",
    "text": "1.9.1 Working with facet_wrap()\nfacet_wrap wraps a 1d sequence of panels into 2d. This is generally a better use of screen space than facet_grid because most displays are roughly rectangular.\nThe code chunk below plots a trellis plot using facet-wrap().\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_wrap(~ CLASS)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#facet_grid-function",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#facet_grid-function",
    "title": "Hands-on Exercise 1",
    "section": "1.9.2 facet_grid() function",
    "text": "1.9.2 facet_grid() function\nfacet_grid() forms a matrix of panels defined by row and column facetting variables. It is most useful when you have two discrete variables, and all combinations of the variables exist in the data.\nThe code chunk below plots a trellis plot using facet_grid().\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_grid(~ CLASS)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-coordinate",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-coordinate",
    "title": "Hands-on Exercise 1",
    "section": "1.10.1 Working with Coordinate",
    "text": "1.10.1 Working with Coordinate\nBy the default, the bar chart of ggplot2 is in vertical form.\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n\n\n\n\n\n\n\n\nThe code chunk below flips the horizontal bar chart into vertical bar chart by using coord_flip().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#changing-the-y--and-x-axis-range",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#changing-the-y--and-x-axis-range",
    "title": "Hands-on Exercise 1",
    "section": "1.10.2 Changing the y- and x-axis range",
    "text": "1.10.2 Changing the y- and x-axis range\nThe scatterplot on the right is slightly misleading because the y-aixs and x-axis range are not equal.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, size=0.5)\n\n\n\n\n\n\n\n\nThe code chunk below fixed both the y-axis and x-axis range from 0-100.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-theme",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-theme",
    "title": "Hands-on Exercise 1",
    "section": "1.11.1 Working with theme",
    "text": "1.11.1 Working with theme\nThe code chunk below plot a horizontal bar chart using theme_gray().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_gray()\n\n\n\n\n\n\n\n\nA horizontal bar chart plotted using theme_classic().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_classic()\n\n\n\n\n\n\n\n\nA horizontal bar chart plotted using theme_minimal().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_minimal()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#reference",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#reference",
    "title": "Hands-on Exercise 1",
    "section": "1.12 Reference",
    "text": "1.12 Reference\n\nHadley Wickham (2023) ggplot2:Elegant Graphics for Data Analysis. Online 3rd edition.\nWinston Chang (2013) R Graphics Cookbook 2nd edition.Online version.\nHealy, Kieran (2019) Data Visualization: A practical introduction. Online version\nLearning ggplot2 on Paper – Components\nLearning ggplot2 on Paper – Layer\nLearning ggplot2 on Paper – Scale"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#configuring-selections",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#configuring-selections",
    "title": "Hands-on Exercise 03",
    "section": "3.3.1 Configuring selections",
    "text": "3.3.1 Configuring selections\nThe graphics produced by girafe() from a shiny application allows you to retrieve the element selections made by users.\nElements associated with data_id can be selected and the selection (the data_id value) is available in the client and the server side of the application. The selected identifiers will be the values mapped by the aesthetic data_id."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#type-of-selection",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#type-of-selection",
    "title": "Hands-on Exercise 03",
    "section": "3.3.2 Type of selection",
    "text": "3.3.2 Type of selection\nThe selection type can take several values: single, multiple or none.\n\nsingle : the user can only select one element. The click allows its selection if it is not selected, or its de-selection if it is already selected. Clicking on an unselected element automatically de-selects the other selected element.\nmultiple: the user can select several elements. He can do this by clicking on the elements or by selecting in the toolbar the “lasso selection” menu which allows you to draw a lasso on the graph and select all the elements contained in the lasso. The toolbar also contains an “anti-lasso selection” menu that allows you to draw a lasso on the graph and de-select all the elements contained in the lasso. The click is of course available for unit selections/de-selections.\nnone: no selection is allowed in the graph produced by girafe.\n\nAll these options can be configured with the following functions:\n\nopts_selection(): relative to panel selections\nopts_selection_key(): relative to legend selections\nopts_selection_theme(): relative to theme elements selections\n\n\nsingle with opts_selection()The codemultiple with opts_selection()The code\n\n\n\n\n\n\n\n\n\n\n\nlibrary(tidyverse)\nmtcars_db &lt;- rownames_to_column(mtcars, var = \"carname\")\n\ngg_scatter &lt;- ggplot(\n  data = mtcars_db, \n  mapping = aes(\n    x = disp, y = qsec, tooltip = carname, \n    data_id = carname, color= wt)) +\n    geom_point_interactive(size=3)\n\ngirafe(ggobj = gg_scatter, \n  options = list(\n    opts_selection(\n      type = \"single\", \n      only_shiny = FALSE))\n)\n\n\n\n\npreselection &lt;- mtcars_db$carname[1:5]\ngirafe(ggobj = gg_scatter, \n  options = list(\n    opts_selection(\n      selected = preselection, \n      type = \"multiple\", \n      only_shiny = FALSE\n    )\n  )\n)\n\n\n\n\n\n\n\n\npreselection &lt;- mtcars_db$carname[1:5]\ngirafe(ggobj = gg_scatter, \n  options = list(\n    opts_selection(\n      selected = preselection, \n      type = \"multiple\", \n      only_shiny = FALSE\n    )\n  )\n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#hover-effects-and-customizing-girafe-animations",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#hover-effects-and-customizing-girafe-animations",
    "title": "Hands-on Exercise 03",
    "section": "3.4.1 Hover effects and customizing girafe animations",
    "text": "3.4.1 Hover effects and customizing girafe animations\nAnother option can be used to alter aspect of non hovered elements. It is very useful to highlight hovered elements when the density of the elements is high by fixing less opacity on the other elements.\n\nHighlight hovered elementsStyling hover effectCombining tooltip and hover effectClick effect with onclickCoordinated Multiple Views with ggiraph\n\n\n\ndat &lt;- read.csv(\"C:/Users/marga/mgtr/ISS608-VAA/Hands-on_Ex/Hands-on_Ex03/Data_03/Exam_data.csv\")\n\ngg &lt;- ggplot(dat, aes(x = ENGLISH, y = MATHS, \n                      colour = RACE, group = GENDER)) +\n  geom_line_interactive(aes(tooltip = ID, data_id = ID)) +\n  scale_color_viridis_d() + \n  labs(title = \"move mouse over lines\")\n\nx &lt;- girafe(ggobj = gg, width_svg = 8, height_svg = 6,\n  options = list(\n    opts_hover_inv(css = \"opacity:0.1;\"),\n    opts_hover(css = \"stroke-width:2;\")\n  ))\n\nx\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)     \n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                        \n\n\n\n\n\n\n\n\nexam_data$onclick &lt;- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(onclick = onclick),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)                                        \n\n\n\n\n\n\n\n\np1 &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\np2 &lt;- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\ngirafe(code = print(p1 + p2), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#displaying-statistics-on-tooltip",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#displaying-statistics-on-tooltip",
    "title": "Hands-on Exercise 03",
    "section": "3.4.2 Displaying statistics on tooltip",
    "text": "3.4.2 Displaying statistics on tooltip\n\nPlotThe code\n\n\n\n\n\n\n\n\n\n\n\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point &lt;- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  )\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-table-dt-package",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-table-dt-package",
    "title": "Hands-on Exercise 03",
    "section": "3.6.1 Interactive Data Table: DT package",
    "text": "3.6.1 Interactive Data Table: DT package\n\nA wrapper of the JavaScript Library DataTables\nData objects in R can be rendered as HTML tables using the JavaScript library ‘DataTables’ (typically via R Markdown or Shiny).\n\n\nDT::datatable(exam_data, class= \"compact\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#linked-brushing-crosstalk-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#linked-brushing-crosstalk-method",
    "title": "Hands-on Exercise 03",
    "section": "3.6.2 Linked brushing: crosstalk method",
    "text": "3.6.2 Linked brushing: crosstalk method\nThings to learn from the code:\nhighlight() is a function of plotly package. It sets a variety of options for brushing (i.e., highlighting) multiple plots. These options are primarily designed for linking multiple plotly graphs, and may not behave as expected when linking plotly to another htmlwidget package via crosstalk. In some cases, other htmlwidgets will respect these options, such as persistent selection in leaflet.\nbscols() is a helper function of crosstalk package. It makes it easy to put HTML elements side by side. It can be called directly from the console but is especially designed to work in an R Markdown document. Warning: This will bring in all of Bootstrap!.\n\nPlotThe code\n\n\n\nd &lt;- highlight_key(exam_data) \np &lt;- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg &lt;- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#ggiraph",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#ggiraph",
    "title": "Hands-on Exercise 03",
    "section": "3.7.1 ggiraph",
    "text": "3.7.1 ggiraph\nThis link provides online version of the reference guide and several useful articles. Use this link to download the pdf version of the reference guide.\n\nHow to Plot With Ggiraph\nInteractive map of France with ggiraph\nCustom interactive sunbursts with ggplot in R\nThis link provides code example on how ggiraph is used to interactive graphs for Swiss Olympians - the solo specialists."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#plotly-for-r",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#plotly-for-r",
    "title": "Hands-on Exercise 03",
    "section": "3.7.2 plotly for R",
    "text": "3.7.2 plotly for R\n\nGetting Started with Plotly in R\nA collection of plotly R graphs are available via this link.\nCarson Sievert (2020) Interactive web-based data visualization with R, plotly, and shiny, Chapman and Hall/CRC is the best resource to learn plotly for R. The online version is available via this link\nPlotly R Figure Reference provides a comprehensive discussion of each visual representations.\nPlotly R Library Fundamentals is a good place to learn the fundamental features of Plotly’s R API.\nGetting Started\nVisit this link for a very interesting implementation of gganimate by your senior.\nBuilding an animation step-by-step with gganimate.\nCreating a composite gif with multiple gganimate panels"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#basic-concepts-of-animation",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#basic-concepts-of-animation",
    "title": "Hands-on Exercise 03",
    "section": "4.1.1 Basic concepts of animation",
    "text": "4.1.1 Basic concepts of animation\nWhen creating animations, the plot does not actually move. Instead, many individual plots are built and then stitched together as movie frames, just like an old-school flip book or cartoon. Each frame is a different plot when conveying motion, which is built using some relevant subset of the aggregate data. The subset drives the flow of the animation when stitched back together.\n\n\n4.1.2 Terminology\nBefore we dive into the steps for creating an animated statistical graph, it’s important to understand some of the key concepts and terminology related to this type of visualization.\n\nFrame: In an animated line graph, each frame represents a different point in time or a different category. When the frame changes, the data points on the graph are updated to reflect the new data.\nAnimation Attributes: The animation attributes are the settings that control how the animation behaves. For example, you can specify the duration of each frame, the easing function used to transition between frames, and whether to start the animation from the current frame or from the beginning.\n\n\n\n\n\n\n\nTip\n\n\n\nBefore you start making animated graphs, you should first ask yourself: Does it makes sense to go through the effort? If you are conducting an exploratory data analysis, a animated graphic may not be worth the time investment. However, if you are giving a presentation, a few well-placed animated graphics can help an audience connect with your topic remarkably better than static counterparts."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#loading-the-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#loading-the-r-packages",
    "title": "Hands-on Exercise 03",
    "section": "4.2.1 Loading the R packages",
    "text": "4.2.1 Loading the R packages\nFirst, a code chunk to check, install and load the following R packages:\n\nplotly, R library for plotting interactive statistical graphs.\ngganimate, an ggplot extension for creating animated statistical graphs.\ngifski converts video frames to GIF animations using pngquant’s fancy features for efficient cross-frame palettes and temporal dithering. It produces animated GIFs that use thousands of colors per frame.\ngapminder: An excerpt of the data available at Gapminder.org. We just want to use its country_colors scheme.\ntidyverse, a family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.\n\n\npacman::p_load(readxl, gifski, gapminder,\n               plotly, gganimate, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#importing-the-data",
    "title": "Hands-on Exercise 03",
    "section": "4.2.2 Importing the data",
    "text": "4.2.2 Importing the data\nIn this hands-on exercise, the Data worksheet from GlobalPopulation Excel workbook will be used.\nWrite a code chunk to import Data worksheet from GlobalPopulation Excel workbook by using appropriate R package from tidyverse family:\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"C:/Users/marga/mgtr/ISS608-VAA/Hands-on_Ex/Hands-on_Ex03/Data_03/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate(across(col, as.factor)) %&gt;%\n  mutate(Year = as.integer(Year))\n\n\n\n\n\n\n\nThings to learn from the code chunk above\n\n\n\n\nread_xls() of readxl package is used to import the Excel worksheet.\nacross() makes it easy to apply the same transformation to multiple columns, allowing you to use select() semantics inside in “data-masking” functions like summarise() and mutate().\nmutate of dplyr package is used to convert data values of Year field into integer."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#building-a-static-or-animated-bubble-plot",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#building-a-static-or-animated-bubble-plot",
    "title": "Hands-on Exercise 03",
    "section": "4.3.1 Building a static or animated bubble plot",
    "text": "4.3.1 Building a static or animated bubble plot\nIn the code chunks below, the basic ggplot2 functions are used to create a static bubble plot as well as transition_time() of gganimate is used to create transition through distinct states in time (i.e. Year). ease_aes() is used to control easing of aesthetics. The default is linear. Other methods are: quadratic, cubic, quartic, quintic, sine, circular, exponential, elastic, back, and bounce.\n\nStatic bubble plotThe codeAnimated plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  transition_time(Year) +       \n  ease_aes('linear')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#line-animated-plot",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#line-animated-plot",
    "title": "Hands-on Exercise 03",
    "section": "4.4.1 Line Animated Plot",
    "text": "4.4.1 Line Animated Plot\n\nPlotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\np &lt;- ggplot(globalPop, aes(x = Year, y = Young, group = Country, color = Country)) +\n  geom_line() +\n  labs(x = \"Year\", y = \"% Young Population\") +\n  theme_minimal() +\n  theme(legend.position = \"none\")\n\n# Animated reveal\np + transition_reveal(Year)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#data-transition-plot",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#data-transition-plot",
    "title": "Hands-on Exercise 03",
    "section": "4.4.2 Data Transition Plot",
    "text": "4.4.2 Data Transition Plot\n\nlibrary(dplyr)\n\nmean_young &lt;- globalPop %&gt;%\n  group_by(Year) %&gt;%\n  summarise(MeanYoung = mean(Young, na.rm = TRUE))\n\n\nPlotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\np &lt;- ggplot(mean_young, aes(x = Year, y = MeanYoung, fill = MeanYoung)) +\n  geom_col() +\n  scale_fill_distiller(palette = \"Blues\", direction = 1) +\n  theme_minimal() +\n  theme(\n    panel.grid = element_blank(),\n    panel.grid.major.y = element_line(color = \"white\"),\n    panel.ontop = TRUE\n  )\n\np + \n  transition_states(Year, wrap = FALSE) +\n  shadow_mark() +\n  enter_grow() +\n  enter_fade()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#plot-using-the-gapminder",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#plot-using-the-gapminder",
    "title": "Hands-on Exercise 03",
    "section": "4.4.4 Plot using the gapminder",
    "text": "4.4.4 Plot using the gapminder\n\nPlotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, show.legend = FALSE) +\n  # Remove this line or define country_colors as a named vector\n  # scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  facet_wrap(~Continent) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  transition_time(Year) +\n  ease_aes('linear')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#an-animated-bubble-plot-ggplotly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#an-animated-bubble-plot-ggplotly-method",
    "title": "Hands-on Exercise 03",
    "section": "4.5.1 an animated bubble plot: ggplotly() method",
    "text": "4.5.1 an animated bubble plot: ggplotly() method\n\nPlotThe codePlot (without legend)The code\n\n\n\n\n\n\n\n\n\n\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young')\n\nggplotly(gg)\n\n\n\n\n\n\n\n\n\n\n\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young') + \n  theme(legend.position='none')\n\nggplotly(gg)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#an-animated-bubble-plot-plot_ly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#an-animated-bubble-plot-plot_ly-method",
    "title": "Hands-on Exercise 03",
    "section": "4.5.2 an animated bubble plot: plot_ly() method",
    "text": "4.5.2 an animated bubble plot: plot_ly() method\n\nPlotThe code\n\n\n\n\n\n\n\n\n\n\n\nbp &lt;- globalPop %&gt;%\n  plot_ly(x = ~Old, \n          y = ~Young, \n          size = ~Population, \n          color = ~Continent,\n          sizes = c(2, 100),\n          frame = ~Year, \n          text = ~Country, \n          hoverinfo = \"text\",\n          type = 'scatter',\n          mode = 'markers'\n          ) %&gt;%\n  layout(showlegend = FALSE)\nbp"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html",
    "title": "Hands-on Exercise 5",
    "section": "",
    "text": "In this hands-on exercise, we will learn how to model, analyse and visualise network data using R.\nLearning outcomes:\n\ncreate graph object data frames, manipulate them using appropriate functions of dplyr, lubridate, and tidygraph,\nbuild network graph visualisation using appropriate functions of ggraph,\ncompute network geometrics using tidygraph,\nbuild advanced graph visualisation by incorporating the network geometrics, and build interactive network visualisation using visNetwork package."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#overview",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#overview",
    "title": "Hands-on Exercise 5",
    "section": "",
    "text": "In this hands-on exercise, we will learn how to model, analyse and visualise network data using R.\nLearning outcomes:\n\ncreate graph object data frames, manipulate them using appropriate functions of dplyr, lubridate, and tidygraph,\nbuild network graph visualisation using appropriate functions of ggraph,\ncompute network geometrics using tidygraph,\nbuild advanced graph visualisation by incorporating the network geometrics, and build interactive network visualisation using visNetwork package."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#installing-and-launching-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#installing-and-launching-r-packages",
    "title": "Hands-on Exercise 5",
    "section": "27.2.1 Installing and launching R packages",
    "text": "27.2.1 Installing and launching R packages\n\npacman::p_load(igraph, tidygraph, ggraph, \n               visNetwork, lubridate, clock,\n               tidyverse, graphlayouts, \n               concaveman, ggforce)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#importing-network-data-from-files",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#importing-network-data-from-files",
    "title": "Hands-on Exercise 5",
    "section": "27.3.1 Importing network data from files",
    "text": "27.3.1 Importing network data from files\n\nGAStech_nodes &lt;- read_csv(\"Data_05/GAStech_email_node.csv\")\nGAStech_edges &lt;- read_csv(\"Data_05/GAStech_email_edge-v2.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#reviewing-the-imported-data",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#reviewing-the-imported-data",
    "title": "Hands-on Exercise 5",
    "section": "27.3.2 Reviewing the imported data",
    "text": "27.3.2 Reviewing the imported data\n\nglimpse(GAStech_edges)\n\nRows: 9,063\nColumns: 8\n$ source      &lt;dbl&gt; 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26…\n$ target      &lt;dbl&gt; 41, 40, 51, 52, 53, 45, 44, 46, 48, 49, 47, 54, 27, 28, 29…\n$ SentDate    &lt;chr&gt; \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\"…\n$ SentTime    &lt;time&gt; 08:39:00, 08:39:00, 08:58:00, 08:58:00, 08:58:00, 08:58:0…\n$ Subject     &lt;chr&gt; \"GT-SeismicProcessorPro Bug Report\", \"GT-SeismicProcessorP…\n$ MainSubject &lt;chr&gt; \"Work related\", \"Work related\", \"Work related\", \"Work rela…\n$ sourceLabel &lt;chr&gt; \"Sven.Flecha\", \"Sven.Flecha\", \"Kanon.Herrero\", \"Kanon.Herr…\n$ targetLabel &lt;chr&gt; \"Isak.Baza\", \"Lucas.Alcazar\", \"Felix.Resumir\", \"Hideki.Coc…\n\n\n\n\n\n\n\n\nWarning\n\n\n\nThe output report of GAStech_edges above reveals that the SentDate is treated as “Character” data type instead of date data type. This is an error! Before we continue, it is important for us to change the data type of SentDate field back to “Date”” data type."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#wrangling-time",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#wrangling-time",
    "title": "Hands-on Exercise 5",
    "section": "27.3.3 Wrangling time",
    "text": "27.3.3 Wrangling time\n\n\nShow the code\nGAStech_edges &lt;- GAStech_edges %&gt;%\n  mutate(SendDate = dmy(SentDate)) %&gt;%\n  mutate(Weekday = wday(SentDate,\n                        label = TRUE,\n                        abbr = FALSE))\n\n\n\n\n\n\n\n\nThings to learn from the code above\n\n\n\n\nboth dmy() and wday() are functions of lubridate package. lubridate is an R package that makes it easier to work with dates and times.\ndmy() transforms the SentDate to Date data type.\nwday() returns the day of the week as a decimal number or an ordered factor if label is TRUE. The argument abbr is FALSE keep the daya spells in full, i.e. Monday. The function will create a new column in the data.frame i.e. Weekday and the output of wday() will save in this newly created field.\nthe values in the Weekday field are in ordinal scale."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#reviewing-the-revised-date-fields",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#reviewing-the-revised-date-fields",
    "title": "Hands-on Exercise 5",
    "section": "27.3.4 Reviewing the revised date fields",
    "text": "27.3.4 Reviewing the revised date fields\n\nglimpse(GAStech_edges)\n\nRows: 9,063\nColumns: 10\n$ source      &lt;dbl&gt; 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26…\n$ target      &lt;dbl&gt; 41, 40, 51, 52, 53, 45, 44, 46, 48, 49, 47, 54, 27, 28, 29…\n$ SentDate    &lt;chr&gt; \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\"…\n$ SentTime    &lt;time&gt; 08:39:00, 08:39:00, 08:58:00, 08:58:00, 08:58:00, 08:58:0…\n$ Subject     &lt;chr&gt; \"GT-SeismicProcessorPro Bug Report\", \"GT-SeismicProcessorP…\n$ MainSubject &lt;chr&gt; \"Work related\", \"Work related\", \"Work related\", \"Work rela…\n$ sourceLabel &lt;chr&gt; \"Sven.Flecha\", \"Sven.Flecha\", \"Kanon.Herrero\", \"Kanon.Herr…\n$ targetLabel &lt;chr&gt; \"Isak.Baza\", \"Lucas.Alcazar\", \"Felix.Resumir\", \"Hideki.Coc…\n$ SendDate    &lt;date&gt; 2014-01-06, 2014-01-06, 2014-01-06, 2014-01-06, 2014-01-0…\n$ Weekday     &lt;ord&gt; Friday, Friday, Friday, Friday, Friday, Friday, Friday, Fr…"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#wrangling-attributes",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#wrangling-attributes",
    "title": "Hands-on Exercise 5",
    "section": "27.3.5 Wrangling attributes",
    "text": "27.3.5 Wrangling attributes\nA close examination of GAStech_edges data.frame reveals that it consists of individual e-mail flow records. This is not very useful for visualisation.\nIn view of this, we will aggregate the individual by date, senders, receivers, main subject and day of the week.\n\n\nShow the code\nGAStech_edges_aggregated &lt;- GAStech_edges %&gt;%\n  filter(MainSubject == \"Work related\") %&gt;%\n  group_by(source, target, Weekday) %&gt;%\n    summarise(Weight = n()) %&gt;%\n  filter(source!=target) %&gt;%\n  filter(Weight &gt; 1) %&gt;%\n  ungroup()\n\n\n\n\n\n\n\n\nThings to learn from the code above\n\n\n\n\nfour functions from dplyr package are used. They are: filter(), group(), summarise(), and ungroup().\nThe output data.frame is called GAStech_edges_aggregated.\nA new field called Weight has been added in GAStech_edges_aggregated."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#reviewing-the-revised-edges-file",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#reviewing-the-revised-edges-file",
    "title": "Hands-on Exercise 5",
    "section": "27.3.6 Reviewing the revised edges file",
    "text": "27.3.6 Reviewing the revised edges file\n\n\nShow the code\nglimpse(GAStech_edges_aggregated)\n\n\nRows: 1,372\nColumns: 4\n$ source  &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ target  &lt;dbl&gt; 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6,…\n$ Weekday &lt;ord&gt; Sunday, Monday, Tuesday, Wednesday, Friday, Sunday, Monday, Tu…\n$ Weight  &lt;int&gt; 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5,…"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#the-tbl_graph-object",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#the-tbl_graph-object",
    "title": "Hands-on Exercise 5",
    "section": "27.4.1 The tbl_graph object",
    "text": "27.4.1 The tbl_graph object\nTwo functions of tidygraph package can be used to create network objects, they are:\n\ntbl_graph() creates a tbl_graph network object from nodes and edges data.\nas_tbl_graph() converts network data and objects to a tbl_graph network. Below are network data and objects supported by as_tbl_graph()\n\na node data.frame and an edge data.frame,\ndata.frame, list, matrix from base,\nigraph from igraph,\nnetwork from network,\ndendrogram and hclust from stats,\nNode from data.tree,\nphylo and evonet from ape, and\ngraphNEL, graphAM, graphBAM from graph (in Bioconductor).\n\nThe dplyr verbs in tidygraph\n\nactivate() verb from tidygraph serves as a switch between tibbles for nodes and edges. All dplyr verbs applied to tbl_graph object are applied to the active tibble."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#using-tbl_graph-to-build-tidygraph-data-model.",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#using-tbl_graph-to-build-tidygraph-data-model.",
    "title": "Hands-on Exercise 5",
    "section": "27.4.2 Using tbl_graph() to build tidygraph data model.",
    "text": "27.4.2 Using tbl_graph() to build tidygraph data model.\nWe will use tbl_graph() of tinygraph package to build an tidygraph’s network graph data.frame.\n\n\nShow the code\nGAStech_graph &lt;- tbl_graph(nodes = GAStech_nodes,\n                           edges = GAStech_edges_aggregated, \n                           directed = TRUE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#reviewing-the-output-tidygraphs-graph-object",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#reviewing-the-output-tidygraphs-graph-object",
    "title": "Hands-on Exercise 5",
    "section": "27.4.3 Reviewing the output tidygraph’s graph object",
    "text": "27.4.3 Reviewing the output tidygraph’s graph object\n\nGAStech_graph\n\n# A tbl_graph: 54 nodes and 1372 edges\n#\n# A directed multigraph with 1 component\n#\n# Node Data: 54 × 4 (active)\n      id label               Department     Title                               \n   &lt;dbl&gt; &lt;chr&gt;               &lt;chr&gt;          &lt;chr&gt;                               \n 1     1 Mat.Bramar          Administration Assistant to CEO                    \n 2     2 Anda.Ribera         Administration Assistant to CFO                    \n 3     3 Rachel.Pantanal     Administration Assistant to CIO                    \n 4     4 Linda.Lagos         Administration Assistant to COO                    \n 5     5 Ruscella.Mies.Haber Administration Assistant to Engineering Group Mana…\n 6     6 Carla.Forluniau     Administration Assistant to IT Group Manager       \n 7     7 Cornelia.Lais       Administration Assistant to Security Group Manager \n 8    44 Kanon.Herrero       Security       Badging Office                      \n 9    45 Varja.Lagos         Security       Badging Office                      \n10    46 Stenig.Fusil        Security       Building Control                    \n# ℹ 44 more rows\n#\n# Edge Data: 1,372 × 4\n   from    to Weekday Weight\n  &lt;int&gt; &lt;int&gt; &lt;ord&gt;    &lt;int&gt;\n1     1     2 Sunday       5\n2     1     2 Monday       2\n3     1     2 Tuesday      3\n# ℹ 1,369 more rows\n\n\nThe output above reveals that GAStech_graph is a tbl_graph object with 54 nodes and 4541 edges. The command also prints the first six rows of “Node Data” and the first three of “Edge Data”. It states that the Node Data is active. The notion of an active tibble within a tbl_graph object makes it possible to manipulate the data in one tibble at a time."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#changing-the-active-object",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#changing-the-active-object",
    "title": "Hands-on Exercise 5",
    "section": "27.4.4 Changing the active object",
    "text": "27.4.4 Changing the active object\nWe want to rearrange the rows in the edges tibble to list those with the highest “weight” first, we could use activate() and then arrange() to change the nodes tibble data frame which is activated by default.\n\n\nShow the code\nGAStech_graph %&gt;%\n  activate(edges) %&gt;%\n  arrange(desc(Weight))\n\n\n# A tbl_graph: 54 nodes and 1372 edges\n#\n# A directed multigraph with 1 component\n#\n# Edge Data: 1,372 × 4 (active)\n    from    to Weekday   Weight\n   &lt;int&gt; &lt;int&gt; &lt;ord&gt;      &lt;int&gt;\n 1    40    41 Saturday      13\n 2    41    43 Monday        11\n 3    35    31 Tuesday       10\n 4    40    41 Monday        10\n 5    40    43 Monday        10\n 6    36    32 Sunday         9\n 7    40    43 Saturday       9\n 8    41    40 Monday         9\n 9    19    15 Wednesday      8\n10    35    38 Tuesday        8\n# ℹ 1,362 more rows\n#\n# Node Data: 54 × 4\n     id label           Department     Title           \n  &lt;dbl&gt; &lt;chr&gt;           &lt;chr&gt;          &lt;chr&gt;           \n1     1 Mat.Bramar      Administration Assistant to CEO\n2     2 Anda.Ribera     Administration Assistant to CFO\n3     3 Rachel.Pantanal Administration Assistant to CIO\n# ℹ 51 more rows"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#plotting-a-basic-network-graph",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#plotting-a-basic-network-graph",
    "title": "Hands-on Exercise 5",
    "section": "27.5.1 Plotting a basic network graph",
    "text": "27.5.1 Plotting a basic network graph\nThe code chunk below uses ggraph(), geom-edge_link() and geom_node_point() to plot a network graph by using GAStech_graph.\n\n\nShow the code\nggraph(GAStech_graph) +\n  geom_edge_link() +\n  geom_node_point()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThings to learn from this code above:\n\n\n\n\nThe basic plotting function is ggraph(), which takes the data to be used for the graph and the type of layout desired. Both of the arguments for ggraph() are built around igraph. Therefore, ggraph() can use either an igraph object or a tbl_graph object."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#changing-the-default-network-graph-theme",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#changing-the-default-network-graph-theme",
    "title": "Hands-on Exercise 5",
    "section": "27.5.2 Changing the default network graph theme",
    "text": "27.5.2 Changing the default network graph theme\nWe will use theme_graph() to remove the x and y axes.\n\n\nShow the code\ng &lt;- ggraph(GAStech_graph) + \n  geom_edge_link(aes()) +\n  geom_node_point(aes())\n\ng + theme_graph()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThings to learn from this code above:\n\n\n\n\nggraph introduces a special ggplot theme that provides better defaults for network graphs than the normal ggplot defaults. theme_graph(), besides removing axes, grids, and border, changes the font to Arial Narrow (this can be overridden).\nThe ggraph theme can be set for a series of plots with the set_graph_style() command run before the graphs are plotted or by using theme_graph() in the individual plots."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#coloring-of-the-plot",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#coloring-of-the-plot",
    "title": "Hands-on Exercise 5",
    "section": "27.5.3 Coloring of the plot",
    "text": "27.5.3 Coloring of the plot\n\n\nShow the code\ng &lt;- ggraph(GAStech_graph) + \n  geom_edge_link(aes(colour = 'grey50')) +\n  geom_node_point(aes(colour = 'grey40'))\n\ng + theme_graph(background = 'grey10',\n                text_colour = 'white')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#fruchterman-and-reingold-layout",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#fruchterman-and-reingold-layout",
    "title": "Hands-on Exercise 5",
    "section": "27.5.4 Fruchterman and Reingold layout",
    "text": "27.5.4 Fruchterman and Reingold layout\nThe code chunks below will be used to plot the network graph using Fruchterman and Reingold layout.\n\n\nShow the code\ng &lt;- ggraph(GAStech_graph, \n            layout = \"fr\") +\n  geom_edge_link(aes()) +\n  geom_node_point(aes())\n\ng + theme_graph()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThing to learn from the code above:\n\n\n\nlayout argument is used to define the layout to be used."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#modifying-network-nodes",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#modifying-network-nodes",
    "title": "Hands-on Exercise 5",
    "section": "27.5.5 Modifying network nodes",
    "text": "27.5.5 Modifying network nodes\n\n\nShow the code\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes()) +\n  geom_node_point(aes(colour = Department, \n                      size = 3))\n\ng + theme_graph()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThing to learn from the code above:\n\n\n\n\ngeom_node_point is equivalent in functionality to geo_point of ggplot2. It allows for simple plotting of nodes in different shapes, colours and sizes. In the codes chnuks above colour and size are used."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#modifying-edges",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#modifying-edges",
    "title": "Hands-on Exercise 5",
    "section": "27.5.6 Modifying edges",
    "text": "27.5.6 Modifying edges\n\n\nShow the code\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") +\n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 3)\n\ng + theme_graph()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThing to learn from the code above:\n\n\n\n\ngeom_edge_link draws edges in the simplest way - as straight lines between the start and end nodes. But, it can do more that that. In the example above, argument width is used to map the width of the line in proportional to the Weight attribute and argument alpha is used to introduce opacity on the line."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#computing-centrality-indices",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#computing-centrality-indices",
    "title": "Hands-on Exercise 5",
    "section": "27.7.1 Computing centrality indices",
    "text": "27.7.1 Computing centrality indices\nCentrality measures are a collection of statistical indices use to describe the relative important of the actors are to a network. There are four well-known centrality measures, namely: degree, betweenness, closeness and eigenvector.\n\n\nShow the code\ng &lt;- GAStech_graph %&gt;%\n  mutate(betweenness_centrality = centrality_betweenness()) %&gt;%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department,\n            size=betweenness_centrality))\ng + theme_graph()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThings to learn from the code above:\n\n\n\n\nmutate() of dplyr is used to perform the computation.\nthe algorithm used, on the other hand, is the centrality_betweenness() of tidygraph."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#visualisation-network-metrics",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#visualisation-network-metrics",
    "title": "Hands-on Exercise 5",
    "section": "27.7.2 Visualisation Network Metrics",
    "text": "27.7.2 Visualisation Network Metrics\n\nggraphPlotgroup_edge_betweenness()PlotggforcePlot\n\n\n\ng &lt;- GAStech_graph %&gt;%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department, \n                      size = centrality_betweenness()))\ng + theme_graph()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ng &lt;- GAStech_graph %&gt;%\n  mutate(community = as.factor(\n    group_edge_betweenness(\n      weights = Weight, \n      directed = TRUE))) %&gt;%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(\n    aes(\n      width=Weight), \n    alpha=0.2) +\n  scale_edge_width(\n    range = c(0.1, 5)) +\n  geom_node_point(\n    aes(colour = community))  \n\ng + theme_graph()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ng &lt;- GAStech_graph %&gt;%\n  activate(nodes) %&gt;%\n  mutate(community = as.factor(\n    group_optimal(weights = Weight)),\n         betweenness_measure = centrality_betweenness()) %&gt;%\n  ggraph(layout = \"fr\") +\n  geom_mark_hull(\n    aes(x, y, \n        group = community, \n        fill = community),  \n    alpha = 0.2,  \n    expand = unit(0.3, \"cm\"),  # Expand\n    radius = unit(0.3, \"cm\")  # Smoothness\n  ) + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(fill = Department,\n                      size = betweenness_measure),\n                      color = \"black\",\n                      shape = 21)\n  \ng + theme_graph()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#data-preparation",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#data-preparation",
    "title": "Hands-on Exercise 5",
    "section": "27.8.1 Data preparation",
    "text": "27.8.1 Data preparation\n\n\nShow the code\nGAStech_edges_aggregated &lt;- GAStech_edges %&gt;%\n  left_join(GAStech_nodes, by = c(\"sourceLabel\" = \"label\")) %&gt;%\n  rename(from = id) %&gt;%\n  left_join(GAStech_nodes, by = c(\"targetLabel\" = \"label\")) %&gt;%\n  rename(to = id) %&gt;%\n  filter(MainSubject == \"Work related\") %&gt;%\n  group_by(from, to) %&gt;%\n    summarise(weight = n()) %&gt;%\n  filter(from!=to) %&gt;%\n  filter(weight &gt; 1) %&gt;%\n  ungroup()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#plotting-the-first-interactive-network-graph",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#plotting-the-first-interactive-network-graph",
    "title": "Hands-on Exercise 5",
    "section": "27.8.2 Plotting the first interactive network graph",
    "text": "27.8.2 Plotting the first interactive network graph\n\n\nShow the code\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-layout",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-layout",
    "title": "Hands-on Exercise 5",
    "section": "27.8.3 Working with layout",
    "text": "27.8.3 Working with layout\n\n\nShow the code\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-visual-attributes---nodes",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-visual-attributes---nodes",
    "title": "Hands-on Exercise 5",
    "section": "27.8.4 Working with visual attributes - Nodes",
    "text": "27.8.4 Working with visual attributes - Nodes\nvisNetwork() looks for a field called “group” in the nodes object and colour the nodes according to the values of the group field.\n\n\nShow the code\nGAStech_nodes &lt;- GAStech_nodes %&gt;%\n  rename(group = Department) \n\n\nWhen we rerun the code chunk below, visNetwork shades the nodes by assigning unique colour to each category in the group field.\n\n\nShow the code\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visLegend() %&gt;%\n  visLayout(randomSeed = 123)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-visual-attributes---edges",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-visual-attributes---edges",
    "title": "Hands-on Exercise 5",
    "section": "27.8.5 Working with visual attributes - Edges",
    "text": "27.8.5 Working with visual attributes - Edges\n\n\nShow the code\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visEdges(arrows = \"to\", \n           smooth = list(enabled = TRUE, \n                         type = \"curvedCW\")) %&gt;%\n  visLegend() %&gt;%\n  visLayout(randomSeed = 123)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/data/geospatial/MPSZ-2019.html",
    "href": "Hands-on_Ex/Hands-on_Ex08/data/geospatial/MPSZ-2019.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISS608-VAA",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Applications. In this website, you will find my coursework prepared for this course."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "title": "Take-Home Exercise 2",
    "section": "",
    "text": "pacman::p_load(tidyverse, jsonlite, SmartEDA, tidygraph, ggraph, packcircles, stringr, igraph, visNetwork, treemap)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#a1.-convert-validate-dates",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#a1.-convert-validate-dates",
    "title": "Take-Home Exercise 2",
    "section": "A1. Convert & Validate Dates",
    "text": "A1. Convert & Validate Dates\n\n# Check raw release_date format\nnodes_tbl %&gt;%\n  select(name, release_date) %&gt;%\n  filter(!is.na(release_date)) %&gt;%\n  distinct(release_date) %&gt;%\n  arrange(release_date)\n\n# A tibble: 64 × 1\n   release_date\n   &lt;chr&gt;       \n 1 1975        \n 2 1977        \n 3 1979        \n 4 1980        \n 5 1981        \n 6 1982        \n 7 1983        \n 8 1984        \n 9 1985        \n10 1986        \n# ℹ 54 more rows"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#a2.-check-sailor-shifts-song-release-date-sorted-chronologically",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#a2.-check-sailor-shifts-song-release-date-sorted-chronologically",
    "title": "Take-Home Exercise 2",
    "section": "A2. Check Sailor Shift’s song release date sorted chronologically",
    "text": "A2. Check Sailor Shift’s song release date sorted chronologically\n\n\nShow the code\n# 1. Find Sailor Shift's ID\nsailor_id &lt;- nodes_tbl %&gt;%\n  filter(name == \"Sailor Shift\") %&gt;%\n  pull(id)\n\n# 2. Get all songs she performed\nsailor_songs &lt;- edges_tbl %&gt;%\n  filter(`Edge Type` == \"PerformerOf\", source == sailor_id) %&gt;%\n  pull(target)\n\n# 3. Retrieve and sort their release dates\nsailor_songs_tbl &lt;- nodes_tbl %&gt;%\n  filter(id %in% sailor_songs) %&gt;%\n  select(id, name, release_date) %&gt;%\n  mutate(release_year = as.numeric(release_date)) %&gt;%\n  arrange(release_year)\n\n# 4. Print result\nprint(sailor_songs_tbl)\n\n\n# A tibble: 26 × 4\n      id name                  release_date release_year\n   &lt;int&gt; &lt;chr&gt;                 &lt;chr&gt;               &lt;dbl&gt;\n 1 17272 Tidal Pop Waves       2028                 2028\n 2 17279 High Tide Heartbeat   2028                 2028\n 3 17280 Electric Eel Love     2028                 2028\n 4 17281 Sun-Drenched Daydream 2028                 2028\n 5 17282 Chord of the Deep     2028                 2028\n 6 17273 Salty Dreams          2030                 2030\n 7 17283 Heart of the Habitat  2030                 2030\n 8 17284 Reef Rhythm           2030                 2030\n 9 17285 Driftwood Lullaby     2030                 2030\n10 17410 Seashell Serenade     2030                 2030\n# ℹ 16 more rows"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#a3.-influence-types",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#a3.-influence-types",
    "title": "Take-Home Exercise 2",
    "section": "A3. Influence Types",
    "text": "A3. Influence Types\n\ninfluence_types &lt;- c(\n  \"InStyleOf\",\n  \"CoverOf\",\n  \"DirectlySamples\",\n  \"InterpolatesFrom\",\n  \"LyricalReferenceTo\"\n)\n\n\nBuild influence data table\n\ninfluences &lt;- edges_tbl %&gt;%\n  filter(`Edge Type` %in% influence_types)\n\n\n\nPlot influence\n\n\nShow the code\ninfluences %&gt;%\n  count(`Edge Type`) %&gt;%\n  ggplot(aes(x = reorder(`Edge Type`, n), y = n, fill = `Edge Type`)) +\n  geom_col(show.legend = FALSE) +\n  coord_flip() +\n  labs(title = \"How Sailor Shift Was Influenced\",\n       x = \"Type of Influence\", y = \"Count\") +\n  theme_minimal()"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#a4.-find-the-song-released-dates",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#a4.-find-the-song-released-dates",
    "title": "Take-Home Exercise 2",
    "section": "A4. Find the song released dates",
    "text": "A4. Find the song released dates\n\nlibrary(dplyr)\n\n# 1. Define the years in which she released music\nyears &lt;- sort(unique(sailor_songs_tbl$release_year))\n\nyears\n\n[1] 2028 2030 2031 2032 2034 2036 2038 2040\n\n\n\nDefine influence_types\n\n\nShow the code\nlibrary(dplyr)\n\nyearly_top_influencers &lt;- \n  edges_tbl %&gt;%\n  # 1. keep only influence edges\n  filter(`Edge Type` %in% influence_types) %&gt;%\n  # 2. attach Sailor Shift song years (join on source → id)\n  inner_join(\n    sailor_songs_tbl,\n    by = c(\"source\" = \"id\")\n  ) %&gt;%\n  # 3. bring in influencer name + node type\n  left_join(\n    nodes_tbl %&gt;% select(id, influencer = name, type = `Node Type`),\n    by = c(\"target\" = \"id\")\n  ) %&gt;%\n  # 4. tally per year + influencer\n  count(release_year, influencer, type, name = \"count\") %&gt;%\n  # 5. pick the single top influencer each year\n  group_by(release_year) %&gt;%\n  slice_max(count, n = 1, with_ties = FALSE) %&gt;%\n  ungroup() %&gt;%\n  arrange(release_year)\n\nprint(yearly_top_influencers)\n\n\n# A tibble: 7 × 4\n  release_year influencer                 type  count\n         &lt;dbl&gt; &lt;chr&gt;                      &lt;chr&gt; &lt;int&gt;\n1         2028 Addicted to Your Heartache Album     1\n2         2030 Echoes of Forgotten Light  Song      1\n3         2031 Dreamscape of Judgment     Song      1\n4         2032 Parallel Memories          Song      1\n5         2034 Divergent Memories         Song      1\n6         2036 Coastal Whispers of Biscay Song      1\n7         2038 Altitude of Mistakes       Song      1\n\n\n\n\nBuild perf_map\n\nperf_map &lt;- edges_tbl %&gt;% \n  filter(`Edge Type` == \"PerformerOf\") %&gt;% \n  select(influencer_song = target, \n         performer_id     = source)\n\n\n\nBuild yearly_top_influencers_artists\n\n\nShow the code\nyearly_top_influencers_artists &lt;-\n  edges_tbl %&gt;%\n  filter(`Edge Type` %in% influence_types) %&gt;%\n  \n  # attach Sailor Shift’s song years\n  inner_join(sailor_songs_tbl, by = c(\"source\" = \"id\")) %&gt;%\n  \n  # attach the song→performer mapping\n  inner_join(perf_map, by = c(\"target\" = \"influencer_song\")) %&gt;%\n  \n  # get the performer’s name & node type\n  left_join(\n    nodes_tbl %&gt;% select(id, influencer = name, type = `Node Type`),\n    by = c(\"performer_id\" = \"id\")\n  ) %&gt;%\n  \n  # only keep real performers (Person / Music Group / Record Label)\n  filter(type %in% c(\"Person\", \"Music Group\", \"Record Label\")) %&gt;%\n  \n  # count per year + performer\n  count(release_year, influencer, type, name = \"count\") %&gt;%\n  \n  # pick the top performer each year\n  group_by(release_year) %&gt;%\n  slice_max(count, n = 1, with_ties = FALSE) %&gt;%\n  ungroup() %&gt;%\n  arrange(release_year)\n\nprint(yearly_top_influencers_artists)\n\n\n# A tibble: 7 × 4\n  release_year influencer       type   count\n         &lt;dbl&gt; &lt;chr&gt;            &lt;chr&gt;  &lt;int&gt;\n1         2028 Jeremiah Love    Person     1\n2         2030 Gang Shao        Person     1\n3         2031 Sandra Burke     Person     1\n4         2032 Guiying Ren      Person     1\n5         2034 Joshua Taylor    Person     1\n6         2036 Daniel Mccormick Person     1\n7         2038 Amico Luciani    Person     1\n\n\nTo compare influence levels across different types (e.g., lyrical vs. stylistic), we computed normalized weights: rarer influence types were assigned higher scores to balance their impact in the analysis. For each year in which Sailor released music, we calculated a weighted influence score for every performer that influenced her that year."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#a5.-build-weighted-counts",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#a5.-build-weighted-counts",
    "title": "Take-Home Exercise 2",
    "section": "A5. Build weighted counts",
    "text": "A5. Build weighted counts\n\n# 1. Count how many times each Edge Type occurs\nbase_counts &lt;- influences %&gt;%\n  count(`Edge Type`, name = \"n\")\n\n# 2. Examine\nprint(base_counts)\n\n# A tibble: 5 × 2\n  `Edge Type`            n\n  &lt;chr&gt;              &lt;int&gt;\n1 CoverOf             1429\n2 DirectlySamples      619\n3 InStyleOf           2289\n4 InterpolatesFrom    1574\n5 LyricalReferenceTo  1496\n\n\n\nAuto_weights\n\n# 3. Compute max frequency\nmax_n &lt;- max(base_counts$n)\n\n# 4. Build the named weight vector\nauto_weights &lt;- base_counts %&gt;%\n  mutate(weight = max_n / n) %&gt;%\n  select(`Edge Type`, weight) %&gt;%\n  deframe()\n\nprint(auto_weights)\n\n           CoverOf    DirectlySamples          InStyleOf   InterpolatesFrom \n          1.601819           3.697900           1.000000           1.454257 \nLyricalReferenceTo \n          1.530080 \n\n\n\n\nBuild weights → weighted_top_by_year_auto\n\n\nShow the code\nweighted_top_by_year_auto &lt;- edges_tbl %&gt;%\n  filter(`Edge Type` %in% influence_types) %&gt;%\n  inner_join(sailor_songs_tbl, by = c(\"source\" = \"id\")) %&gt;%\n  inner_join(perf_map,         by = c(\"target\" = \"influencer_song\")) %&gt;%\n  left_join(\n    nodes_tbl %&gt;% select(id, performer = name, type = `Node Type`),\n    by = c(\"performer_id\" = \"id\")\n  ) %&gt;%\n  filter(type %in% c(\"Person\", \"Music Group\", \"Record Label\")) %&gt;%\n  mutate(weight = recode(`Edge Type`, !!!auto_weights)) %&gt;%\n  group_by(release_year, performer, type) %&gt;%\n  summarize(score = sum(weight), .groups = \"drop\") %&gt;%\n  group_by(release_year) %&gt;%\n  slice_max(score, n = 1, with_ties = FALSE) %&gt;%\n  ungroup() %&gt;%\n  arrange(release_year)\n\nprint(weighted_top_by_year_auto)\n\n\n# A tibble: 7 × 4\n  release_year performer         type   score\n         &lt;dbl&gt; &lt;chr&gt;             &lt;chr&gt;  &lt;dbl&gt;\n1         2028 Joanna Avery      Person  1.60\n2         2030 Samantha Bullock  Person  1.60\n3         2031 Sandra Burke      Person  1.60\n4         2032 Guiying Ren       Person  1   \n5         2034 Simone Säuberlich Person  1.60\n6         2036 James Medina      Person  1.45\n7         2038 Amico Luciani     Person  3.70"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#a6.-most-influential-performer-by-sailor-shift-release-year",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#a6.-most-influential-performer-by-sailor-shift-release-year",
    "title": "Take-Home Exercise 2",
    "section": "A6. Most Influential Performer by Sailor Shift Release Year",
    "text": "A6. Most Influential Performer by Sailor Shift Release Year\nThe resulting chart below shows the top influencer by year, accounting for both the frequency and type of influence. Each bar represents a release year in Sailor’s career, annotated with the name of her top influencer (person, group, or label) and the cumulative influence score.\nThis approach reveals both consistent sources of inspiration and shifts in influence throughout her discography, offering insight into how her sound may have been shaped by key collaborators or predecessors.\n\n\nShow the code\nlibrary(ggplot2)\n\nggplot(weighted_top_by_year_auto,\n       aes(x = factor(release_year), y = score, fill = type)) +\n  geom_col(show.legend = FALSE) +\n  geom_text(aes(label = paste0(performer, \"\\n(\", type, \")\")),\n            vjust = -0.3, size = 3) +\n  scale_y_continuous(expand = expansion(mult = c(0, 0.2))) +\n  labs(\n    title = \"Most Influential Performer by Sailor Shift Release Year\",\n    x = \"Release Year\",\n    y = \"Weighted Influence Score\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 0, vjust = 0.5),\n    panel.grid.major.x = element_blank()\n  )"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#b1.-create-a-clean-collaboration-data-table-for-all-artists-who-collaborated",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#b1.-create-a-clean-collaboration-data-table-for-all-artists-who-collaborated",
    "title": "Take-Home Exercise 2",
    "section": "B1. Create a clean collaboration data table for all artists who collaborated",
    "text": "B1. Create a clean collaboration data table for all artists who collaborated\n\n\nShow the code\nlibrary(dplyr)\nlibrary(tidyr)\n\n# Step 1: Get all PerformerOf edges with Person nodes only\nperformer_edges &lt;- edges_tbl %&gt;%\n  filter(`Edge Type` == \"PerformerOf\") %&gt;%\n  inner_join(nodes_tbl %&gt;% filter(`Node Type` == \"Person\") %&gt;% select(id), \n             by = c(\"source\" = \"id\")) %&gt;%\n  select(artist_id = source, song_id = target)\n\n# Step 2: For each song with &gt;1 artist, create artist pairs (collaborators)\ncollaborations &lt;- performer_edges %&gt;%\n  group_by(song_id) %&gt;%\n  filter(n() &gt; 1) %&gt;%\n  summarise(pairs = list(as.data.frame(t(combn(artist_id, 2)))), .groups = \"drop\") %&gt;%\n  unnest(pairs) %&gt;%\n  rename(from = V1, to = V2) %&gt;%\n  distinct()\n\ncollaborations_named &lt;- collaborations %&gt;%\n  left_join(nodes_tbl %&gt;% select(id, from_name = name), by = c(\"from\" = \"id\")) %&gt;%\n  left_join(nodes_tbl %&gt;% select(id, to_name = name),   by = c(\"to\" = \"id\"))\n\nprint(collaborations_named)\n\n\n# A tibble: 21,217 × 5\n   song_id  from    to from_name        to_name         \n     &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt;            &lt;chr&gt;           \n 1       0     1     2 Carlos Duffy     Min Qin         \n 2       0     1     3 Carlos Duffy     Xiuying Xie     \n 3       0     2     3 Min Qin          Xiuying Xie     \n 4       5     7     8 Xiulan Zeng      David Franklin  \n 5      15    16    17 Timothy Shea     Philippine Colin\n 6      15    16    19 Timothy Shea     Jordan Mullins  \n 7      15    16    20 Timothy Shea     Xiuying Meng    \n 8      15    17    19 Philippine Colin Jordan Mullins  \n 9      15    17    20 Philippine Colin Xiuying Meng    \n10      15    19    20 Jordan Mullins   Xiuying Meng    \n# ℹ 21,207 more rows\n\n\n\nPrint all artists Sailor has collaborated with\n\n\nShow the code\n# Step 1: Filter rows where Sailor Shift is involved\nsailor_collaborations_named &lt;- collaborations_named %&gt;%\n  filter(from_name == \"Sailor Shift\" | to_name == \"Sailor Shift\")\n\n# Step 2: Create a unified collaborator column (the \"other\" artist)\nsailor_collaborations_named &lt;- sailor_collaborations_named %&gt;%\n  mutate(\n    collaborator_name = ifelse(from_name == \"Sailor Shift\", to_name, from_name)\n  ) %&gt;%\n  select(song_id, collaborator_name, from_name, to_name)\n\nprint(sailor_collaborations_named)\n\n\n# A tibble: 3 × 4\n  song_id collaborator_name from_name    to_name          \n    &lt;int&gt; &lt;chr&gt;             &lt;chr&gt;        &lt;chr&gt;            \n1   17350 Beatrice Albright Sailor Shift Beatrice Albright\n2   17356 Daniel O'Connell  Sailor Shift Daniel O'Connell \n3   17410 Kai Reynolds      Kai Reynolds Sailor Shift"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#b2.-tracing-her-influence",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#b2.-tracing-her-influence",
    "title": "Take-Home Exercise 2",
    "section": "B2. Tracing Her Influence",
    "text": "B2. Tracing Her Influence\nWe defined Sailor’s influence using five edge types: CoverOf, InStyleOf, DirectlySamples, InterpolatesFrom, and LyricalReferenceTo. From songs performed by Sailor Shift, we traced:\n\nDirect influence (1 hop): Songs that were influenced by her songs\nIndirect influence (2 hops): Songs influenced by those direct target songs\n\nWe then looked for performers of those influenced songs, filtering by Person, MusicGroup, or RecordLabel node types.\n\n\nShow the code\nlibrary(dplyr)\n\n# 1. Sailor Shift’s ID and performed songs\nsailor_id    &lt;- nodes_tbl %&gt;% \n  filter(name == \"Sailor Shift\") %&gt;% \n  pull(id)\n\nsailor_songs &lt;- edges_tbl %&gt;% \n  filter(`Edge Type` == \"PerformerOf\", source == sailor_id) %&gt;% \n  pull(target) %&gt;% \n  unique()\n\n# 2. Influence edge types\ninfluence_types &lt;- c(\n  \"CoverOf\", \"InStyleOf\", \"DirectlySamples\",\n  \"InterpolatesFrom\", \"LyricalReferenceTo\"\n)\n\n# 3. Direct (1-hop) and indirect (2-hop) influenced song IDs\ndirect_targets   &lt;- edges_tbl %&gt;% \n  filter(`Edge Type` %in% influence_types, source %in% sailor_songs) %&gt;% \n  pull(target) %&gt;% \n  unique()\n\nindirect_targets &lt;- edges_tbl %&gt;% \n  filter(`Edge Type` %in% influence_types, source %in% direct_targets) %&gt;% \n  pull(target) %&gt;% \n  setdiff(direct_targets) %&gt;%   # exclude any already in direct_targets\n  unique()\n\n# 4. Performer IDs for those influenced songs\ndirect_ids   &lt;- edges_tbl %&gt;% \n  filter(`Edge Type` == \"PerformerOf\", target %in% direct_targets) %&gt;% \n  pull(source) %&gt;% \n  unique()\n\nindirect_ids &lt;- edges_tbl %&gt;% \n  filter(`Edge Type` == \"PerformerOf\", target %in% indirect_targets) %&gt;% \n  pull(source) %&gt;% \n  unique()\n\n# 5. Assemble final table\nsailor_influence_tbl &lt;- bind_rows(\n  tibble(id = direct_ids,   influence = \"direct\"),\n  tibble(id = indirect_ids, influence = \"indirect\")\n) %&gt;%\n  arrange(id, influence) %&gt;%            # ensure direct takes precedence\n  distinct(id, .keep_all = TRUE) %&gt;%   # one row per artist\n  inner_join(nodes_tbl, by = \"id\") %&gt;% \n  filter(`Node Type` %in% c(\"Person\", \"MusicGroup\", \"RecordLabel\")) %&gt;% \n  select(id, name, type = `Node Type`, influence)\n\n# Inspect\nsailor_influence_tbl\n\n\n# A tibble: 118 × 4\n      id name            type   influence\n   &lt;int&gt; &lt;chr&gt;           &lt;chr&gt;  &lt;chr&gt;    \n 1    76 Ming Ren        Person direct   \n 2   334 Christopher Lee Person indirect \n 3   455 Yang Peng       Person direct   \n 4   457 Min Cao         Person direct   \n 5   551 Szymon Pyć      Person indirect \n 6   639 Ming Yan        Person indirect \n 7   878 Jing Kang       Person direct   \n 8   909 Min Tao         Person indirect \n 9   934 Jun Zhou        Person direct   \n10  1074 Jing Cui        Person indirect \n# ℹ 108 more rows\n\n\n\nPlot Network Graph\n\n\nShow the code\nlibrary(dplyr)\nlibrary(igraph)\nlibrary(visNetwork)\n\n# 1. Prepare node data \n\n# a) All song IDs: Sailor’s songs + direct + indirect\nall_songs &lt;- c(sailor_songs, direct_targets, indirect_targets) %&gt;% unique()\n\n# b) Song nodes\nsong_nodes &lt;- nodes_tbl %&gt;%\n  filter(id %in% all_songs) %&gt;%\n  transmute(\n    id      = as.character(id),\n    label   = name,\n    group   = \"Song\"\n  )\n\n# c) Artist nodes: Sailor Shift + those in sailor_influence_tbl\nartist_ids &lt;- c(sailor_id, sailor_influence_tbl$id)\nartist_nodes &lt;- nodes_tbl %&gt;%\n  filter(id %in% artist_ids) %&gt;%\n  transmute(\n    id      = as.character(id),\n    label   = name,\n    group   = if_else(id == as.character(sailor_id), \n                      \"Sailor Shift\", \n                      # use the type from sailor_influ\n                      sailor_influence_tbl$type[match(id, as.character(sailor_influence_tbl$id))])\n  )\n\n# d) Combine\nnodes_vis &lt;- bind_rows(song_nodes, artist_nodes) %&gt;%\n  distinct(id, .keep_all = TRUE)\n\n\n# 2. Prepare edge data \n\n# a) Influence edges (song → song)\nedge_inf &lt;- edges_tbl %&gt;%\n  filter(\n    `Edge Type` %in% influence_types,\n    source %in% all_songs,\n    target %in% all_songs\n  ) %&gt;%\n  transmute(\n    from = as.character(source),\n    to   = as.character(target)\n  )\n\n# b) Performer edges (artist → song)\nedge_perf &lt;- edges_tbl %&gt;%\n  filter(\n    `Edge Type` == \"PerformerOf\",\n    source %in% artist_ids,\n    target %in% all_songs\n  ) %&gt;%\n  transmute(\n    from = as.character(source),\n    to   = as.character(target)\n  )\n\n# c) Combine\nedges_vis &lt;- bind_rows(edge_inf, edge_perf) %&gt;%\n  distinct(from, to, .keep_all = TRUE)\n\n\n# 3. Plot with visNetwork\n\nvisNetwork(nodes_vis, edges_vis, width = \"100%\", height = \"600px\") %&gt;%\n  visNodes(\n    font   = list(size = 20),\n    shadow = TRUE\n  ) %&gt;%\n  visEdges(\n    smooth  = TRUE,\n    shadow  = FALSE,\n    arrows  = \"to\"\n  ) %&gt;%\n  visOptions(\n    highlightNearest  = TRUE,\n    nodesIdSelection  = TRUE\n  ) %&gt;%\n  visLegend(\n    useGroups = TRUE,\n    position  = \"right\"\n  ) %&gt;%\n  visLayout(randomSeed = 42)\n\n\n\n\n\n\n\n\nResult\nFinally, we compared the two sets:\n\nArtists who collaborated with Sailor\nArtists who performed songs that were influenced by her work\n\nThis intersection revealed the collaborators she also influenced. The result showed that while Sailor collaborated with several artists, only a subset of them were later musically influenced by her. These collaborators were flagged with the type of influence (direct or indirect) in the final summary table.\n\n\nKey Insight:\nSailor Shift didn’t just work with other artists which she also influenced some of them through her music. While she had several collaborators, only a few were directly or indirectly shaped by her style, showing that her impact went beyond teamwork and helped inspire others.\n\n\nShow the code\n# Step 1: Extract the 3 collaborator names from filtered table\ncollaborators &lt;- sailor_collaborations_named %&gt;%\n  pull(collaborator_name) %&gt;%\n  unique()\n\n# Step 2: Get their IDs from nodes_tbl\ncollaborator_ids &lt;- nodes_tbl %&gt;%\n  filter(name %in% collaborators) %&gt;%\n  select(id, name)\n\n# Step 3: Check which appear in sailor_influence_tbl\ncollab_influence_check &lt;- collaborator_ids %&gt;%\n  left_join(sailor_influence_tbl, by = c(\"id\", \"name\")) %&gt;%\n  mutate(influenced = ifelse(is.na(influence), \"No\", paste(\"Yes -\", influence))) %&gt;%\n  select(id, name, influenced)\n\nprint(collab_influence_check)\n\n\n# A tibble: 3 × 3\n     id name              influenced\n  &lt;int&gt; &lt;chr&gt;             &lt;chr&gt;     \n1 17226 Kai Reynolds      No        \n2 17349 Beatrice Albright No        \n3 17355 Daniel O'Connell  No"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#c1.-defining-the-oceanus-folk-community",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#c1.-defining-the-oceanus-folk-community",
    "title": "Take-Home Exercise 2",
    "section": "C1. Defining the Oceanus Folk Community",
    "text": "C1. Defining the Oceanus Folk Community\nWe identified the Oceanus Folk community as all individuals who contributed to songs tagged with the genre “Oceanus Folk”—including performers, composers, lyricists, and producers. Additionally, we manually added key members of the Ivy Echoes group—Maya Jensen, Lila Hartman, Jade Thompson, and Sophie Ramirez—who co-founded Oceanus Folk alongside Sailor Shift.\n\n\nShow the code\nlibrary(tidyverse)\nlibrary(stringr)\n\n# Step 1: Identify all songs tagged as \"Oceanus Folk\"\noceanus_songs &lt;- nodes_tbl %&gt;%\n  filter(str_detect(genre, \"Oceanus Folk\")) %&gt;%\n  pull(id)\n\n# Step 2: Define creative roles\ncreative_roles &lt;- c(\"PerformerOf\", \"ComposerOf\", \"LyricistOf\", \"ProducerOf\")\n\n# Step 3: Get contributors to Oceanus Folk songs via creative roles\noceanus_contributor_ids &lt;- edges_tbl %&gt;%\n  filter(`Edge Type` %in% creative_roles, target %in% oceanus_songs) %&gt;%\n  pull(source) %&gt;%\n  unique()\n\n# Step 4: Manually define Ivy Echoes members (since group node is missing)\nivy_echoes_members &lt;- nodes_tbl %&gt;%\n  filter(name %in% c(\"Maya Jensen\", \"Lila Hartman\", \"Jade Thompson\", \"Sophie Ramirez\")) %&gt;%\n  pull(id)\n\n# Step 5: Combine all unique contributors\noceanus_community_ids &lt;- unique(c(\n  oceanus_contributor_ids,\n  ivy_echoes_members\n))\n\n# Step 6: Filter to only relevant node types\noceanus_community &lt;- nodes_tbl %&gt;%\n  filter(id %in% oceanus_community_ids,\n         `Node Type` %in% c(\"Person\", \"MusicGroup\", \"RecordLabel\")) %&gt;%\n  select(id, name, type = `Node Type`)\n\n# View the final Oceanus Folk community\nprint(oceanus_community)\n\n\n# A tibble: 732 × 3\n      id name             type  \n   &lt;int&gt; &lt;chr&gt;            &lt;chr&gt; \n 1     1 Carlos Duffy     Person\n 2     2 Min Qin          Person\n 3     3 Xiuying Xie      Person\n 4   267 Walter White     Person\n 5   274 Li Xie           Person\n 6   372 Tao Cui          Person\n 7   554 William Lynch    Person\n 8   555 Justin Morse     Person\n 9   556 Eduardo Gonzalez Person\n10   721 Ryan Devan       Person\n# ℹ 722 more rows"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#c2.-mapping-collaborators-of-the-oceanus-folk-community",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#c2.-mapping-collaborators-of-the-oceanus-folk-community",
    "title": "Take-Home Exercise 2",
    "section": "C2. Mapping collaborators of the Oceanus Folk Community",
    "text": "C2. Mapping collaborators of the Oceanus Folk Community\nThis step identifies artists, groups, or labels who collaborated with members of the Oceanus Folk community by co-creating the same songs. Collaboration is defined broadly to include performers, composers, lyricists, and producers. Any artist who shares a creative edge to the same song as an Oceanus Folk contributor is considered a collaborator of the Oceanus Folk community.\n\n\nShow the code\n# 1: Get all songs the Oceanus Folk community worked on\noceanus_songs_all_roles &lt;- edges_tbl %&gt;%\n  filter(`Edge Type` %in% creative_roles,\n         source %in% oceanus_community$id) %&gt;%\n  pull(target) %&gt;%\n  unique()\n\n# 2: Find all contributors to those songs (excluding Oceanus community themselves)\ncollaborator_ids &lt;- edges_tbl %&gt;%\n  filter(`Edge Type` %in% creative_roles,\n         target %in% oceanus_songs_all_roles,\n         !source %in% oceanus_community$id) %&gt;%\n  pull(source) %&gt;%\n  unique()\n\n# 3: Get node info for these collaborators\noceanus_collaborators &lt;- nodes_tbl %&gt;%\n  filter(id %in% collaborator_ids,\n         `Node Type` %in% c(\"Person\", \"MusicGroup\", \"RecordLabel\")) %&gt;%\n  select(id, name, type = `Node Type`)\n\n# View result\nprint(oceanus_collaborators)\n\n\n# A tibble: 913 × 3\n      id name         type  \n   &lt;int&gt; &lt;chr&gt;        &lt;chr&gt; \n 1    20 Xiuying Meng Person\n 2    52 Na Guo       Person\n 3   151 Gang Zhao    Person\n 4   163 Regina Hesse Person\n 5   172 Lei Liao     Person\n 6   197 Xia Ren      Person\n 7   201 Fang Zou     Person\n 8   202 Guiying Pan  Person\n 9   265 Wei Zhang    Person\n10   266 Ping Meng    Person\n# ℹ 903 more rows\n\n\n\nFocused heatmap of the Top 10 Collaborators vs Top 10 Oceanus Folk Members\n\n\nShow the code\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(forcats)\nlibrary(ggplot2)\n\n# 0. Parameters\ntop_n_collabs &lt;- 10\ntop_m_members &lt;- 10\n\n# 1. Ensure ID columns are character\noceanus_ids   &lt;- as.character(oceanus_community$id)\ncollab_ids    &lt;- as.character(collaborator_ids)\n\n# 2. Count shared‐song pairs\npair_counts &lt;- edges_tbl %&gt;%\n  filter(`Edge Type` %in% creative_roles,\n         source %in% oceanus_ids) %&gt;%\n  transmute(oc_id = as.character(source), song = target) %&gt;%\n  inner_join(\n    edges_tbl %&gt;%\n      filter(`Edge Type` %in% creative_roles,\n             source %in% collab_ids) %&gt;%\n      transmute(collab_id = as.character(source), song = target),\n    by = \"song\"\n  ) %&gt;%\n  distinct(oc_id, collab_id, song) %&gt;%\n  count(oc_id, collab_id, name = \"shared_songs\")\n\n# 3. Build heatmap_df with names and complete zeros\nheatmap_df &lt;- pair_counts %&gt;%\n  left_join(\n    oceanus_community %&gt;% transmute(oc_id = as.character(id), oc_name = name),\n    by = \"oc_id\"\n  ) %&gt;%\n  left_join(\n    oceanus_collaborators %&gt;% transmute(collab_id = as.character(id), collab_name = name),\n    by = \"collab_id\"\n  ) %&gt;%\n  # fill in zeros for missing combos\n  complete(oc_name, collab_name, fill = list(shared_songs = 0))\n\n# 4. Pick Top N Collaborators\ntop_collabs &lt;- heatmap_df %&gt;%\n  group_by(collab_name) %&gt;%\n  summarize(total_shared = sum(shared_songs), .groups = \"drop\") %&gt;%\n  slice_max(total_shared, n = top_n_collabs) %&gt;%\n  pull(collab_name)\n\n# 5. Subset & pick Top M Members\nhm1 &lt;- heatmap_df %&gt;% filter(collab_name %in% top_collabs)\n\ntop_members &lt;- hm1 %&gt;%\n  group_by(oc_name) %&gt;%\n  summarize(total_shared = sum(shared_songs), .groups = \"drop\") %&gt;%\n  slice_max(total_shared, n = top_m_members) %&gt;%\n  pull(oc_name)\n\n# 6. Build the final small data frame\nhm_small2 &lt;- hm1 %&gt;%\n  filter(oc_name %in% top_members, !is.na(collab_name)) %&gt;%\n  mutate(\n    collab_name = fct_reorder(collab_name, shared_songs, .fun = sum),\n    oc_name     = fct_reorder(oc_name,     shared_songs, .fun = sum)\n  )\n\n# 7. Plot\nggplot(hm_small2, aes(x = collab_name, y = oc_name, fill = shared_songs)) +\n  geom_tile(color = \"grey90\") +\n  scale_fill_gradient(low = \"white\", high = \"Red\", name = \"Shared\\nSongs\") +\n  labs(\n    x     = sprintf(\"Top %d Collaborators\", top_n_collabs),\n    y     = sprintf(\"Top %d Oceanus Members\", top_m_members),\n    title = \"Heatmap of Top Collaborations\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1, size = 8),\n    axis.text.y = element_text(size = 8),\n    panel.grid   = element_blank()\n  )"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#c3.-tracing-sailor-shifts-influence-through-the-network",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#c3.-tracing-sailor-shifts-influence-through-the-network",
    "title": "Take-Home Exercise 2",
    "section": "C3. Tracing Sailor Shift’s Influence Through the Network",
    "text": "C3. Tracing Sailor Shift’s Influence Through the Network\nIn this step, we explore how Sailor Shift’s music has influenced the broader network of artists who have collaborated with the Oceanus Folk community. Specifically, we aim to identify which of these collaborators were directly or indirectly musically influenced by Sailor Shift through her songs.\nTo do this, we first constructed a subgraph of the musical influence network, focusing only on influence-type relationships such as CoverOf, InStyleOf, DirectlySamples, InterpolatesFrom, and LyricalReferenceTo. Starting from Sailor Shift’s original songs, we traversed these influence links to identify all downstream songs and artists that have been impacted either directly or through a chain of influence (multi-hop).\nWe then cross-referenced the results with the previously identified collaborators of the Oceanus Folk community, defined as artists who have shared performance, lyrical, compositional, or production credits on songs with Oceanus Folk artists. By intersecting these two groups, we determined which collaborators were musically influenced by Sailor’s work.\nFor each influenced collaborator, we recorded:\n\nThe name of the collaborator\nThe song(s) of theirs that were influenced\nThe specific Sailor Shift song(s) that served as the origin of influence\nThe number of influence steps (or hops) between Sailor’s song and the collaborator’s song\n\nThis approach allows us to trace the spread of Sailor Shift’s musical impact beyond her direct connections and into the wider music ecosystem surrounding the Oceanus Folk genre.\n\n\nShow the code\nlibrary(dplyr)\nlibrary(tibble)\nlibrary(igraph)\nlibrary(tidyr)\n\n# Step 1: Prepare nodes \nnodes_tbl &lt;- nodes_tbl %&gt;%\n  mutate(id = as.character(id))  # IDs must be character for joining\n\nnodes_indexed &lt;- nodes_tbl %&gt;%\n  mutate(index = row_number())  # this will be used for igraph\n\n# Step 2: Create mapping table\nid_map &lt;- nodes_indexed %&gt;%\n  select(id, index)\n\n# Step 3\n# Start from a clean edges_tbl\nedges_base &lt;- edges_tbl %&gt;%\n  filter(`Edge Type` %in% influence_types) %&gt;%\n  mutate(source = as.character(source), target = as.character(target))\n\n# First: Join for 'from'\nedges_with_from &lt;- edges_base %&gt;%\n  left_join(id_map, by = c(\"source\" = \"id\")) %&gt;%\n  rename(from_index = index)\n\n# Second: Join for 'to'\nedges_with_to &lt;- edges_with_from %&gt;%\n  left_join(id_map, by = c(\"target\" = \"id\")) %&gt;%\n  rename(to_index = index)\n\n# Final cleaned influence_edges\ninfluence_edges &lt;- edges_with_to %&gt;%\n  filter(!is.na(from_index) & !is.na(to_index)) %&gt;%\n  select(from = from_index, to = to_index, `Edge Type`)\n\n# Step 4: Build igraph using numeric index\ng &lt;- graph_from_data_frame(\n  d = influence_edges,\n  vertices = nodes_indexed %&gt;% select(index),  # use only index column as unique node IDs\n  directed = TRUE\n)\n\n# Step 5\nsailor_id &lt;- nodes_tbl %&gt;%\n  filter(name == \"Sailor Shift\") %&gt;%\n  pull(id)\n\nsailor_song_ids &lt;- edges_tbl %&gt;%\n  filter(`Edge Type` == \"PerformerOf\", source == sailor_id) %&gt;%\n  pull(target) %&gt;%\n  as.character()\n\nsailor_song_indices &lt;- id_map %&gt;%\n  filter(id %in% sailor_song_ids) %&gt;%\n  pull(index)\n\n# Step 6\ndist_matrix &lt;- distances(g, v = sailor_song_indices, mode = \"out\")\n\n# Step 7\ndist_df &lt;- as.data.frame(dist_matrix) %&gt;%\n  rownames_to_column(\"sailor_song_index\") %&gt;%\n  pivot_longer(-sailor_song_index, names_to = \"influenced_index\", values_to = \"dist_from_sailor\") %&gt;%\n  filter(is.finite(dist_from_sailor)) %&gt;%\n  mutate(across(everything(), as.integer))\n\n# Step 8\n# Map indices back to node IDs\ndist_df &lt;- dist_df %&gt;%\n  left_join(nodes_indexed %&gt;% select(index, id), by = c(\"sailor_song_index\" = \"index\")) %&gt;%\n  rename(sailor_song_id = id) %&gt;%\n  left_join(nodes_indexed %&gt;% select(index, id), by = c(\"influenced_index\" = \"index\")) %&gt;%\n  rename(influenced_song_id = id)\n\n# Get song names\nsong_names &lt;- nodes_tbl %&gt;%\n  filter(`Node Type` == \"Song\") %&gt;%\n  select(id, song_name = name)\n\ndist_named &lt;- dist_df %&gt;%\n  left_join(song_names, by = c(\"sailor_song_id\" = \"id\")) %&gt;%\n  rename(sailor_song = song_name) %&gt;%\n  left_join(song_names, by = c(\"influenced_song_id\" = \"id\")) %&gt;%\n  rename(influenced_song = song_name)\n\n# Step 9\ncreative_roles &lt;- c(\"PerformerOf\", \"ComposerOf\", \"LyricistOf\", \"ProducerOf\")\n\ninfluenced_edges &lt;- edges_tbl %&gt;%\n  filter(`Edge Type` %in% creative_roles,\n         target %in% dist_named$influenced_song_id,\n         source %in% oceanus_collaborators$id) %&gt;%\n  mutate(across(c(source, target), as.character))\n\nfinal_result &lt;- influenced_edges %&gt;%\n  left_join(nodes_tbl %&gt;% select(id, collaborator_name = name), by = c(\"source\" = \"id\")) %&gt;%\n  left_join(dist_named, by = c(\"target\" = \"influenced_song_id\"), relationship = \"many-to-many\") %&gt;%\n  select(collaborator_name, influenced_song, sailor_song, dist_from_sailor) %&gt;%\n  arrange(dist_from_sailor, collaborator_name)\n\n\nfinal_result &lt;- final_result %&gt;% filter(!is.na(sailor_song))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#c4.-results",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#c4.-results",
    "title": "Take-Home Exercise 2",
    "section": "C4. Results",
    "text": "C4. Results\nWe identified a subset of Oceanus Folk collaborators whose work was musically influenced by Sailor Shift, either directly or through multi-hop influence paths. Each influence link was traced from one of Sailor’s original songs through the musical knowledge graph, focusing on CoverOf, InterpolatesFrom, InStyleOf, and related relationships.\nWe produced a summary table and influence network diagram showing:\n\nThe collaborator name\nTheir influenced song\nThe original Sailor Shift song\nThe number of hops from Sailor’s song to theirs\n\nSongs like “Saltwater Hymn” and “Moon Over the Tide” played a key role in spreading Sailor Shift’s influence to other artists, even through several layers of connection.\n\nhead(final_result, 20)\n\n# A tibble: 16 × 4\n   collaborator_name  influenced_song               sailor_song dist_from_sailor\n   &lt;chr&gt;              &lt;chr&gt;                         &lt;chr&gt;                  &lt;int&gt;\n 1 Tao Gao            Silent Steps in the Forest's… Moon Over …                1\n 2 Tao Gao            Silent Steps in the Forest's… Moon Over …                1\n 3 Guiying Lu         Ripples and Whispers          Saltwater …                2\n 4 Guiying Lu         Ripples and Whispers          Saltwater …                2\n 5 Juan Gao           Ripples and Whispers          Saltwater …                2\n 6 Min Fu             Whispers of Finality          Moon Over …                2\n 7 Min Tao            Ripples and Whispers          Saltwater …                2\n 8 Min Tao            Ripples and Whispers          Saltwater …                2\n 9 David Schultz      Sunlight Whispers             Saltwater …                3\n10 Heather Wood       Sunlight Whispers             Saltwater …                3\n11 Jacqueline Dickson Sunlight Whispers             Saltwater …                3\n12 Jonathan Young     Sunlight Whispers             Saltwater …                3\n13 Jun Guo            Sunlight Whispers             Saltwater …                3\n14 Jun Guo            Sunlight Whispers             Saltwater …                3\n15 Laura Jefferson    Sunlight Whispers             Saltwater …                3\n16 Min Fu             Whispers of Finality          Saltwater …                4\n\n\n\nKey Insight:\nSailor Shift’s artistic influence extended well beyond her direct circle of collaborators. Her music indirectly shaped the work of several artists in the Oceanus Folk scene—highlighting her central role as both a founder and a source of inspiration for the genre.\n\n\nShow the code\nlibrary(tidygraph)\nlibrary(ggraph)\nlibrary(ggforce)\n\n# Step 1: Prepare nodes\nnode_table &lt;- final_result %&gt;%\n  pivot_longer(cols = c(sailor_song, influenced_song, collaborator_name),\n               names_to = \"type\", values_to = \"label\") %&gt;%\n  distinct(label, type) %&gt;%\n  mutate(id = row_number())\n\n# Step 2: Map each node label to ID\nlabel_to_id &lt;- node_table %&gt;% select(label, id)\n\n# Step 3: Build edges\nedges_song_to_song &lt;- final_result %&gt;%\n  select(from = sailor_song, to = influenced_song) %&gt;%\n  left_join(label_to_id, by = c(\"from\" = \"label\")) %&gt;%\n  rename(from_id = id) %&gt;%\n  left_join(label_to_id, by = c(\"to\" = \"label\")) %&gt;%\n  rename(to_id = id) %&gt;%\n  select(from = from_id, to = to_id) %&gt;%\n  mutate(type = \"influence\")\n\nedges_song_to_person &lt;- final_result %&gt;%\n  select(from = influenced_song, to = collaborator_name) %&gt;%\n  left_join(label_to_id, by = c(\"from\" = \"label\")) %&gt;%\n  rename(from_id = id) %&gt;%\n  left_join(label_to_id, by = c(\"to\" = \"label\")) %&gt;%\n  rename(to_id = id) %&gt;%\n  select(from = from_id, to = to_id) %&gt;%\n  mutate(type = \"collaboration\")\n\n# Add dist_from_sailor to influence edges\nedges_song_to_song &lt;- final_result %&gt;%\n  select(from = sailor_song, to = influenced_song, dist_from_sailor) %&gt;%\n  left_join(label_to_id, by = c(\"from\" = \"label\")) %&gt;%\n  rename(from_id = id) %&gt;%\n  left_join(label_to_id, by = c(\"to\" = \"label\")) %&gt;%\n  rename(to_id = id) %&gt;%\n  select(from = from_id, to = to_id, dist_from_sailor) %&gt;%\n  mutate(type = \"influence\")\n\n# Combine all edges\nedges_all &lt;- bind_rows(edges_song_to_song, edges_song_to_person)\n\n# Step 4: Build graph\ng &lt;- tbl_graph(nodes = node_table, edges = edges_all, directed = TRUE)\n\n\nlayout &lt;- create_layout(g, layout = \"fr\")\n\n# Pull node positions by index\nnodes_pos &lt;- layout %&gt;%\n  select(.ggraph.index, x, y)\n\n# Join coordinates to edge table\nedges_label_data &lt;- edges_all %&gt;%\n  filter(type == \"influence\" & !is.na(dist_from_sailor)) %&gt;%\n  left_join(nodes_pos, by = c(\"from\" = \".ggraph.index\")) %&gt;%\n  rename(x_from = x, y_from = y) %&gt;%\n  left_join(nodes_pos, by = c(\"to\" = \".ggraph.index\")) %&gt;%\n  rename(x_to = x, y_to = y) %&gt;%\n  mutate(\n    x = (x_from + x_to) / 2,\n    y = (y_from + y_to) / 2,\n    label = paste0(dist_from_sailor, \" hop\", ifelse(dist_from_sailor &gt; 1, \"s\", \"\"))\n  )\n\n\n\n\nPlot Network Graph\n\n\nShow the code\nggraph(layout) +\n  geom_edge_link(aes(color = type),\n                 arrow = arrow(length = unit(3, \"mm\")),\n                 end_cap = circle(2, 'mm')) +\n\n  geom_text(data = edges_label_data,\n            aes(x = x, y = y, label = label),\n            size = 3, fontface = \"italic\", color = \"black\") +\n\n  geom_node_point(aes(color = type), size = 4) +\n  geom_node_text(aes(label = label), repel = TRUE, size = 3) +\n\n  scale_edge_color_manual(values = c(\"influence\" = \"blue\", \"collaboration\" = \"darkgreen\")) +\n  scale_color_manual(values = c(\n    sailor_song = \"lightblue\",\n    influenced_song = \"gold\",\n    collaborator_name = \"lightgreen\"\n  )) +\n\n  theme_void() +\n  labs(\n    title = \"Sailor Shift's Influence on Oceanus Folk Collaborators\",\n    subtitle = \"Influence distances labeled along edges\"\n  )"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#a1.-convert-to-character-format-to-match",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#a1.-convert-to-character-format-to-match",
    "title": "Take-Home Exercise 2",
    "section": "A1. Convert to character format to match",
    "text": "A1. Convert to character format to match\n\n\nShow the code\nedges_tbl &lt;- edges_tbl %&gt;%\n  mutate(across(c(source, target), as.character))\n\nnodes_tbl &lt;- nodes_tbl %&gt;%\n  mutate(id = as.character(id))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#a2.-find-out-the-most-popular-artists-by-giving-them-score-and-rank",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#a2.-find-out-the-most-popular-artists-by-giving-them-score-and-rank",
    "title": "Take-Home Exercise 2",
    "section": "A2. Find out the most popular artists by giving them score and rank",
    "text": "A2. Find out the most popular artists by giving them score and rank\n\n\nShow the code\nlibrary(dplyr)\nlibrary(scales)\n\n# 1. Songs Performed\nsongs_performed &lt;- edges_tbl %&gt;%\n  filter(`Edge Type` == \"PerformerOf\") %&gt;%\n  count(source, name = \"songs_performed\")\n\n# 2. Collaborations (number of songs with more than one performer)\ncollaborations &lt;- edges_tbl %&gt;%\n  filter(`Edge Type` == \"PerformerOf\") %&gt;%\n  group_by(target) %&gt;%\n  filter(n() &gt; 1) %&gt;%\n  ungroup() %&gt;%\n  count(source, name = \"collabs\")\n\n# 3. Notable Mentions: number of notable songs/albums linked to the artist\nnotable_mentions &lt;- edges_tbl %&gt;%\n  filter(`Edge Type` %in% c(\"PerformerOf\", \"ComposerOf\", \"LyricistOf\", \"ProducerOf\")) %&gt;%\n  inner_join(\n    nodes_tbl %&gt;% filter(notable == TRUE) %&gt;% select(id), \n    by = c(\"target\" = \"id\")\n  ) %&gt;%\n  count(source, name = \"notable_mentions\")\n\n# 4. Influence Spread: songs by an artist that influenced others\ninfluence_types &lt;- c(\"CoverOf\", \"InStyleOf\", \"DirectlySamples\", \"InterpolatesFrom\", \"LyricalReferenceTo\")\n\ninfluence_spread &lt;- edges_tbl %&gt;%\n  filter(`Edge Type` %in% influence_types) %&gt;%\n  inner_join(\n    edges_tbl %&gt;% filter(`Edge Type` == \"PerformerOf\") %&gt;% select(song_id = target, artist_id = source),\n    by = c(\"source\" = \"song_id\")\n  ) %&gt;%\n  count(artist_id, name = \"influence_spread\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#a3.-log-to-amplify-small-differences",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#a3.-log-to-amplify-small-differences",
    "title": "Take-Home Exercise 2",
    "section": "A3. Log to amplify small differences",
    "text": "A3. Log to amplify small differences\nEach metric was log-normalized to account for scale variation. The resulting scores were combined into a final composite index for ranking.\n\nnormalize_log &lt;- function(x) {\n  ifelse(x == 0, 0, log1p(x))  # log(1 + x) handles zeros safely\n}"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#a4.-result",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#a4.-result",
    "title": "Take-Home Exercise 2",
    "section": "A4. Result",
    "text": "A4. Result\n\n\nShow the code\n# Combine all metrics into one table\nartist_metrics &lt;- songs_performed %&gt;%\n  full_join(collaborations,       by = \"source\") %&gt;%\n  full_join(notable_mentions,     by = \"source\") %&gt;%\n  full_join(influence_spread,     by = c(\"source\" = \"artist_id\")) %&gt;%\n  left_join(nodes_tbl %&gt;% select(id, name), by = c(\"source\" = \"id\")) %&gt;%\n  replace_na(list(songs_performed = 0, collabs = 0, notable_mentions = 0, influence_spread = 0))\n\n# Normalize each metric (0–1 scale)\nnormalize &lt;- function(x) ifelse(max(x) == min(x), 0, (x - min(x)) / (max(x) - min(x)))\n\nartist_metrics_scaled &lt;- artist_metrics %&gt;%\n  mutate(across(c(songs_performed, collabs, notable_mentions, influence_spread), normalize_log)) %&gt;%\n  mutate(final_score = songs_performed + collabs + notable_mentions + influence_spread)\n\n\n# Sort by final_score and view\nartist_metrics_scaled %&gt;%\n  arrange(desc(final_score))\n\n\n# A tibble: 11,500 × 7\n   source songs_performed collabs notable_mentions influence_spread name        \n   &lt;chr&gt;            &lt;dbl&gt;   &lt;dbl&gt;            &lt;dbl&gt;            &lt;dbl&gt; &lt;chr&gt;       \n 1 1716              3.14    3.00             3.64             4.32 Kimberly Sn…\n 2 2668              2.89    2.83             3.61             3.93 Ping Tian   \n 3 16744             2.83    2.48             3.56             4.25 Quattro Voci\n 4 2538              2.77    2.71             3.53             3.87 Angelika Os…\n 5 2070              2.83    2.40             3.81             3.83 Jay Walters \n 6 551               3.04    1.79             3.91             3.87 Szymon Pyć  \n 7 1098              2.71    1.95             3.37             4.50 Guiying Bai \n 8 1719              2.71    2.71             2.77             4.08 Gerald Mull…\n 9 2069              2.56    2.48             3.26             3.91 Andrew Will…\n10 30                2.77    2.40             3.53             3.47 Megan Benne…\n# ℹ 11,490 more rows\n# ℹ 1 more variable: final_score &lt;dbl&gt;"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#a5.-plot-top-artists",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#a5.-plot-top-artists",
    "title": "Take-Home Exercise 2",
    "section": "A5. Plot Top Artists",
    "text": "A5. Plot Top Artists\nThe bar chart below highlights the artists with the highest overall scores. This ranking guided our selection of two comparison artists alongside Sailor Shift.\n\n\nShow the code\ntop_artists_plot &lt;- artist_metrics_scaled %&gt;%\n  arrange(desc(final_score)) %&gt;%\n  slice(1:10)  # or slice(1:5) for top 5\n\n\nggplot(top_artists_plot, aes(x = reorder(name, final_score), y = final_score)) +\n  geom_col(fill = \"steelblue\") +\n  geom_text(aes(label = round(final_score, 2)), \n            hjust = -0.1, size = 3) +  # Score label beside bar\n  coord_flip() +\n  labs(\n    title = \"Top 10 Artists by Overall Popularity & Influence\",\n    x = \"Artist\",\n    y = \"Final Composite Score\"\n  ) +\n  theme_minimal() +\n  theme(plot.title = element_text(face = \"bold\"))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#a6.-career-comparison-sailor-shift-kimberly-snyder-and-ping-tian",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#a6.-career-comparison-sailor-shift-kimberly-snyder-and-ping-tian",
    "title": "Take-Home Exercise 2",
    "section": "A6. Career Comparison: Sailor Shift, Kimberly Snyder, and Ping Tian",
    "text": "A6. Career Comparison: Sailor Shift, Kimberly Snyder, and Ping Tian\nTo examine their musical trajectories, we visualized how each artist evolved across three dimensions:\n\nSongs Performed Per Year\nNumber of Collaborations Per Year\nNotable Mentions Per Year\n\nThese are plotted in a multi-panel line graph, revealing when each artist was most active and how diversified their involvement was.\n\nSongs Performed Per Year\n\n\nShow the code\nsongs_performed_yearly &lt;- edges_tbl %&gt;%\n  filter(`Edge Type` == \"PerformerOf\") %&gt;%\n  inner_join(nodes_tbl %&gt;% select(id, release_year = release_date), \n             by = c(\"target\" = \"id\")) %&gt;%\n  inner_join(nodes_tbl %&gt;% select(id, artist = name), \n             by = c(\"source\" = \"id\")) %&gt;%\n  filter(artist %in% c(\"Sailor Shift\", \"Kimberly Snyder\", \"Ping Tian\")) %&gt;%\n  group_by(artist, release_year) %&gt;%\n  summarise(songs_performed = n(), .groups = \"drop\")\n\n\n\n\nNumber of Collaborations Per Year\n\n\nShow the code\n# Step 1: Get all PerformerOf edges and join release year\nperformer_songs &lt;- edges_tbl %&gt;%\n  filter(`Edge Type` == \"PerformerOf\") %&gt;%\n  inner_join(nodes_tbl %&gt;% select(id, release_year = release_date), \n             by = c(\"target\" = \"id\")) %&gt;%\n  rename(song_id = target, artist_id = source)\n\n# Step 2: Count artists per song\ncollab_counts &lt;- performer_songs %&gt;%\n  group_by(song_id, release_year) %&gt;%\n  filter(n() &gt; 1) %&gt;%  # keep only collaborative songs\n  ungroup()\n\n# Step 3: Count how many times each artist appeared on collaborative songs per year\ncollaborations_yearly &lt;- collab_counts %&gt;%\n  inner_join(nodes_tbl %&gt;% select(id, artist = name), \n             by = c(\"artist_id\" = \"id\")) %&gt;%\n  filter(artist %in% c(\"Sailor Shift\", \"Kimberly Snyder\", \"Ping Tian\")) %&gt;%\n  group_by(artist, release_year) %&gt;%\n  summarise(collabs = n(), .groups = \"drop\")\n\n\n\n\nNotable Mentions Per Year\n\n\nShow the code\nnotables_yearly &lt;- edges_tbl %&gt;%\n  filter(`Edge Type` == \"PerformerOf\") %&gt;%\n  inner_join(nodes_tbl %&gt;% select(id, release_year = release_date, notable), \n             by = c(\"target\" = \"id\")) %&gt;%\n  filter(notable == TRUE) %&gt;%\n  inner_join(nodes_tbl %&gt;% select(id, artist = name), \n             by = c(\"source\" = \"id\")) %&gt;%\n  filter(artist %in% c(\"Sailor Shift\", \"Kimberly Snyder\", \"Ping Tian\")) %&gt;%\n  group_by(artist, release_year) %&gt;%\n  summarise(notable_mentions = n(), .groups = \"drop\")\n\n\n\n\nCombining them together\n\n\nShow the code\npopularity_df &lt;- songs_performed_yearly %&gt;%\n  full_join(collaborations_yearly, by = c(\"artist\", \"release_year\")) %&gt;%\n  full_join(notables_yearly, by = c(\"artist\", \"release_year\")) %&gt;%\n  replace_na(list(\n    songs_performed = 0,\n    collabs = 0,\n    notable_mentions = 0\n  ))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#a7.-plots",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#a7.-plots",
    "title": "Take-Home Exercise 2",
    "section": "A7. Plots",
    "text": "A7. Plots\n\nInfluence Over TimePopularity Metrics Over TimePopularity Index Change"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#a8.-summary-of-insights",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#a8.-summary-of-insights",
    "title": "Take-Home Exercise 2",
    "section": "A8. Summary of Insights",
    "text": "A8. Summary of Insights\n\nKimberly Snyder showed steady growth in both popularity and influence, supported by frequent collaborations and notable releases.\nPing Tian had a brief peak with some influence but lacked lasting visibility.\nSailor Shift, though less active, made a strong impact by subtly shaping musical trends.\n\nOverall, this suggests that being a rising star is not just about performing a lot as lasting success also comes from meaningful collaborations, recognition, and the ability to influence others."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#plot",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#plot",
    "title": "Take-Home Exercise 2",
    "section": "Plot",
    "text": "Plot\n\n\nShow the code\nlibrary(packcircles)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(viridis)\n\n# Step 1: Prepare data (sorted ascending so largest appears last/top)\ncircle_data &lt;- artist_metrics_scaled %&gt;%\n  filter(name %in% oceanus_collaborators$name, name != \"Sailor Shift\") %&gt;%\n  distinct(name, .keep_all = TRUE) %&gt;%\n  arrange(final_score) %&gt;%\n  slice_tail(n = 20) %&gt;%\n  rename(artist = name)\n\n# Step 2: Generate circle layout\npacking &lt;- circleProgressiveLayout(circle_data$final_score, sizetype = 'area')\ncircle_data &lt;- bind_cols(circle_data, packing)\n\n# Step 3: Build polygons\ncircle_polygons &lt;- circleLayoutVertices(packing, npoints = 50) %&gt;%\n  mutate(artist = rep(circle_data$artist, each = 51),\n         final_score = rep(circle_data$final_score, each = 51))\n\n# Step 4: Plot with legend\nggplot() +\n  geom_polygon(\n    data = circle_polygons,\n    aes(x = x, y = y, group = id, fill = final_score),\n    color = \"gray\", alpha = 0.8\n  ) +\n  \n  geom_text(\n    data = circle_data,\n    aes(x, y, label = artist),\n    color = \"black\", size = 2.5\n  ) +\n  scale_fill_viridis_c(option = \"C\", name = \"Final Score\") +\n  coord_equal() +\n  theme_void() +\n  theme(\n    legend.position = \"right\",\n    plot.title = element_text(face = \"bold\", size = 14)\n  ) +\n  labs(\n    title = \"Top Oceanus Folk Collaborators (Circle-Packed by Final Score)\"\n  )"
  }
]